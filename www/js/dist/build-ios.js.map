{"version":3,"sources":["boot/EC.Boot.getProjects.js","boot/EC.Boot.handleDeviceEvents.js","boot/EC.Boot.init.js","boot/EC.Boot.onDeviceReady.js","utils/EC.DevicePosition.initGoogleMap.js","utils/EC.DevicePosition.js","utils/EC.DevicePosition.loadGoogleMapsApi.js","utils/EC.DevicePosition.updateGoogleMap.js","utils/EC.Notification.js","utils/EC.Ui.js","utils/EC.Utils.js","config/EC.Config.js","config/EC.Const.js","parsing/EC.Parse.js","parsing/EC.Parse.mapPositionToInput.js","parsing/EC.Parse.parseInputObject.js","parsing/EC.Parse.parseXML.js","routing/EC.Routing.branchInputsPageEvents.js","routing/EC.Routing.changePage.js","routing/EC.Routing.goBack.js","routing/EC.Routing.indexPageEvents.js","routing/EC.Routing.inputsPageEvents.js","localisation/EC.Dictionary.js","localisation/EC.Localise.js","model/database/Structure/EC.Branch.commitBranchForms.js","model/database/Structure/EC.Branch.commitBranchForms_IOS.js","model/database/Structure/EC.Branch.commitBranchInputOptions.js","model/database/Structure/EC.Branch.commitBranchInputs.js","model/database/Structure/EC.Branch.js","model/database/Structure/EC.CreateSQLiteDatabase.js","model/database/Structure/EC.Hierarchy.commitForms.js","model/database/Structure/EC.Hierarchy.commitForms_IOS.js","model/database/Structure/EC.Hierarchy.commitInputOptions.js","model/database/Structure/EC.Hierarchy.commitInputs.js","model/database/Structure/EC.Hierarchy.commitProject.js","model/database/Structure/EC.Hierarchy.js","model/database/Structure/EC.Structure.commitAll.js","model/database/Select/EC.Select.getAllProjectEntries.js","model/database/Select/EC.Select.getAllowDownloadEdits.js","model/database/Select/EC.Select.getBranchChildrenFiles.js","model/database/Select/EC.Select.getBranchEntries.js","model/database/Select/EC.Select.getBranchEntryKeys.js","model/database/Select/EC.Select.getBranchEntryValues.js","model/database/Select/EC.Select.getBranchFiles.js","model/database/Select/EC.Select.getBranchFormDetails.js","model/database/Select/EC.Select.getBranchFormLocalIDs.js","model/database/Select/EC.Select.getBranchForms.js","model/database/Select/EC.Select.getBranchInputs.js","model/database/Select/EC.Select.getBranchInputsLocalIDs.js","model/database/Select/EC.Select.getBranchSyncedFiles.js","model/database/Select/EC.Select.getChildEntries.js","model/database/Select/EC.Select.getChildEntriesForDeletion.js","model/database/Select/EC.Select.getCountBranchEntries.js","model/database/Select/EC.Select.getEntries.js","model/database/Select/EC.Select.getEntryKeys.js","model/database/Select/EC.Select.getEntryValues.js","model/database/Select/EC.Select.getForms.js","model/database/Select/EC.Select.getFullParentPath.js","model/database/Select/EC.Select.getHierarchyChildrenFiles.js","model/database/Select/EC.Select.getHierarchyEntriesForDeletion.js","model/database/Select/EC.Select.getHierarchyFiles.js","model/database/Select/EC.Select.getHierarchySyncedFiles.js","model/database/Select/EC.Select.getInputs.js","model/database/Select/EC.Select.getLocalInputIDs.js","model/database/Select/EC.Select.getProjectRowId_IOS.js","model/database/Select/EC.Select.getProjects.js","model/database/Select/EC.Select.getSyncedEntryKeys.js","model/database/Select/EC.Select.hasBranchMediaFiles.js","model/database/Select/EC.Select.js","model/database/Select/upload/EC.Select.getBranchForms.js","model/database/Select/upload/EC.Select.getOneBranchAudioFile.js","model/database/Select/upload/EC.Select.getOneBranchEntry.js","model/database/Select/upload/EC.Select.getOneBranchMediaFile.js","model/database/Select/upload/EC.Select.getOneBranchMediaPerType.js","model/database/Select/upload/EC.Select.getOneBranchPhotoFile.js","model/database/Select/upload/EC.Select.getOneBranchVideoFile.js","model/database/Select/upload/EC.Select.getOneHierarchyEntry.js","model/database/Select/upload/EC.Select.getOneHierarchyMediaFile.js","model/database/Select/upload/EC.Select.getOneHierarchyMediaPerType.js","model/database/Select/upload/EC.Select.getUploadURL.js","model/database/Update/EC.Update.commitBranchForm.js","model/database/Update/EC.Update.countSyncedDeleted.js","model/database/Update/EC.Update.emptyMediaValues.js","model/database/Update/EC.Update.flagOneFileAsSynced.js","model/database/Update/EC.Update.js","model/database/Update/EC.Update.setBranchEntryAsSynced.js","model/database/Update/EC.Update.setCachedBranchesAsStored.js","model/database/Update/EC.Update.setHierarchyEntryAsSynced.js","model/database/Update/EC.Update.unsyncAllEntries.js","model/database/Update/EC.Update.unsyncOneHierarchyEntry.js","model/database/Update/EC.Update.updateCountersOnEntriesDownload.js","model/database/Update/EC.Update.updateCountersOnEntriesRestore.js","model/database/Update/EC.Update.updateCountersOnSingleBranchEntryInsertion.js","model/database/Update/EC.Update.updateCountersOnSingleEntryDeletion.js","model/database/Update/EC.Update.updateCountersOnSingleEntryInsertion.js","model/database/Update/EC.Update.updateCountersOnSyncedEntriesDeletion.js","model/database/Update/EC.Update.updateHierarchyEntryValues.js","model/database/Create/EC.Create.commitRemoteEntry.js","model/database/Create/EC.Create.insertBranchDataRows.js","model/database/Create/EC.Create.insertBranchFormValues.js","model/database/Create/EC.Create.insertFormValues.js","model/database/Create/EC.Create.js","model/database/Delete/EC.Delete.deleteAllEntries.js","model/database/Delete/EC.Delete.deleteAllSynced.js","model/database/Delete/EC.Delete.deleteBranchEntry.js","model/database/Delete/EC.Delete.deleteCachedBranchEntries.js","model/database/Delete/EC.Delete.deleteChildEntries.js","model/database/Delete/EC.Delete.deleteEntry.js","model/database/Delete/EC.Delete.deleteProject.js","model/database/Delete/EC.Delete.js","model/database/Delete/EC.Delete.removeHierarchyChildrenEntries.js","model/database/Delete/EC.Delete.removeHierarchyEntry.js","model/database/Delete/EC.Delete.removeLinkedBranchChildEntries.js","model/database/Delete/EC.Delete.removeLinkedBranchEntries.js","model/database/Delete/EC.Delete.removeSyncedBranchEntries.js","model/database/Delete/EC.Delete.removeSyncedHierarchyEntries.js","model/file/EC.File.backup.js","model/file/EC.File.copyVideo.js","model/file/EC.File.createMediaDirs_iOS.js","model/file/EC.File.deleteAllMedia.js","model/file/EC.File.hasBackup.js","model/file/EC.File.moveIOS.js","model/file/EC.File.moveVideoIOS.js","model/file/EC.File.remove.js","model/file/EC.File.restoreFromBackup.js","model/file/EC.File.uploadFile.js","model/file/EC.File.writeProjectDataAsCSV.js","controller/branch_inputs/EC.BranchInputs.js","controller/branch_inputs/navigation/EC.BranchInputs.backToHierarchyForm.js","controller/branch_inputs/navigation/EC.BranchInputs.bindBackBtn.js","controller/branch_inputs/navigation/EC.BranchInputs.gotoNextPage.js","controller/branch_inputs/navigation/EC.BranchInputs.gotoPrevPage.js","controller/branch_inputs/navigation/EC.BranchInputs.onNextBtnTapped.js","controller/branch_inputs/navigation/EC.BranchInputs.onPrevBtnTapped.js","controller/branch_inputs/navigation/EC.BranchInputs.popInputsTrail.js","controller/branch_inputs/navigation/EC.BranchInputs.pushInputsTrail.js","controller/branch_inputs/navigation/EC.BranchInputs.spliceInputsTrail.js","controller/branch_inputs/render/EC.BranchInputs.prepareFeedback.js","controller/branch_inputs/render/EC.BranchInputs.prepareFirstInput.js","controller/branch_inputs/render/EC.BranchInputs.renderFeedbackView.js","controller/branch_inputs/render/EC.BranchInputs.renderInput.js","controller/branch_inputs/render/EC.BranchInputs.renderInputView.js","controller/branch_inputs/render/EC.BranchInputs.renderSaveConfirmView.js","controller/branch_inputs/render/EC.BranchInputs.renderStoreEditFeedback.js","controller/branch_inputs/render/EC.BranchInputs.updateFormCompletion.js","controller/branch_inputs/store/EC.BranchInputs.amendSkippedValues.js","controller/branch_inputs/store/EC.BranchInputs.buildRows.js","controller/branch_inputs/store/EC.BranchInputs.js","controller/branch_inputs/store/EC.BranchInputs.prepareStoreEdit.js","controller/branch_inputs/store/EC.BranchInputs.saveValuesOnExit.js","controller/branch_inputs/store/EC.BranchInputs.storeData.js","controller/branch_inputs/types/EC.BranchAudio.js","controller/branch_inputs/types/EC.BranchBarcode.js","controller/branch_inputs/types/EC.BranchCheckbox.js","controller/branch_inputs/types/EC.BranchDate.js","controller/branch_inputs/types/EC.BranchDecimal.js","controller/branch_inputs/types/EC.BranchDropdown.js","controller/branch_inputs/types/EC.BranchInteger.js","controller/branch_inputs/types/EC.BranchLocation.js","controller/branch_inputs/types/EC.BranchPhoto.js","controller/branch_inputs/types/EC.BranchRadio.js","controller/branch_inputs/types/EC.BranchText.js","controller/branch_inputs/types/EC.BranchTextarea.js","controller/branch_inputs/types/EC.BranchTime.js","controller/branch_inputs/types/EC.BranchVideo.js","controller/branch_inputs/values/EC.BranchInputs.getCachedInputValue.js","controller/branch_inputs/values/EC.BranchInputs.getCloneValue.js","controller/branch_inputs/values/EC.BranchInputs.getCurrentValue.js","controller/branch_inputs/values/EC.BranchInputs.isEmptyPrimaryKey.js","controller/branch_inputs/values/EC.BranchInputs.setCachedInputValue.js","controller/branch_inputs/values/EC.BranchInputs.validateValue.js","controller/download/EC.Download.js","controller/entries/EC.Entries.getBranchEntriesList.js","controller/entries/EC.Entries.getBranchEntryValues.js","controller/entries/EC.Entries.getEntryValues.js","controller/entries/EC.Entries.getList.js","controller/entries/EC.Entries.js","controller/entries/EC.Entries.renderBranchEntriesList.js","controller/entries/EC.Entries.renderBranchEntryValues.js","controller/entries/EC.Entries.renderCachedList.js","controller/entries/EC.Entries.renderChildEntriesList.js","controller/entries/EC.Entries.renderEntryValues.js","controller/entries/EC.Entries.renderList.js","controller/export/EC.EmailBackup.js","controller/export/EC.Export.saveProjectDataToCSV.js","controller/forms/EC.Forms.getList.js","controller/forms/EC.Forms.renderList.js","controller/inputs/EC.Inputs.js","controller/inputs/navigation/EC.Inputs.backToBranchEntryValuesList.js","controller/inputs/navigation/EC.Inputs.backToEntriesList.js","controller/inputs/navigation/EC.Inputs.backToEntryValuesList.js","controller/inputs/navigation/EC.Inputs.bindBackBtn.js","controller/inputs/navigation/EC.Inputs.gotoNextPage.js","controller/inputs/navigation/EC.Inputs.gotoPrevPage.js","controller/inputs/navigation/EC.Inputs.onNextBtnTapped.js","controller/inputs/navigation/EC.Inputs.onPrevBtnTapped.js","controller/inputs/navigation/EC.Inputs.popInputsTrail.js","controller/inputs/navigation/EC.Inputs.pushInputsTrail.js","controller/inputs/navigation/EC.Inputs.spliceInputsTrail.js","controller/inputs/render/EC.Inputs.prepareFeedback.js","controller/inputs/render/EC.Inputs.prepareFirstInput.js","controller/inputs/render/EC.Inputs.renderFeedbackView.js","controller/inputs/render/EC.Inputs.renderInput.js","controller/inputs/render/EC.Inputs.renderInputView.js","controller/inputs/render/EC.Inputs.renderSaveConfirmView.js","controller/inputs/render/EC.Inputs.renderStoreEditFeedback.js","controller/inputs/store/EC.Inputs.amendSkippedValues.js","controller/inputs/store/EC.Inputs.buildRows.js","controller/inputs/store/EC.Inputs.prepareStoreEdit.js","controller/inputs/store/EC.Inputs.saveValuesOnExit.js","controller/inputs/store/EC.Inputs.storeData.js","controller/inputs/types/EC.AddBranch.js","controller/inputs/types/EC.Audio.js","controller/inputs/types/EC.Barcode.js","controller/inputs/types/EC.Checkbox.js","controller/inputs/types/EC.Date.js","controller/inputs/types/EC.Decimal.js","controller/inputs/types/EC.Dropdown.js","controller/inputs/types/EC.Integer.js","controller/inputs/types/EC.Location.js","controller/inputs/types/EC.Photo.js","controller/inputs/types/EC.Radio.js","controller/inputs/types/EC.Text.js","controller/inputs/types/EC.Textarea.js","controller/inputs/types/EC.Time.js","controller/inputs/types/EC.Video.js","controller/inputs/values/EC.Inputs.getCachedInputValue.js","controller/inputs/values/EC.Inputs.getCloneValue.js","controller/inputs/values/EC.Inputs.getCurrentValue.js","controller/inputs/values/EC.Inputs.getMainFormCurrentKeyValue.js","controller/inputs/values/EC.Inputs.isEmptyPrimaryKey.js","controller/inputs/values/EC.Inputs.setCachedInputValue.js","controller/inputs/values/EC.Inputs.validateValue.js","controller/inputs/values/EC.Inputs.valuesMatch.js","controller/projects/EC.Project.backupCurrentProject.js","controller/projects/EC.Project.js","controller/projects/EC.Project.loadRemoteXML.js","controller/projects/EC.Project.renderAddProjectView.js","controller/projects/EC.Project.request.js","controller/projects/EC.Project.restoreFromBackup.js","controller/settings/EC.Settings.js","controller/upload/EC.Upload.bindUploadButtons.js","controller/upload/EC.Upload.handleMedia.js","controller/upload/EC.Upload.js","controller/upload/EC.Upload.postBranchEntries.js","controller/upload/EC.Upload.postOneBranchEntry.js","controller/upload/EC.Upload.postOneHierarchyEntry.js","controller/upload/EC.Upload.prepareOneBranchEntry.js","controller/upload/EC.Upload.prepareOneHierarchyEntry.js","controller/upload/EC.Upload.renderUploadView.js","controller/upload/EC.Upload.renderUploadViewFeedback.js","controller/upload/EC.Upload.uploadNextFile.js","model/database/Test/EC.Test.insertEntries.js"],"names":["EC","window","Boot","getProjects","localStorage","is_db_set","Const","SET","console","log","Project","getList","$","when","DBAdapter","init","then","handleDeviceEvents","onBackButton","page_id","mobile","activePage","attr","INDEX","navigator","app","exitApp","BARCODE","BRANCH_PREFIX","is_dismissing_barcode","PHOTO","swipebox","isOpen","Routing","goBack","click","removeItem","onResume","document","addEventListener","jqmReady","Deferred","cordovaReady","Utils","isChrome","resolve","JSON","originalParse","parse","text","DEBUG","sessionStorage","app_loaded","clear","undefined","project_server_url","EPICOLLECT_SERVER_URL","bind","autoload_project_url","handleOpenURL","url","project_name_parts","project_name","split","onDeviceReady","DEVICE_LANGUAGE","Localise","setLanguage","BASE_URI","location","href","replace","device","version","setMediaDirPaths","platform","IOS","File","createMediaDirs","setIOSRootPath","setIOSPersistentStoragePath","ANDROID","globalization","getLocaleName","locale","device_language","value","substring","stringify","Object","keys","Dictionary","indexOf","getPreferredLanguage","language","db","openDatabase","indexPageEvents","inputsPageEvents","branchInputsPageEvents","Ui","bindBtnStates","QUERY_LIMIT","ITEMS_PER_PAGE","QUERY_ENTRIES_OFFSET","QUERY_CHILD_ENTRIES_OFFSET","QUERY_PARENT_ENTRIES_OFFSET","FastClick","attach","body","setPhoneUUID","uuid","IDFVPlugin","getIdentifier","result","error","project_names","plugins","appPreferences","fetch","DevicePosition","module","initGoogleMap","self","this","deferred","current_position","google","maps","LatLng","coords","latitude","longitude","map_options","center","lat","lng","zoom","disableDefaultUI","map","Map","getElementById","marker","Marker","position","draggable","circle","Circle","radius","accuracy","fillColor","fillOpacity","strokeColor","strokeOpacity","bindTo","fitBounds","getBounds","event","addListenerOnce","setTimeout","addListener","debug","latLng","Notification","showToast","promise","timeout","is_first_attempt","is_api_loaded","is_enhanced_map_on","parseInt","watchTimeout","Infinity","getCurrentPosition","onSuccess","setCoords","onError","reject","geolocation","maximumAge","enableHighAccuracy","watchPosition","onWatchSuccess","clearWatch","geolocation_request","onWatchError","code","showAlert","getTranslation","message","altitude","altitude_accuracy","altitudeAccuracy","heading","getCoordsFormattedText","getCoordsEmptyText","loadGoogleMapsApi","mapIsLoaded","hasGoodConnection","getScript","done","script","textStatus","fail","jqxhr","settings","exception","updateGoogleMap","the_title","the_message","notification","alert","askConfirm","onConfirmCallback","has_data_to_save","the_current_input","is_branch","response","current_input","_confirmCallback","btn_index","executeFunctionByName","_saveConfirmCallback","showProgressDialog","BranchInputs","saveValuesOnExit","Inputs","confirm","duration","toast","show","a","b","title","loading","textVisible","theme","html","activityStart","ActivityIndicator","hideProgressDialog","activityStop","edit_mode","hide","colors","tap_action_overlay","default_button_background","list_item_background","fa_entry_value_embedded_btn_default","_this","on","e","preventDefault","stopPropagation","css","isNumber","n","isNaN","parseFloat","isFinite","getParameterByName","name","regex","RegExp","results","exec","search","decodeURIComponent","isAudioFileStored","the_cache_path","_the_file_path","file_path","cache_path","file_path_parts","pop","join","generateAudioFileName","filename","getTimestamp","is_good","connection","type","Connection","NONE","UNKNOWN","the_uuid","UUID","getPhoneUUID","_generateGUID","d","Date","getTime","guid","c","r","Math","random","floor","toString","getGenKey","sqlitePlugin","isOpera","opera","userAgent","chrome","sleep","milliseconds","i","start","parseTimestampDate2Posix","the_format","the_type","elements","iLength","format","formatted_elements","length","push","parseDate","the_date","date","day","getDate","month","getMonth","year","getFullYear","format_parts","parsed_date_parts","parseIOSDate","the_ios_date","date_parts","parseTime","hours24","getHours","hours12","minutes","getMinutes","seconds","getSeconds","_addZero","num","parseIOSTime","the_ios_time","time","time_parts","setForms","the_forms","forms","getParentAndChildForms","the_form_id","parent_form_id","parent_form_name","child_form_id","child_form_name","form_id","_id","parent","pname","child","cname","parseLocationString","the_string","string","temp_array","SKIPPED","isURL","regexp","test","isValidEmail","the_email","re","getForms","isGPSEnabled","_onGpsChecked","isEnabled","cordova","diagnostic","isLocationEnabled","functionName","context","args","Array","prototype","slice","call","arguments","splice","namespaces","func","apply","parseJumpString","the_jump_string","raw_jumps","obj","parsed_jumps","jump_to","charAt","jump_when","JUMP_VALUE_IS_NOT","jump_value","substr","JUMP_ALWAYS","JUMP_FIELD_IS_BLANK","JUMP_VALUE_IS","getLocalFormID","the_form_name","isFormGenKeyHidden","is_genkey_hidden","isBranchFormGenKeyHidden","form","branch_form","getLocalInputID","the_ref","inputs","local_input_ids","ref","getFormPrimaryKeyRef","key","projectHasBranches","has_branches","getFormParentPrimaryKeyRef","getFormByID","getEntriesCount","count","entries","getParentFormByChildID","the_child_form_id","updateFormsObj","getChildrenForms","changeHashNavigationDirection","the_hash","the_new_direction","hash","direction","inArray","the_array","the_value","is_case_sensitive","findWord","array","word","item","toLowerCase","getVersionName","version_name","getAppVersion","the_version_name","getAppName","app_name","the_app_name","getExportDirName","dir","getPageBaseURI","base_uri","KITKAT_REGEX","LOLLIPOP_REGEX","ANDROID_ASSETS_ABS_PATH","IOS_ASSETS_ABS_PATH","isValidValue","the_input","the_clone_value","validation","is_valid","input","clone_value","BRANCH","INTEGER","DECIMAL","is_primary_key","ENTRY_ROOT_PATH_SEPARATOR","match","has_double_check","max_range","min_range","is_required","DROPDOWN","RADIO","CHECKBOX","NO_OPTION_SELECTED","fileSystem","documents_path","toURL","root","nativeURL","resolveLocalFileSystemURL","file","applicationDirectory","requestFileSystem","LocalFileSystem","PERSISTENT","IOS_APP_PRIVATE_URI","PHOTO_DIR","AUDIO_DIR","VIDEO_DIR","getIOSFilename","the_filenames","the_current_filename","filenames","current_filename","timestamp","mapLabelToValue","the_inputs","_getInputByRef","_getCheckboxLabels","j","value_as_array","jLength","options","labels","trim","label","_getDropdownOrRadioLabel","mapped_label","hasConnection","network","Config","unique","concat","searchElement","fromIndex","pivot","TypeError","abs","equals","is_strict","sort","String","startsWith","defineProperty","enumerable","configurable","writable","searchString","trunc","hasOwnProperty","hasDontEnumBug","propertyIsEnumerable","dontEnums","dontEnumsLength","prop","ANDROID_APP_PRIVATE_URI","TEXT","TEXTAREA","DATE","TIME","LOCATION","AUDIO","VIDEO","BRANCH_VIEWS_DIR","INPUT_VIEWS_DIR","VIEWS_DIR","HTML_FILE_EXT","PHOTO_FILE_EXTENSION","TRANSACTION_SUCCESS","TRANSACTION_ERROR","DELETE","DELETE_SINGLE_ENTRY","RESTORE","INSERT","DOWNLOAD","START_HIERARCHY_UPLOAD","STOP_HIERARCHY_UPLOAD","HIERARCHY_RECURSION","START_BRANCH_UPLOAD","STOP_BRANCH_UPLOAD","BRANCH_RECURSION","ADDING","FORWARD","BACKWARD","EDITING","PREVIOUS","NEXT","VIEW","INDEX_VIEW","UPLOAD_VIEW","DOWNLOAD_VIEW","EMAIL_BACKUP_VIEW","ENTRIES_LIST_VIEW","SETTINGS_VIEW","ADD_PROJECT_VIEW","FORMS_VIEW","SAVE_CONFIRM_VIEW","BRANCH_ENTRIES_LIST_VIEW","BRANCH_SAVE_CONFIRM_VIEW","BRANCH_FEEDBACK_VIEW","PROJECT_NAME_MAX_LENGTH","FORM_NAME_MAX_LENGTH","INPUTS","PROJECT_LIST","FORMS","FILLER","PHOTO_AVAILABLE_LABEL","PHOTO_NOT_AVAILABLE_LABEL","AUDIO_AVAILABLE_LABEL","AUDIO_NOT_AVAILABLE_LABEL","VIDEO_AVAILABLE_LABEL","VIDEO_NOT_AVAILABLE_LABEL","END_OF_FORM","PROXY","CACHED_FILENAME_LENGTH","ENGLISH","ITALIAN","Parse","is_form_genkey_hidden","form_key","project","parsed_forms","branch_inputs","form_inputs_positions","input_list","branch_options","getHierarchyForms","hierarchy_forms","getBranchForms","branch_forms","mapPositionToInput","the_xml","form_children","form_num","positions","main","form_name","hierarchy_skip_key","xml","input_positions","form_position","branch_skip_keys","find","each","children","index","_getInputPosition","parseInputArray","the_raw_array","the_form_num","the_form_type","parseInputObject","the_raw_input","input_position","form_type","parsed_input","datetime_format","has_jump","jumps","has_advanced_jump","is_genkey","default_value","is_searchable","is_title","branch_form_name","parseXML","the_data","form_has_media","form_has_branches","data","malformed_json","json","raw_forms","xml2json","ecml","model","submission","allowDownloadEdits","downloadFromServer","uploadToServer","total_hierarchy_forms","total_branch_forms","form_obj","isArray","barcode","audio","video","photo","textarea","radio","select1","select","branch","total_inputs","has_media","renderInput","getInputAt","branch_current_position","next","trigger","renderSaveConfirmView","renderFeedbackView","changePage","the_view","the_path","page_uri","page","view","transition","reverse","changeHash","allowSamePageTransition","the_page_id","back_btn","inactive_tab","input_views_ids","branch_input_views_ids","hierarchy_views_ids","branch_views_ids","action_views_ids","back_nav_hash","back_nav_url","is_project_deleted","$query_param","delegateTarget","baseURI","Forms","decodeURI","Entries","getEntryValues","Settings","renderView","renderAddProjectView","EmailBackup","renderSendEmailView","Upload","renderUploadView","Download","renderDownloadView","silentScroll","previous_tapped_entry_Y","applyToPlaceholders","getBranchEntriesList","getBranchEntryValues","en","home","help","rate_us","add_project","loading_project","search_project","projects","filter_project","no_projects_found","project_list","type_project_name_here","tap_the","button","add","to","to_add","to_add_one","upload_to","upload_data","upload_images","upload_audios","upload_videos","remote_server_url","pagination","app_version","backup_data","restore_data","email_backup","download_remote_data","unsync_entries","delete_entries","export_all_entries_to_csv","export_all_entries_to_csv_confirm","delete_synced","delete_media","delete_project","show_more","no_entries_found","enter_email","email_backup_to","select_form_download","delete_entry","unsync_entry","prev","record","stop","play","recording","no_audio_available","scan","type_confirm","pk_not_editable","add_branch_form","list_branch_entries","set_location","take_photo","tap_to_store","store","store_edit","data_saved_success","branch_data_saved_success","add_another","list","add_video","play_video","back_to","project_already_loaded","exit","exit_confirm","value_exist","invalid_integer","invalid_decimal","pk_reserved_char","invalid_regex","values_unmatched","out_of_range","reserved_keyword","field_required","invalid_xml","connection_timeout","connection_lost","project_not_found_on_server","project_not_found","unknow_error","leaving_current_form","save_before_leave","edit_saved","missing_pk","gps_disabled","locating","wait","location_acquired","location_fail","location_service_fail","failed_because","download_success","parent_key_for_1","parent_key_for_2","parent_key_for_3","no_internet","invalid_email","invalid_email_client","generic_error","entry_unsynced","entry_deleted","all_data_synced","all_entries_deleted","data_exported_to_csv","all_media_deleted","all_synced_deleted","branch_entry_deleted","delete_branch_entry","delete_entry_confirm","unsync_entry_confirm","delete_entry_with_children_confirm","unsync_all_data","unsync_all_data_confirm","delete_project_confirm","delete_all_entries","delete_all_entries_confirm","delete_all_media","delete_all_media_confirm","delete_all_synced","delete_all_synced_confirm","backup_data_confirm","restore_data_confirm","warning","edited_jump","success","project_backup_success","project_deleted","project_no_spaces_allowed","project_empty_not_allowed","project_restored","upload_error","no_backup_saved","all_images_uploaded","all_audios_uploaded","all_videos_uploaded","uploading","data_upload_success","check_your_internet","settings_saved_success","questions","sending_message","backup_for","backup_for_project","is_attached","select_one_option","photo_available","no_photo","audio_available","no_audio","video_available","no_video","no","save","dismiss","it","project_restored_","the_key","key_to_lookup","translated_string","applyToHTML","the_language","strings","placeholders","Branch","project_insertId","branch_forms_IDs","branch_form_num_index","_errorCB","the_tx","the_result","_commitBranchFormsTX","tx","query","iLenght","id","executeSql","_commitBranchFormsSQLSuccess","insertId","_commitBranchFormsSuccessCB","commitBranchForms","the_branch_forms","the_project_insertId","transaction","branch_max_form_ID","_getHighestIdTX","reset_seq_query","_getHighestIdSQLSuccess","errorCB","_resetSequenceSQLSuccess","rows","_getHighestIdSuccessCB","branch_input_options","branch_inputs_IDs","_commitBranchInputOptionsTX","k","kLength","branch_input_id","_commitBranchInputOptionsSQLSuccess","_commitBranchInputOptionsSuccessCB","commitBranchInputOptions","the_brach_input_options","the_branch_inputs_ids","branch_input_option_index","branch_forms_with_media","_commitBranchInputsTX","current_form_num","current_form_id","input_type","input_ref","_commitBranchInputsSQLSuccess","_commitBranchInputsSuccessCB","commitBranchInputs","the_branch_inputs","the_branch_forms_ids","the_error","cq_ec_projects","cq_ec_forms","cq_ec_branch_forms","cq_ec_inputs","cq_ec_branch_inputs","cq_ec_input_options","cq_ec_branch_input_options","cq_ec_data","cq_ec_branch_data","tq_delete_forms","tq_delete_branch_forms","tq_delete_inputs","tq_delete_branch_inputs","tq_delete_input_options","tq_delete_branch_input_options","tq_delete_ec_data","tq_delete_ec_branch_data","dtq_delete_forms","dtq_delete_branch_forms","dtq_delete_inputs","dtq_delete_branch_inputs","dtq_delete_input_options","dtq_delete_branch_input_options","dtq_delete_ec_data","dtq_delete_ec_branch_data","_initDB","_initSuccessCB","Hierarchy","forms_IDs","form_num_index","_commitFormsSQLSuccess","project_id","Delete","deleteProject","_commitFormsSuccessCB","_commitFormsTX","commitForms","the_forms_object","max_form_ID","_insertFormsSQLSuccess","_insertFormsSuccessCB","_insertFormsTX","input_options","inputs_IDs","_commitOneOption","the_input_id","the_label","input_id","_commitInputOptionsSQLSuccess","_commitInputOptionsTX","_commitInputOptionsSuccessCB","commitInputOptions","the_input_options","the_inputs_ids","input_option_index","forms_with_media","_commitInputsTX","_commitInputsSQLSuccess","_commitInputsSuccessCB","commitInputs","the_inputs_object","the_forms_ids","_commitProjectTX","_commitProjectSQLSuccess","_commitProjectSuccessCB","Select","getProjectRowId","the_project_id","commitProject","the_project_object","Structure","commitAll","the_project","hierarchy_forms_IDs","hierarchy_inputs","hierarchy_inputs_IDs","hierarchy_options","branch_data_rows","branch_form_names","form_counter","branch_form_counter","_getAllProjectEntriesTX","branch_select_query","select_query","_getAllProjectEntriesSQLSuccessCB","_getAllProjectBranchEntriesSQLSuccessCB","_getAllProjectEntriesSuccessCB","current_data_rows","total_entries","data_rows","current_branch_form_name","getAllProjectEntries","allow_download_edits","_getADEFlagTX","_getADEFlagSQLSuccess","_getADEFlagTXSuccessCB","getAllowDownloadEdits","files","_getBranchChildrenFilesSQLSuccessCB","_getBranchChildrenFilesTX","entry_key","_getBranchChildrenFilesSuccessCB","getBranchChildrenFiles","deletion_entries","hierarchy_key_value","offset","titles","full_titles","branch_primary_keys","_getBranchEntriesSuccessCB","setCachedBranchEntryKeys","_getEntriesTitlesTX","_getEntriesTitlesSuccessCB","hierarchy_entry_key_value","_getEntriesTitlesSQLSuccess","full_title","_getBranchEntriesTX","_getBranchEntriesSQLSuccess","query_error_message","getBranchEntries","the_branch_form_name","the_hierarchy_entry_key_value","the_offset","entry_keys","_getEntryKeys","_getEntryKeysSQLSuccess","_getEntryKeysSuccessCB","getBranchEntryKeys","values","_getBranchEntryValuesTX","_getBranchEntryValuesSQLSuccess","current_input_id","_getBranchEntryValuesSuccessCB","the_entry_key","hierarchy_entry_key","_selectBranchFilesSQLSuccessCB","_getBranchFilesTX","select_branch_files_query","_getBranchFilesSuccessCB","getBranchFiles","the_hierarchy_entry_key","_getBranchFormDetailsTX","_getBranchFormDetailsSQLSuccess","_getBranchFormDetailsSuccessCB","getBranchFormDetails","mapped_branch_forms","_getBranchFormLocalIDsTX","_getBranchFormLocalIDsSQLSuccess","_getBranchFormLocalIDsSuccessCB","getBranchFormLocalIDs","the_branch_form_names","_getBranchFormsSuccessCB","_getBranchFormsSQLSuccess","_getBranchFormsTX","has_jumps","branch_input_options_ids","_getBranchInputsSuccessCB","_getBranchInputOptionsTX","_getBranchInputOptionsSuccessCB","_getBranchInputsSQLSuccess","_getBranchInputOptionsSQLSuccess","_getBranchInputsTX","getBranchInputs","branch_entry_keys","cached_keys","form_level_keys","mapped_branch_inputs","_getBranchInputsLocalIDsTX","_getBranchInputsLocalIDsSQLSuccess","_getBranchInputsLocalIDsSuccessCB","getBranchInputsLocalIDs","hierarchy_entry_keys","_getBranchSyncedFilesSuccessCB","_getBranchSyncedFilesSQLSuccessCB","_getBranchSyncedFilesTX","getBranchSyncedFiles","the_hierarchy_entry_keys","children_offset","prev_parent_children","parent_offset","form_total_inputs","parent_form_total_entries","form_total_entries","is_loading_more","query_limit","new_request","parents","parent_counter","children_counter","nested_children_counter","_getChildEntriesParentsTX","_getChildEntriesParentsSQLSuccess","_getChildEntriesParentsSuccessCB","_getAllChildrenTX","_getAllChildrenSuccessCB","appendMoreChildEntries","renderChildEntriesList","_getAllChildrenSQLSuccessCB","child_full_title","row","_getNestedChildrenCountTX","_getNestedChildrenCountSuccessCB","total_children_loaded","getNextParentChildEntries","parent_path","form_tree","_getNestedChildrenCountSQLSuccessCB","nested_children_count","getChildEntries","the_parent_offset","the_children_offset","the_total_of_children_loaded","getMoreChildEntries","last_parent","parent_key","child_entries","child_counters","parent_entries","_getChildEntriesForDeletionSQLSuccessCB","amount","_getChildEntriesForDeletionTX","_getChildEntriesForDeletionSuccessCB","getChildEntriesForDeletion","_getCountBranchEntriesTX","_getCountBranchEntriesSuccessCB","getCountBranchEntries","the_hierarchy_key_value","_getChildrenCountTX","breadcrumb_trail","breadcrumbs","_getChildrenCountSQLSuccessCB","_getChildrenCountSuccessCB","appendMoreEntries","child_counter","primary_keys","_getEntriesSuccessCB","_getChildrenCount","_getEntriesTX","_getEntriesSQLSuccess","renderList","getEntries","the_parent_key","getEntryKeys","branches","_getEntryValues","_getEntryValuesSQLSuccess","_getEntryValuesSuccessCB","the_parent_path","total_synced_rows","total_entries_rows","total_media_files","total_branch_media_files","total_all_synced_rows","button_states","_getFormsSuccessCB","_getDataInfoTX","_getDataInfoSuccessCB","has_data_synced_query","has_entries_query","has_media_query","has_all_synced_query","_onDataSyncedSQLSuccess","_onHasEntriesSQLSuccess","_onHasMediaSQLSuccess","_onHasAllSyncedSQLSuccess","branch_form_with_media_ids","delete_media_files","delete_synced_entries","hasBranchMediaFiles","is_media_found","_getFormsTX","_getFormsSQLSuccess","immediate_parent_key_value","full_parent_path","_getFullParentPathSQLSuccess","_getFullParentPathSuccessCB","_getFullParentPathTX","getFullParentPath","the_immediate_parent_key_value","_getHierarchyChildrenFilesSQLSuccessCB","_getHierarchyChildrenFilesTX","_getHierarchyChildrenFilesSuccessCB","getHierarchyChildrenFiles","the_form","counters","_getHierarchyEntriesForDeletionSQLSuccessCB","_getHierarchyEntriesForDeletionTX","_getHierarchyEntriesForDeletionSuccessCB","getHierarchyEntriesForDeletion","_selectHierarchyFilesSQLSuccessCB","_getHierarchyFilesTX","_getHierarchyFilesSuccessCB","getHierarchyFiles","_getHierarchySyncedFilesSuccessCB","_getHierarchySyncedFilesSQLSuccessCB","_getHierarchySyncedFilesTX","getHierarchySyncedFiles","has_location","input_options_ids","_getInputsSuccessCB","_getInputOptionsTX","_getInputOptionsSuccessCB","_getInputsSQLSuccess","_getInputOptionsSQLSuccess","_getInputsTX","getInputs","input_ids","getLocalInputIDs","_getInputsIDsTX","_getInputsIDsSuccessCB","_getInputsIDsSQLSuccess","_getProjectRowIdSuccessCB","_getProjectRowIdSQLSuccess","_getProjectRowIdTX","the_project_name","_getProjectsSuccessCB","_getProjectsTX","_getProjectsSQLSuccess","_getSyncedEntryKeysTX","_getSyncedEntryKeysSQLSuccess","_getSyncedEntryKeysSuccessCB","getSyncedEntryKeys","branch_forms_ids","_getBranchMediaFileSuccessCB","_getBranchMediaFileSQLSuccess","_getBranchMediaFileTX","_getOneBranchAudioFileTX","getOneBranchAudioFileSQLSuccess","_getOneBranchAudioFileSuccessCB","getOneBranchAudioFile","branch_entry_values","branch_entry_key","branch_entry","_getOneEntryKeyTX","_getOneEntryKeySQLSuccess","_getOneBranchEntryTX","_getOneBranchEntrySuccessCB","current_branch_form","shift","getOneBranchEntry","action","renderUploadViewFeedback","_getOneBranchEntrySQLSuccess","location_string","location_obj","values_counter","created_on","hierarchy_entry_key_ref","current_branch_entry","prepareOneBranchEntry","_getOneEntryKeySuccessCB","_getOneHierarchyEntryKeyValueTX","_getOneHierarchyEntryKeyValueSQLSuccess","_getOneHierarchyEntryKeyValueSuccessCB","is_called_from_view","media_type","_getOneBranchMediaFileTX","getOneBranchMediaFileSQLSuccess","_getOneBranchMediaFileSuccessCB","getOneBranchMediaFile","image","_getOneHierarchyMediaPerTypeTX","hierarchy_query","_getOneImageSQLSuccess","_getOneAudioSQLSuccess","_getOneVideoSQLSuccess","_getOneHierarchyMediaPerTypeSuccessCB","getOneHierarchyMediaPerType","_getOneBranchPhotoFileTX","getOneBranchPhotoFileSQLSuccess","_getOneBranchPhotoFileSuccessCB","getOneBranchPhotoFile","_getOneBranchVideoFileTX","getOneBranchVideoFileSQLSuccess","_getOneBranchVideoFileSuccessCB","getOneBranchVideoFile","entry","hierarchy_entry_values","_getParentRef","_getOneHierarchyEntryTX","_getOneHierarchyEntrySuccessCB","current_form","getOneHierarchyEntry","_getOneHierarchyEntrySQLSuccess","parent_ref","path","parent_key_value","current_entry","prepareOneHierarchyEntry","_getOneHierarchyMediaFileTX","getOneHierarchyMediaFileSQLSuccess","_getOneHierarchyMediaFileSuccessCB","getOneHierarchyMediaFile","hierarchy_image","hierarchy_audio","hierarchy_video","upload_URL","_getProjectURLTX","getProjectURLSQLSuccess","_getProjectURLSuccessCB","setUploadURL","getUploadURL","Update","form_values","_insertFormValuesTX","_insertFormValuesSQLSuccessCB","_insertFormValuesSuccessCB","commitBranchForm","the_form_values","rows_deleted","deleted_entries","_getDeletedTotal","the_rows_deleted","total_deleted","_updateEntriesCountSuccessCB","_updateEntriesCountTX","_onUpdateEntriesCountSQLSuccess","countSyncedDeleted","_emptyMediaValuesTX","branch_query","_emptyMediaValuesSQLSuccessCB","_emptyMediaValuesErrorCB","_emptyBranchMediaValuesSQLSuccessCB","_emptyMediaValuesSuccessCB","emptyMediaValues","the_hierarchy_forms","row_id","is_branch_file","_flagOneFileAsSyncedTX","table","_flagOneFileAsSyncedSuccessCB","flagOneFileAsSynced","the_row_id","the_is_branch_file_flag","branch_rows_to_sync","_updateDataSyncedFlagTX","_updateDataSyncedFlagSuccessCB","setBranchEntryAsSynced","the_branch_rows_to_sync","main_form_key_value","cached_branch_entry_keys","_updateStoredFlagTX","_updateStoredFlagSQLSuccess","_updateStoredFlagSuccessCB","setCachedBranchesAsStored","the_cached_branch_entry_keys","the_main_form_key_value","rows_to_sync","setHierarchyEntryAsSynced","the_hierarchy_rows_to_sync","_unsyncAllEntriesTX","_unsyncAllEntriesSQLSuccess","_unsyncAllEntriesErrorCB","_unsyncAllBranchEntriesSQLSuccess","_unsyncAllEntriesSuccessCB","unsyncAllEntries","rows_to_unsync","_unsyncOneHierarchyEntryTX","update_query","_unsyncOneHierarchyEntrySQLSuccess","_unsyncOneHierarchyEntryErrorCB","_unsyncOneHierarchyEntrySuccessCB","_unsyncBranchEntriesTX","_unsyncBranchEntriesSuccessCB","_unsyncBranchEntriesSQLSuccess","unsyncOneHierarchyEntry","the_rows","updateCountersOnEntriesDownload","_updateCountersOnEntriesDownloadTX","_updateCountersOnEntriesDownloadCB","forms_data_left","old_forms","forms_data_restored","updateCountersOnEntriesRestore","the_amount","the_forms_data_left","is_active","_updateCountersOnEntriesRestoreTX","_updateCountersOnEntriesRestoreSuccessCB","_updateCountersOnSingleBranchEntryInsertionTX","_updateCountersOnSingleBranchEntryInsertionSuccessCB","updateCountersOnSingleBranchEntryInsertion","_doUpdate","_updateCountersOnSingleEntryDeletionTX","_updateCountersOnSingleEntryDeletionSuccessCB","updateCountersOnSingleEntryDeletion","the_counters","updateCountersOnSingleEntryInsertion","_updateCountersOnSingleEntryInsertionTX","_updateCountersOnSingleEntryInsertionSuccessCB","branch_to_store","_updateCountersOnSyncedEntriesDeletionSuccessCB","_updateCountersOnSyncedEntriesDeletionTX","updateCountersOnSyncedEntriesDeletion","_updateHierarchyEntryValuesSQLSuccessCB","_updateHierarchyEntryValuesTX","_updateHierarchyEntryValuesSuccessCB","updateHierarchyEntryValues","Create","_parseLocationObjToString","the_location_obj","bearing","_insertEntryValues","the_current_remote_entry","the_current_remote_entry_key","the_current_remote_timestamp","remote_ref_value","remote_ref_value_location","current_remote_entry","current_remote_entry_key","current_remote_timestamp","_insertNewRowSQLSuccessCB","remote_entry","updated_entries_counter","entry_key_ref","local_entries_keys","_getFormLocalDataTX","query_entry_key","query_inputs","_getFormPrimaryKeysSQLSuccessCB","_getFormInputsSQLSuccessCB","dre_inputs","dre_local_entries_keys","_insertTopFormValuesTX","created","_insertChildFormValuesTX","_updateLocalRowWithRemoteTX","_updateLocalRowWithRemoteSQLSuccessCB","_updateLocalRowWithRemoteSuccessCB","_getFormLocalDataSuccessCB","immediate_parent_form","hierarchy_entry_key_value_ref","_insertTopFormValuesSuccessCB","the_full_parent_path","_insertChildFormValuesSuccessCB","commitRemoteEntry","the_remote_entry","branch_rows","mapped_input_ids","_getLocalBranchFormID","the_name","_getLocalBranchInputID","_insertBranchDataRowsTX","local_branch_form_id","local_branch_input_id","is_data_synced","is_media_synced","is_cached","is_stored","remote_flag","_insertBranchFormValuesSQLSuccessCB","_insertBranchDataRowsSuccessCB","insertBranchDataRows","the_branch_forms_data","the_mapped_branch_forms","the_mapped_input_ids","branch_form_values","_insertBranchFormValuesTX","_insertBranchFormValuesSuccessCB","branch_form_id","insertBranchFormValues","the_branch_form_values","the_key_value","main_form_entry_key","insertFormValues","single_entry_values","single_entry_key","local_form_id","hierarchy_forms_data","_insertSingleEntryValues","the_entry_values","_insertSingleEntryValuesTX","_insertSingleEntryValuesSuccessCB","insertAllFormsData","the_hierarchy_data","insertEntries","the_single_form_values","current_entry_key","current_entry_values","local_input_id","_insertSingleEntryValuesSQLSuccessCB","_deleteAllEntriesTX","delete_branches_query","delete_query","update_count_query","_deleteAllEntriesSQLSuccessCB","_deleteAllEntriesErrorCB","_deleteAllEntriesSuccessCB","deleteAllMedia","deleteAllEntries","the_action","_doDeletion","removeSyncedHierarchyEntries","_deleteSynced","deletion_counters","deletion_files","remove","_handleBranches","the_entry_keys","the_files","removeSyncedBranchEntries","the_current_form","deletion_synced_entry_keys","deleteAllSynced","rows_to_delete","media_types","_deleteBranchEntryTX","stored","_deleteBranchEntryErrorCB","_deleteBranchEntrySuccessCB","deleteBranchEntry","_deleteCachedBranchEntriesTX","_deleteCachedBranchEntriesSQLSuccessCB","_deleteCachedBranchEntriesSuccessCB","deleteCachedBranchEntries","_doChildrenDeletion","removeHierarchyChildrenEntries","children_forms","current_child_form","_removeChildren","the_entries","_handleChildBranches","removeLinkedBranchChildEntries","child_hierarchy_files","child_branch_files","deleteChildEntries","removeLinkedBranchEntries","removeHierarchyEntry","deleteEntry","the_current_form_id","_deleteProjectTX","res","_deleteProjectSQLSuccessCB","_deleteProjectErrorCB","_deleteProjectSuccessCB","_removeHierarchyChildrenEntriesTX","_removeHierarchyChildrenEntriesSuccessCB","_removeHierarchyEntryTX","_removeHierarchyEntrySuccessCB","_removeLinkedBranchChildEntriesTX","_removeLinkedBranchChildEntriesSuccessCB","_removeLinkedBranchEntriesSQLSuccessCB","_removeLinkedBranchEntriesTX","_removeLinkedBranchEntriesSuccessCB","_removeSyncedBranchEntriesTX","_removeSyncedBranchEntriesSuccessCB","_removeSyncedHierarchyEntriesTX","_removeSyncedHierarchyEntriesSuccessCB","_writeFile","the_content","gotFS","the_fileSystem","backup_path","fullPath","getFile","create","exclusive","gotFileEntry","fileEntry","createWriter","gotFileWriter","writer","onwritestart","onwriteend","evt","txt_content","write","backup","video_path","cached_filename","copyVideo","the_video_path","is_branch_flag","onLFSSuccess","the_video_file_entry","the_file_system","fs","copyTo","externalCacheDirectory","resolveLocalFileSystemURI","onCreateSuccess","_createMediaDir","onCreateFail","media_dir","dirs","getDirectory","onIOSRFSSuccess","onIOSRFSError","has_project_been_deleted","the_media_dirs","app_private_dir_path","media_dirs","_onDirSuccess","the_dir","dir_entry","_onDirDeleted","_onDirDeleteError","removeRecursively","_onDirError","hasBackup","gotBackupSuccess","gotBackupFail","gotFSfail","filenameToTimestamp","move","_getMediaDir","the_file_type","onDirReadSuccess","the_dir_entries","processEntry","the_entry","onGetIOSDirectorySuccess","onMovedOK","buildRows","onMovedFail","moveTo","stored_filename","onGetIOSDirectoryFail","project_dir","destination","stored_filepath","extension","parts","dir_entries","onFileError","onDirReadError","createReader","readEntries","filename_parts","cached_filepath","cached","TEMPORARY","moveVideo","the_cache_video_uri","onLFSError","_removeOneFile","full_path","_onGetFileSuccess","_onGetFileError","the_file_entry","file_entry","_onRemoveSuccess","_onRemoveError","restoreFromBackup","readAsText","reader","FileReader","onloadend","target","forms_data","branch_data","uploadFile","the_file_row","the_media_dir","file_URI","app_private_dir","ft","FileTransfer","_doUpload","is_branch_image","is_branch_audio","is_branch_video","mimeType","fileKey","fileName","onprogress","progressEvent","upload","_onFileUploadSuccess","_onFileUploadError","the_project_url","uploadNextFile","handleMedia","writeProjectDataAsCSV","onGotFS","filesystem","onCreateDirSuccess","zip_content","folder","export_dir","csv","zip","JSZip","Papa","unparse","quotes","delimiter","newline","generate","compression","externalRootDirectory","the_position","getPrimaryKeyRefPosition","branch_edit_position","setInputs","prepareFirstInput","the_has_jumps_flag","branch_inputs_total","branch_form_has_jumps","getFormDetails","the_primary_keys","all_branches_keys","current_branch_form_primary_keys","is_branch_form_cached","getCachedBranchEntryKeys","getJumpDestinationPosition","backToHierarchyForm","current_input_position","back_from_branch","bindBackBtn","is_data_saved","back_btn_label","off","one","is_jump_found","_checkJumps","the_jumps","the_current_value","branch_destination_position","branch_destination","current_value","gotoNextPage","branch_current_input","next_branch_input","next_page","next_branch_value","is_branch_genkey_hidden","is_checkbox","pushInputsTrail","setCachedInputValue","gotoPrevPage","prev_page","branch_inputs_trail","prev_input_position","prev_input","popInputsTrail","onNextBtnTapped","wls","branch_input","branch_edit_id","branch_edit_type","getCurrentValue","branch_cached_value","getCachedInputValue","validateValue","branch_edit_mode","valuesMatch","branch_has_new_jump_sequence","onPrevBtnTapped","branch_current_value","primary_key","spliceInputsTrail","how_many_to_remove","prepareFeedback","the_status","status","the_first_input","first_input_position","branch_inputs_values","add_another_entry_btn","back_to_main_btn","first_branch_input","prev_btn","next_btn","is_prev_button_hidden","removeClass","renderInputView","addClass","prepareStoreEdit","updateFormCompletion","the_branch_input","branch_value","BranchInputTypes","integer","decimal","checkbox","dropdown","store_btn","store_edit_btn","percentage_bar","percentage_txt","onStoreValues","renderStoreEditFeedback","is_positive","the_length","ratio","ceil","amendSkippedValues","max_skipped_position","is_found","the_filenameToTimestamp","value_obj","key_position","hierarchy_key_position","ios_filenames","key_value","is_remote","branch_edit_hash","branch_edit_key_value","parent_key_position","the_current_position","form_has_jumps","getCloneValue","storeData","the_ctx","branch_media_files","getCachedMediaFiles","val","isEmptyPrimaryKey","recordAudio","header_btns","stop_btn","stopRecordAudio","record_btn","play_btn","ongoing_recording_spinner","current_path","mediaRec","Media","audio_feedback","cached_audio_uri","err","startRecord","stopRecord","release","stopPlayingAudio","current_audio","playAudio","onPlayStatusChange","audio_full_path_uri","span_label","stored_audio_uri","double_entry","clone","scanner","scanner_confirm","scan_result","scan_result_confirm","barcodeScanner","cancelled","CHECKBOX_CHECKED","DISABLED","HTML","option_value","option_label","option_id","append","datepicker","ios_datepicker","selected_date","datePicker","mode","allowOldDates","returned_date","new_date","blur","focus","ios_date","removeAttr","SELECTED","option_index","input_holder","_showAcquiredLocation","accuracy_result","accuracy_tip","set_location_result","set_location_btn","_getLocation","requestPosition","onGCPSuccess","onGCPError","requests","empty","app_storage_dir","image_full_path_uri","camera_btn","store_image_uri","cache_image_uri","canvas_portrait_dom","canvas_landscape_dom","canvas_portrait","canvas_landscape","context_portrait","getContext","clearRect","width","height","context_landscape","iOS_popup","popup","_renderThumb","the_image_uri","Image","source","src","onerror","onload","thumb_height","thumb_width","canvas","imageSmoothingEnabled","drawImage","restore","Camera","PictureSourceType","CAMERA","camera_options","quality","destinationType","DestinationType","FILE_URI","sourceType","encodingType","EncodingType","JPEG","mediaType","MediaType","PICTURE","correctOrientation","saveToPhotoAlbum","targetWidth","targetHeight","camera","getPicture","onGPSuccess","onGPError","image_uri","RADIO_CHECKED","timepicker","ios_timepicker","ios_time","timeStamp","video_full_path_uri","cached_path","video_sd_path","video_btn","play_video_btn","store_video_uri","cache_video_uri","ios_video_player_wrapper","ios_video_player","_renderVideo","the_video_file_path","the_cached_filename","load","onCaptureVideoSuccess","the_media_object","the_cached_video_path","temp_cache_path","video_full_path","onCaptureVideoError","current_cached_video","videoPlayer","limit","capture","captureVideo","branch_values","empty_value","got_value","checkboxes_values","is_empty_primary_key","is_primary_key_flag","checkbox_values","_isUniqueValue","current_branch_form_keys","_commitRemoteEntry","the_single_remote_entry","parent_form","chosen_form_id","chosen_form_name","_performRequest","the_url","ajax","crossDomain","dataType","request","responseText","fetchRemoteData","form_btn","dom_list","_form_btn_handler","getMainFormCurrentKeyValue","the_branch_entries","renderBranchEntriesList","the_hash_to_parse","is_child_form_nav","branch_entry_values_url","the_values","renderBranchEntryValues","nav_parent_path","current_view_url_parts","breadcrumbs_trail","current_view_url","back_edit_nav_url","setItem","renderEntryValues","entries_totals","getItem","entries_total","load_more_parameters","cached_entries_list","unsyncEntry","inputs_values","panel","forms_list_items","allMediaDeletedFeedback","allEntriesDeletedFeedback","_allSyncedDeletedFeedback","current_count_holder","current_form_list_item","forms_list","new_count","addEntry","edit_position","exportAllEntriesToCSV","Export","saveProjectDataToCSV","_bindBackBtn","_buildList","current_entries_total","load_more_btn","load_more_spinner","getMoreEntries","listview","getMoreBranchEntries","appendMoreBranchEntries","totals","_bindActionBarBtns","ctx_menu_btn","delete_branch_entry_btn","entry_value_edit_btn","dropdown_label","radio_label","data_synced","nav_drawer_btn","home_btn","settings_btn","add_entry_btn","reached_settings_view_from","renderCachedList","back_children","trail","back_href","header","inactive_label","action_bar_btn","active_tab","inactive_tab_hash","inactive_tab_label","back_url","_buildChildEntriesList","the_form_tree","full_parent","the_child_entries","active_label","selected_list","hasClass","unsync_entry_btn","delete_entry_btn","entry_value_btn","input_page_href","inputs_trail","active_key","active_tab_label","watch_position","form_has_location","branch_total_entries","empty_entries_list","empty_entries_list_form_name","top","cached_entries","mailto","_getBackupPath","subject","back_btn_href","mailto_holder","send_email_btn","plugin","email","isServiceAvailable","is_available","open","cc","bcc","attachments","isHtml","_parseFormAllEntries","has_parent_flag","single_entry_raw","has_parent","_parseSingleEntry","the_single_raw_entry","parent_key_ref","parent_key_ref_value","temp","location_value","single_entry_parsed","parsed_forms_json","params","has_backup","the_btn_states","upload_btn","the_button_states","navbar_label","email_backup_btn","download_remote_data_btn","unsync_all_entries_btn","delete_project_btn","delete_all_entries_btn","delete_synced_entries_btn","delete_media_files_btn","backup_project_data_btn","restore_from_backup_btn","export_data_to_csv_btn","btn_states","the_has_location_flag","backToBranchEntryValuesList","backToEntriesList","has_cached","backToEntryValuesList","parent_path_array","destination_position","inputs_length","next_input","next_value","edit_id","edit_type","cached_value","has_new_jump_sequence","inputs_total","back_nav_hash_parts","list_entries_btn","add_child_btn","first_input","branchFormCacheReady","branchEntriesCacheReady","InputTypes","addBranch","the_count","the_branch_form","clearListeners","media_files","_getCachedMediaFiles","add_branch_btn","list_branch_entries_btn","list_entries_count","_addBranchEntry","_listBranchEntries","now","lastFocus","has_got_location","map_canvas","textarea_coords","setPosition","setOptions","_handleSetLocation","cached_coords","branch_entries","the_cached_value","the_input_type","is_matching","matches_count","_projectBackupFeedback","mail_backup_btn","backupCurrentProject","_autoload","the_project_to_autoload","project_to_autoload","project_params","project_xml_URL","add_project_btn","the_projects","renderEmptyList","ios_project_form_url","navbar","loadRemoteXML","cached_project_names","epicollect_server_url","load_project_btn","input_value","autocomplete_spinning_loader","project_url","_load","_loadProjectFromXML","request_timeout","$ul","$input","request_delay","clearTimeout","tagName","innerText","the_project_xml_url","is_project_xml_valid","_restoreFeedback","the_input_ids","project_server_url_holder","pagination_radio_btns","save_btn","version_name_label","enhance_map_checkbox","is","checked","history","back","checkboxradio","bindUploadButtons","the_has_hard_reload_flag","back_button_label","has_hard_reload","upload_data_btn","upload_images_btn","upload_audios_btn","upload_videos_btn","all_synced_message","hierarchy_rows_to_sync","is_branch_entry","current_image_file","current_audio_file","current_video_file","audio_synced","photo_synced","video_synced","_audioCheck","the_audio","_photoCheck","the_image","_videoCheck","the_video","main_rows_to_post","main_entries","upload_data_feedback","postBranchEntries","postOneBranchEntry","branch_entry_post_obj","param","postOneHierarchyEntry","_sendRequest","hierarchy_entry_post_obj","the_table","ecTimeCreated","ecPhoneID","appendBranchEntryValue","the_entry_value","current_ref","main_entry_key","parent_value","appendEntryValue","_onOneHierarchyEntryFound","_onOneHierarchyEntryNotFound","_onOneBranchEntryFound","the_branch_entry","_onOneBranchEntryNotFound","is_successful","the_media_type","the_branch_image","the_branch_audio","the_branch_video","Test","_makeString","how_long","possible","total","_onupdateHierarchyEntriesCounterSQLCB","_updateHierarchyEntriesCounterTX","_onCounterUpdateSuccessCB","the_total"],"mappings":"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A76B,QAAAC,IAAAT,GAAA2C,MAAAggB,oBAEAlb,GACAzH,GAAAk4B,OCZA,IAAAl4B,IAAAA,MACAA,IAAAc,UAAAd,GAAAc,cACAd,GAAAc,UAAA,WACA,YAgBA,IAAA+G,GAGAyzB,GAAA,GACA,6CACA,4DACA,gBACA,8CACA,2CACA,iCACA,yBACA,6BACA,0CACA,kBAAA,sBACA,gCACA,qBACAnqB,KAAA,IAIAoqB,GAAA,GAAA,0CACA,+DACA,kCACA,gBACA,kBACA,eACA,2BACA,kCACA,qCACA,yCACA,gCACA,kFAEA,oBAAApqB,KAAA,IAIAqqB,GAAA,GAAA,iDAEA,+DACA,kCACA,gBACA,kBACA,eACA,2BACA,kCACA,yCACA,gCACA,kFAEA,oBAAArqB,KAAA,IAIAsqB,GAAA,GACA,4CACA,gEACA,gCACA,cACA,sBACA,gBACA,wBACA,gBACA,4BACA,uBACA,8BACA,oBACA,sBACA,0BACA,sBACA,6BACA,yBACA,iBACA,sBACA,gBACA,gCACA,0BACA,2BACA,yEACA,iBACA,MACAtqB,KAAA,IAIAuqB,GAAA,GACA,mDACA,gEACA,gCACA,cACA,sBACA,gBACA,wBACA,gBACA,4BACA,uBACA,8BACA,oBACA,sBACA,0BACA,sBACA,6BACA,yBACA,iBACA,sBACA,gBACA,gCACA,0BACA,gFAEA,iBACA,MACAvqB,KAAA,IAIAwqB,GAAA,GACA,kDACA,+DACA,iCACA,wBACA,0BACA,2BACA,6EACA,iBACA,MACAxqB,KAAA,IAGAyqB,GAAA,GACA,yDACA,+DACA,iCACA,wBACA,0BACA,2BACA,oFAEA,iBACA,MACAzqB,KAAA,IAGA0qB,GAAA,GACA,yCACA,+DACA,gCACA,+BACA,gCACA,sCACA,qCACA,iBACA,eACA,iCACA,6BACA,gBACA,uCACA,wCACA,kCACA,yBACA,6EACA,iBACA,MACA1qB,KAAA,IAGA2qB,GAAA,GACA,gDACA,+DACA,gCACA,+BACA,qCACA,mCACA,gCACA,qCACA,iBACA,eACA,iCACA,6BACA,gBACA,uCACA,wCACA,kCAEA,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","file":"build-ios.js","sourcesContent":["/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device, onDeviceReady*/\nvar EC = window.EC || {};\nEC.Boot = EC.Boot || {};\n\nEC.Boot.getProjects = function () {\n    'use strict';\n\n    //hide splashcreen (timeout so we have time to render the project list, 1 sec will be enough)\n    //todo currently buggy\n    //window.setTimeout(function () {\n    //    navigator.splashscreen.hide();\n    //}, 1000);\n\n    //if database already set, just list projects\n    if (window.localStorage.is_db_set === EC.Const.SET) {\n        console.log('getting list');\n        EC.Project.getList();\n    }\n    else {\n\n        //Initialise database BEFORE listing empty project view\n        $.when(EC.CreateSQLiteDatabase.init()).then(function () {\n\n            //database is set\n            window.localStorage.is_db_set = EC.Const.SET;\n            //window.localStorage.stress_test = EC.Const.SET;\n            EC.Project.getList();\n        });\n    }\n}\n","/* jslint vars: true , nomen: true devel: true, plusplus: true*/\n/* global $, jQuery, cordova, device, onDeviceReady*/\nvar EC = window.EC || {};\nEC.Boot = EC.Boot || {};\n\nEC.Boot.handleDeviceEvents = function () {\n    'use strict';\n    /**\n     * Handle back button on Android devices\n     */\n    window.onBackButton = function () {\n\n        var page_id = $.mobile.activePage.attr('id');\n\n        //if the current page is the home page and the user press the back button, exit\n        // app\n        if (page_id === EC.Const.INDEX) {\n            navigator.app.exitApp();\n        }\n        else {\n\n            //check if user pressed back button while doing a barcode scan\n            if ((page_id === EC.Const.BARCODE || page_id === EC.Const.BRANCH_PREFIX + EC.Const.BARCODE ) && window.localStorage.is_dismissing_barcode) {\n                window.localStorage.removeItem('is_dismissing_barcode');\n            }\n            else {\n\n                if ((page_id === EC.Const.PHOTO || page_id === EC.Const.BRANCH_PREFIX + EC.Const.PHOTO) && $.swipebox.isOpen) {\n                    // close swipebox on back button (Android)\n                    $('a#swipebox-close').click();\n                }\n                else {\n                    EC.Routing.goBack(page_id);\n                }\n            }\n            //navigator.app.backHistory();\n        }\n    }\n\n//handle app resume\n    window.onResume = function () {\n        console.log('App resumed');\n    };\n    document.addEventListener('resume', window.onResume, false);\n};\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device, onDeviceReady*/\nvar EC = window.EC || {};\nEC.Boot = EC.Boot || {};\n\n/**\n * Init application triggering onDeviceReady when both jQuery Mobile and Cordova\n * are ready\n *\n * Also disable console.log() when debugging is off (EC.Const.DEBUG is set manually)\n */\nEC.Boot.init = function () {\n    'use strict';\n\n\n    //wait for both JQM pageinit and PG onDeviceReady before doing anything\n    var jqmReady = $.Deferred();\n    var cordovaReady = $.Deferred();\n\n    //handle device events\n    EC.Boot.handleDeviceEvents();\n\n    //manually trigger ondeviceready on Chrome browser  only\n    if (EC.Utils.isChrome()) {\n        console.log('deviceready Chrome');\n        cordovaReady.resolve();\n    }\n\n    //fix JSON.parse bug for old Android V8 Javascript\n    JSON.originalParse = JSON.parse;\n    JSON.parse = function (text) {\n\n        if (text) {\n            return JSON.originalParse(text);\n        }\n        // no longer crashing on null value but just returning null\n        return [];\n\n    };\n\n    //disable console.log if not debugging\n    if (EC.Const.DEBUG === 0) {\n        console.log = function () {\n            //\n        };\n    }\n\n    //check if we are launching a new instance of the app on the device\n    if (!window.sessionStorage.app_loaded && !EC.Utils.isChrome()) {\n        window.localStorage.clear();\n    }\n\n    //set default server url for projects if no one is defined\n    if (window.localStorage.project_server_url === undefined) {\n        console.log('EC.Const.EPICOLLECT_SERVER_URL - ' + EC.Const.EPICOLLECT_SERVER_URL);\n        window.localStorage.project_server_url = EC.Const.EPICOLLECT_SERVER_URL;\n    }\n\n    //resolve when jqm page is ready\n    $(document).bind('pageinit', jqmReady.resolve);\n\n    //resolve when Cordova ready\n    document.addEventListener('deviceready', cordovaReady.resolve, false);\n\n    //attach global handler to be used when opening app using custom scheme\n    //scheme://key=value\n    window.localStorage.autoload_project_url = '';\n    window.handleOpenURL = function (url) {\n\n        console.log('handleOpenURL called with ' + url);\n\n        var project_name_parts;\n        var project_name;\n\n        if (url) {\n\n            project_name_parts = url.split('://project?');\n            //project_name = url.replace('epicollect5://project?', '');\n            project_name = project_name_parts[1];\n            project_name = 'http://' + project_name;\n            window.localStorage.autoload_project_url = project_name;\n\n            EC.Boot.getProjects();\n        }\n    };\n\n    // all ready, trigger app!\n    $.when(jqmReady, cordovaReady).then(function () {\n        console.log('both JQM and Cordova triggered init event');\n        EC.Boot.onDeviceReady();\n    });\n\n};\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device, onDeviceReady*/\nvar EC = window.EC || {};\nEC.Boot = EC.Boot || {};\n\nEC.Boot.onDeviceReady = function () {\n\n    'use strict';\n\n    if (!EC.Utils.isChrome()) {\n\n\n\n        console.log('OS version: ' + window.device.version);\n\n        //set media dir paths based on platform\n        EC.Utils.setMediaDirPaths();\n\n        //request iOS persistent file system\n        if (window.device.platform === EC.Const.IOS) {\n\n            //create media folders 'images', 'audios', 'videos'\n            $.when(EC.File.createMediaDirs()).then(function () {\n\n                //set iOS app root path at run time as app identifier can change\n                EC.Utils.setIOSRootPath();\n\n                //cache persistent storage path\n                EC.Utils.setIOSPersistentStoragePath();\n\n            });\n\n        }\n\n        if (window.device.platform === EC.Const.ANDROID) {\n\n            //create Android media folders\n            $.when(EC.File.createMediaDirs()).then(function () {\n                console.log('Android media folders created');\n            });\n\n            navigator.globalization.getLocaleName(function (locale) {\n\n                var device_language = locale.value.substring(0, 2);\n\n                console.log('ANDROID language: ' + JSON.stringify(locale) + '\\n');\n\n                console.log(JSON.stringify(Object.keys(EC.Dictionary)));\n\n                //if the device language is not localised default to English\n                if (Object.keys(EC.Dictionary).indexOf(device_language) !== -1) {\n                    //set language globally getting the first part of locale.value\n                    window.localStorage.DEVICE_LANGUAGE = device_language;\n                }\n                else {\n                    //fallback to English as default language\n                    window.localStorage.DEVICE_LANGUAGE = 'en';\n                }\n\n                EC.Localise.setLanguage(window.localStorage.DEVICE_LANGUAGE);\n\n            }, function () {\n                console.log('Error getting locale\\n');\n\n                //fallback to English as default language\n                window.localStorage.DEVICE_LANGUAGE = 'en';\n                EC.Localise.setLanguage(window.localStorage.DEVICE_LANGUAGE);\n\n            });\n        }\n\n        if (window.device.platform === EC.Const.IOS) {\n            navigator.globalization.getPreferredLanguage(function (language) {\n\n                var device_language = language.value.substring(0, 2);\n\n                //if the device language is not localised default to English\n                if (Object.keys(EC.Dictionary).indexOf(device_language) !== -1) {\n                    //set language globally getting the first part of locale.value\n                    window.localStorage.DEVICE_LANGUAGE = device_language;\n                }\n                else {\n                    //fallback to English as default language\n                    window.localStorage.DEVICE_LANGUAGE = 'en';\n                }\n\n                EC.Localise.setLanguage(window.localStorage.DEVICE_LANGUAGE);\n\n                console.log('IOS language: ' + language.value + '\\n');\n            }, function () {\n                console.log('Error getting language\\n');\n                //fallback to English as default language\n                window.localStorage.DEVICE_LANGUAGE = 'en';\n                EC.Localise.setLanguage(window.localStorage.DEVICE_LANGUAGE);\n            });\n        }\n\n    }\n    else {\n        //fallback to English as default language\n        window.localStorage.DEVICE_LANGUAGE = 'en';\n        EC.Localise.setLanguage(window.localStorage.DEVICE_LANGUAGE);\n\n        //set base URI for debugging on Chrome\n        window.localStorage.BASE_URI = window.location.href.replace('index.html', '');\n    }\n\n    EC.db = EC.Utils.openDatabase();\n\n    //Deal with JQM page events\n    EC.Routing.indexPageEvents();\n    EC.Routing.inputsPageEvents();\n    EC.Routing.branchInputsPageEvents();\n\n    //Bind button states and overlays\n    EC.Ui.bindBtnStates();\n\n    //set pagination parameters\n    if (!window.localStorage.QUERY_LIMIT) {\n        window.localStorage.QUERY_LIMIT = EC.Const.ITEMS_PER_PAGE;\n    }\n    window.localStorage.QUERY_ENTRIES_OFFSET = 0;\n    window.localStorage.QUERY_CHILD_ENTRIES_OFFSET = 0;\n    window.localStorage.QUERY_PARENT_ENTRIES_OFFSET = 0;\n\n    window.sessionStorage.app_loaded = 0;\n\n    $(function () {\n        FastClick.attach(document.body);\n    });\n\n    if (!EC.Utils.isChrome()) {\n\n        document.addEventListener('backbutton', window.onBackButton, false);\n\n        //set the device UUID (depending on platform)\n        switch (window.device.platform) {\n\n            //on Android, it is possible to uniquely track a device (at the time of writing,\n            // KitKat 4.4.2 is the latest release)\n            case EC.Const.ANDROID:\n                EC.Utils.setPhoneUUID(device.uuid);\n                break;\n\n            case EC.Const.IOS:\n                window.IDFVPlugin.getIdentifier(function (result) {\n                    console.log('Vendor ID:' + result);\n                    EC.Utils.setPhoneUUID(result);\n                }, function (error) {\n                    console.log(error);\n                    EC.Utils.setPhoneUUID('no_ios_id_available');\n                });\n                break;\n\n        }\n\n    }\n    else {\n        EC.Utils.setPhoneUUID('Chrome_Beta');\n    }\n\n    if (!window.localStorage.project_names) {\n        window.localStorage.project_names = JSON.stringify([]);\n    }\n\n    //test referrer on Android platform\n    if (window.device) {\n        if (window.device.platform === EC.Const.ANDROID) {\n\n            window.plugins.appPreferences.fetch(function (value) {\n                console.log('Referrer value is ****************************' + value);\n            }, function (error) {\n                console.log('Referrer value error! ************************' + JSON.stringify(error));\n            }, 'referrer');\n        }\n    }\n\n    EC.Boot.getProjects();\n}\n","/*global $, jQuery, cordova, device, ActivityIndicator, Connection*/\nvar EC = EC || {};\nEC.DevicePosition = EC.DevicePosition || {};\nEC.DevicePosition = (function (module) {\n    'use strict';\n\n    module.initGoogleMap = function () {\n\n        var self = this;\n        var deferred = new $.Deferred();\n\n        self.current_position = new google.maps.LatLng(self.coords.latitude, self.coords.longitude);\n        self.map_options = {\n            center: {lat: self.coords.latitude, lng: self.coords.longitude},\n            zoom: 16,\n            disableDefaultUI: true\n        };\n\n        self.map = new google.maps.Map(document.getElementById('map-canvas'), self.map_options);\n        //add current user position\n        self.marker = new google.maps.Marker({\n            position: self.current_position,\n            map: self.map,\n            draggable: true\n        });\n\n        //draw accuracy circle\n        self.circle = new google.maps.Circle({\n            center: self.current_position,\n            radius: self.coords.accuracy,\n            map: self.map,\n            fillColor: '#0000FF',\n            fillOpacity: 0.2,\n            strokeColor: '0',\n            strokeOpacity: 0\n        });\n\n        self.marker.bindTo('position', self.circle, 'center');\n        self.map.fitBounds(self.circle.getBounds());\n\n        //let's use 'idle' event and a 2 secs timeout, to play it safe\n        // 'tilesloaded' could not be fire if there are network problems\n        window.google.maps.event.addListenerOnce(self.map, 'idle', function () {\n            window.setTimeout(function () {\n                deferred.resolve();\n            }, 2000);\n        });\n\n        window.google.maps.event.addListener(self.marker, 'dragend', function (event) {\n            console.debug('final position is ' + event.latLng.lat() + ' / ' + event.latLng.lng());\n            self.coords.latitude = event.latLng.lat();\n            self.coords.latitude = event.latLng.lng();\n            EC.Notification.showToast('Marker dragged by user', 'short');\n        });\n\n        return deferred.promise();\n    };\n\n    return module;\n\n}(EC.DevicePosition));\n","/*global $, jQuery, cordova, device, ActivityIndicator*/\nvar EC = EC || {};\nEC.DevicePosition = EC.DevicePosition || {};\nEC.DevicePosition = (function (module) {\n    'use strict';\n\n    module.map = {};\n    module.marker = {};\n    module.circle = {};\n    module.coords = {};\n    module.current_position = {};\n    module.map_options = {};\n    module.timeout = 30000;\n    module.is_first_attempt = true;\n    module.is_api_loaded = false;\n    //the 'is_enhanced_map_on' flag changes a lot, if the device loses connection and stuff, so it is a good idea to always request it via a function\n    module.is_enhanced_map_on = function () {\n        return parseInt(window.localStorage.is_enhanced_map_on, 10) === 1;\n    };\n\n    module.watchTimeout = function () {\n        //set unlimited timeout for watch position to avoid timeout error on iOS when the device does not move\n        // see http://goo.gl/tYsBSC, http://goo.gl/jYQhgr, http://goo.gl/8oR1g2\n        return (window.device.platform === EC.Const.IOS) ? Infinity : 30000;\n    };\n\n    module.getCurrentPosition = function () {\n\n        var deferred = new $.Deferred();\n        var self = this;\n\n        //resolve passing position to caller\n        function onSuccess(position) {\n            self.setCoords(position);\n            deferred.resolve();\n        }\n\n        function onError(error) {\n            console.log(error);\n            deferred.reject();\n        }\n\n        navigator.geolocation.getCurrentPosition(onSuccess, onError, {\n            maximumAge: 0,\n            timeout: self.timeout,\n            enableHighAccuracy: true\n        });\n\n        return deferred.promise();\n    };\n\n    module.watchPosition = function () {\n\n        var deferred = new $.Deferred();\n        var geolocation_request;\n        var timeout = EC.DevicePosition.watchTimeout();\n        var self = this;\n\n        function onWatchSuccess(position) {\n\n            console.log('onWatchSuccess called, accuracy: ' + position.coords.accuracy);\n\n            //get HTML5 geolocation coords values replacing null with '' for not available values\n            self.setCoords(position);\n            //clear the current watch\n            window.navigator.geolocation.clearWatch(geolocation_request);\n            deferred.resolve(true);\n        }\n\n        //onError Callback\n        function onWatchError(error) {\n\n            console.log(error);\n            window.navigator.geolocation.clearWatch(geolocation_request);\n\n            switch (error.code) {\n                case 1:\n                    if (window.device.platform === EC.Const.IOS) {\n                        EC.Notification.showAlert(EC.Localise.getTranslation('error'), EC.Localise.getTranslation('location_service_fail'));\n                    }\n                    break;\n                case 3:\n                    EC.Notification.showAlert(EC.Localise.getTranslation('error'), error.message + EC.Localise.getTranslation('location_fail'));\n                    break;\n                default :\n                    EC.Notification.showAlert(EC.Localise.getTranslation('error'), EC.Localise.getTranslation('unknow_error'));\n            }\n            deferred.resolve(false);\n        }\n\n        //on first attempt, get a quick and rough location just to get started\n        //We do not use getCurrentPosition as it tends to give back a cached position when is it called, not looking for a new one each time\n        if (self.is_first_attempt) {\n            geolocation_request = navigator.geolocation.watchPosition(onWatchSuccess, onWatchError, {\n                maximumAge: 0,\n                timeout: timeout,\n                enableHighAccuracy: true\n            });\n            self.is_first_attempt = false;\n        }\n        else {\n\n            /*\n             on subsequent calls, check position for 3 secs and return.\n             this will improve cases when watchPositionretunr immediately with the same value, as it might return more than once during the 3 secs period\n             */\n            window.setTimeout(function () {\n\n                //be safe in case after 3 secs we still do not have a location, and resolve to show old values\n                window.navigator.geolocation.clearWatch(geolocation_request);\n                deferred.resolve(true);\n                console.log('setTimeout called without location');\n            }, 30000);\n\n            //get location using watchPosition for more accurate results, It is called automatically when movement is detected,\n            //not only when requesting it. Do thjis when user wants to improve location\n            geolocation_request = navigator.geolocation.watchPosition(onWatchSuccess, onWatchError, {\n                maximumAge: 0,\n                timeout: timeout,\n                enableHighAccuracy: true\n            });\n        }\n\n        return deferred.promise();\n    };\n\n    module.setCoords = function (position) {\n\n        var self = this;\n        //get HTML5 geolocation coords values replacing null with '' for not available values\n        self.coords = {\n            latitude: (position.coords.latitude === null) ? '' : position.coords.latitude,\n            longitude: (position.coords.longitude === null) ? '' : position.coords.longitude,\n            altitude: (position.coords.altitude === null) ? '' : position.coords.altitude,\n            accuracy: (position.coords.accuracy === null) ? '' : position.coords.accuracy,\n            altitude_accuracy: (position.coords.altitudeAccuracy === null) ? '' : position.coords.altitudeAccuracy,\n            heading: (position.coords.heading === null) ? '' : position.coords.heading\n        };\n    };\n\n    module.getCoordsFormattedText = function () {\n\n        return 'Latitude: ' + this.coords.latitude + ',\\n' + //\n            'Longitude: ' + this.coords.longitude + ',\\n' + //\n            'Altitude: ' + this.coords.altitude + ',\\n' + //\n            'Accuracy: ' + this.coords.accuracy + ',\\n' + //\n            'Altitude Accuracy: ' + this.coords.altitude_accuracy + ',\\n' + //\n            'Heading: ' + this.coords.heading + '\\n';\n\n    };\n\n    module.getCoordsEmptyText = function () {\n        return 'Latitude: ,\\n' + 'Longitude: ,\\n' + 'Altitude: ,\\n' + 'Accuracy: ,\\n' + 'Altitude Accuracy: ,\\n' + 'Heading: \\n';\n    };\n\n    return module;\n}(EC.DevicePosition));\n","/*global $, jQuery, cordova, device, ActivityIndicator, Connection*/\nvar EC = EC || {};\nEC.DevicePosition = EC.DevicePosition || {};\nEC.DevicePosition.loadGoogleMapsApi = function () {\n    'use strict';\n\n    var deferred = new $.Deferred();\n\n    //callback from Google Maps API needs to be in the global scope\n    window.mapIsLoaded = function () {\n        // EC.DevicePosition.is_api_loaded = true;\n        deferred.resolve();\n    };\n\n    //is the Api already loaded?\n    if (window.google !== undefined && window.google.maps) {\n        console.log('Maps API cached already');\n        //if no connection, exit and warn user todo\n        if (EC.Utils.hasGoodConnection()) {\n            //load API from server\n            //connection looks good, try to load tiles\n            deferred.resolve();\n        }\n        else {\n            //could not load API\n            deferred.reject();\n        }\n    }\n    else {\n\n        if (EC.Utils.hasGoodConnection()) {\n\n            $.getScript('https://maps.googleapis.com/maps/api/js?sensor=true&callback=mapIsLoaded')\n                .done(function (script, textStatus) {\n                    console.log(textStatus);\n                })\n                .fail(function (jqxhr, settings, exception) {\n                    console.log(jqxhr + exception);\n                    deferred.reject();\n                });\n        }\n        else {\n            //could not load API\n            deferred.reject();\n        }\n    }\n\n    return deferred.promise();\n};\n\n\n\n\n\n\n","/*global $, jQuery, cordova, device, ActivityIndicator, Connection*/\nvar EC = EC || {};\nEC.DevicePosition = EC.DevicePosition || {};\nEC.DevicePosition = (function (module) {\n    'use strict';\n\n    module.updateGoogleMap = function () {\n\n        var self = this;\n        var deferred = new $.Deferred();\n\n        //get info from map on the dom: if the details are the same, we are navigation to an existing map on the dom, no need to update\n\n        self.current_position = new google.maps.LatLng(self.coords.latitude, self.coords.longitude);\n        self.map_options = {\n            center: {lat: self.coords.latitude, lng: self.coords.longitude},\n            zoom: 16,\n            disableDefaultUI: true\n        };\n\n        self.map = new google.maps.Map(document.getElementById('map-canvas'), self.map_options);\n        //add current user position\n        self.marker = new google.maps.Marker({\n            position: self.current_position,\n            map: self.map,\n            draggable: true\n        });\n\n        //draw accuracy circle\n        self.circle = new google.maps.Circle({\n            center: self.current_position,\n            radius: self.coords.accuracy,\n            map: self.map,\n            fillColor: '#0000FF',\n            fillOpacity: 0.2,\n            strokeColor: '0',\n            strokeOpacity: 0\n        });\n\n        self.marker.bindTo('position', self.circle, 'center');\n        self.map.fitBounds(self.circle.getBounds());\n\n        //let's use 'idle' event and a 2 secs timeout, to play it safe\n        // 'tilesloaded' could not be fire if there are network problems\n        window.google.maps.event.addListenerOnce(self.map, 'idle', function () {\n            window.setTimeout(function () {\n                deferred.resolve();\n            }, 2000);\n        });\n\n        window.google.maps.event.addListener(self.marker, 'dragend', function (event) {\n            console.debug('final position is ' + event.latLng.lat() + ' / ' + event.latLng.lng());\n            self.coords.latitude = event.latLng.lat();\n            self.coords.latitude = event.latLng.lng();\n            EC.Notification.showToast('Marker dragged by user', 'short');\n        });\n\n        return deferred.promise();\n    };\n\n    return module;\n\n}(EC.DevicePosition));\n","/*global $, jQuery, cordova, device, ActivityIndicator*/\n\nvar EC = EC || {};\nEC.Notification = EC.Notification || {};\nEC.Notification = (function () {\n    'use strict';\n\n    /*\n     *\tDisplay native alert popup based on the platform we are running the\n     * app on\n     */\n    var showAlert = function (the_title, the_message) {\n        if (navigator.notification && !EC.Utils.isChrome()) {\n            navigator.notification.alert(the_message, null, the_title, 'ok');\n        } else {\n            alert(the_title ? the_title + ': ' + the_message : the_message);\n        }\n\n    };\n\n    var askConfirm = function (the_title, the_message, onConfirmCallback, has_data_to_save, the_current_input, is_branch) {\n\n        var current_input = the_current_input;\n        var response;\n\n        if (navigator.notification && !EC.Utils.isChrome()) {\n\n            var _confirmCallback = function (btn_index) {\n                console.log('btn_index: ' + btn_index);\n\n                if (btn_index === 1) {\n                    EC.Utils.executeFunctionByName(onConfirmCallback, window);\n                } else {\n                    return;\n                }\n            };\n\n            var _saveConfirmCallback = function (btn_index) {\n\n                switch (btn_index) {\n\n                    case 1:\n                        //exit without saving current form data\n                        EC.Utils.executeFunctionByName(onConfirmCallback, window);\n                        break;\n\n                    case 2:\n                        //save data before leaving form\n                        EC.Notification.showProgressDialog();\n\n                        if (is_branch) {\n                            EC.BranchInputs.saveValuesOnExit(current_input);\n                        } else {\n                            EC.Inputs.saveValuesOnExit(current_input);\n                        }\n\n                        break;\n                    default:\n                        return;\n                }\n\n            };\n\n            //cordova async confirm\n            if (has_data_to_save) {\n                //we have a third option: save the data before exiting\n                navigator.notification.confirm(the_message, _saveConfirmCallback, the_title, [EC.Localise.getTranslation('no'), EC.Localise.getTranslation('save'), EC.Localise.getTranslation('dismiss')]);\n            } else {\n                //normal confirmation just 2 options (Android and iOS options\n                // order is inverted, use iOS order)\n\n                if (window.device.platform === EC.Const.IOS) {\n                    navigator.notification.confirm(the_message, _confirmCallback, the_title, [EC.Localise.getTranslation('confirm'), EC.Localise.getTranslation('dismiss')]);\n                }\n\n                if (window.device.platform === EC.Const.ANDROID) {\n                    navigator.notification.confirm(the_message, _confirmCallback, the_title, [EC.Localise.getTranslation('confirm'), EC.Localise.getTranslation('dismiss')]);\n                }\n\n            }\n\n        } else {\n\n            //standard javascript confirm, synced call\n            response = confirm(the_title ? the_title + ': ' + the_message : the_message);\n            if (response) {\n                EC.Utils.executeFunctionByName(onConfirmCallback, window);\n            } else {\n                return;\n            }\n        }\n\n    };\n\n    /*\n     * Show a native toast notification (All platforms)\n     */\n    var showToast = function (text, duration) {\n\n        var toasts;\n\n        //show only an alert when testing on browser\n        if (EC.Utils.isChrome()) {\n            alert(text);\n            return;\n        }\n\n        window.plugins.toast.show(text, duration, 'bottom', function (a) {\n            // console.log('toast success: ' + a);\n        }, function (b) {\n            alert('toast error: ' + b);\n        });\n\n    };\n\n    /*\n     * Show a progress dialog (spinning loader)\n     */\n    var showProgressDialog = function (the_title, the_message) {\n\n        var title = the_title;\n        var message = the_message;\n        var ActivityIndicator;\n\n        if (EC.Utils.isChrome()) {\n\n            $.mobile.loading('show', {\n                text: the_message,\n                textVisible: true,\n                theme: 'a',\n                html: ''\n            });\n\n        } else {\n\n            switch (window.device.platform) {\n\n                case EC.Const.ANDROID:\n                    navigator.notification.activityStart(title || '', message || 'Loading...');\n                    break;\n\n                case EC.Const.IOS:\n\n                    window.ActivityIndicator.show(message);\n                    break;\n\n            }\n        }\n\n    };\n\n    /*\n     * Hide progress dialog\n     */\n    var hideProgressDialog = function () {\n\n        var ActivityIndicator;\n\n        if (EC.Utils.isChrome()) {\n\n            $.mobile.loading('hide');\n            return;\n\n        }\n\n        console.log('Platform: ' + device.platform);\n\n        switch (window.device.platform) {\n\n            case EC.Const.ANDROID:\n                /*\n                 * here we use a timeout as the activityStop() is buggy,\n                 * sometimes does not trigger if other js code is running.\n                 * Setting a timeout seems to fix the problems\n                 */\n                window.setTimeout(function () {\n                    navigator.notification.activityStop();\n                }, 500);\n                break;\n\n            case EC.Const.IOS:\n\n                if (window.ActivityIndicator) {\n\n                    //if edit mode remove it without timeout\n                    if (window.localStorage.edit_mode) {\n                        window.ActivityIndicator.hide();\n                    } else {\n                        window.setTimeout(function () {\n                            window.ActivityIndicator.hide();\n                        }, 500);\n                    }\n\n                }\n\n                break;\n\n        }\n    };\n\n    return {\n        showAlert: showAlert,\n        askConfirm: askConfirm,\n        showToast: showToast,\n        showProgressDialog: showProgressDialog,\n        hideProgressDialog: hideProgressDialog\n    };\n\n}());\n","/* jslint vars: true , nomen: true devel: true, plusplus: true*/\n/* global $, jQuery*/\nvar EC = EC || {};\nEC.Ui = EC.Ui || {};\nEC.Ui = {\n\n  \n\n    colors: {\n        tap_action_overlay: '#2a6fc3',\n        default_button_background: '#EEEEEE',\n        list_item_background: '#DDDDDD',\n        fa_entry_value_embedded_btn_default: '#000000'\n    },\n\n    bindBtnStates: function () {\n        'use strict';\n        \n        var _this = this;\n\n        //bind events to apply hover effect on buttons (Action Bar)\n        $(document).on('vmousedown', 'div.ui-btn-right', function (e) {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            $(this).css('background-color', _this.colors.tap_action_overlay);\n\n        });\n\n        $(document).on('vmouseup', 'div.ui-btn-right', function (e) {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            $(this).css('background', 'none');\n\n        });\n\n        //bind events to apply hover effect on action buttons large (Action Bar top left)\n        $(document).on('vmousedown', 'div.h-nav-item', function (e) {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            $(this).css(\"background-color\", _this.colors.tap_action_overlay);\n\n        });\n\n        $(document).on('vmouseup', 'div.h-nav-item', function (e) {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            $(this).css(\"background\", \"none\");\n\n        });\n\n        //bind events to apply hover effect on navigation list item (sidebar options)\n        $(document).on('vmousedown', 'li.v-nav-item', function (e) {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            $(this).css(\"background-color\", _this.colors.tap_action_overlay);\n\n        });\n\n        $(document).on('vmouseup', 'li.v-nav-item', function (e) {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            $(this).css(\"background-color\", _this.colors.list_item_background);\n\n        });\n\n        //bind events to apply hover effect on autocomplete list items\n        $(document).on('vmousedown', 'li.h-nav-item', function (e) {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            $(this).css(\"background-color\", _this.colors.tap_action_overlay);\n\n        });\n\n        $(document).on('vmouseup', 'li.h-nav-item', function (e) {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            $(this).css(\"background-color\", _this.colors.list_item_background);\n\n        });\n\n        // //bind events to apply hover effect on navbar(secondary navigation)\n        $(document).on('vmousedown', 'li.inactive-tab', function (e) {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            $(this).css(\"background-color\", _this.colors.tap_action_overlay);\n\n        });\n\n        $(document).on('vmouseup', 'li.inactive-tab', function (e) {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            $(this).css(\"background-color\", _this.colors.default_button_background);\n\n        });\n\n        //bind events to apply hover effect on prev/next button on inputs page (secondary navigation)\n        $(document).on('vmousedown', '.input-prev-btn', function (e) {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            $(this).css(\"background-color\", _this.colors.tap_action_overlay);\n\n        });\n\n        $(document).on('vmouseup', '.input-prev-btn', function (e) {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            $(this).css(\"background-color\", _this.colors.default_button_background);\n\n        });\n\n        //bind events to apply hover effect on prev/next button on inputs page (secondary navigation)\n        $(document).on('vmousedown', '.input-next-btn', function (e) {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            $(this).css(\"background-color\", _this.colors.tap_action_overlay);\n\n        });\n\n        $(document).on('vmouseup', '.input-next-btn', function (e) {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            $(this).css(\"background-color\", _this.colors.default_button_background);\n\n        });\n\n        //bind events to apply hover effect on embedded buttons\n        $(document).on('vmousedown', 'div.embedded-btn', function (e) {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            $(this).css(\"background-color\", _this.colors.tap_action_overlay);\n\n        });\n\n        $(document).on('vmouseup', 'div.embedded-btn', function (e) {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            $(this).css(\"background-color\", _this.colors.default_button_background);\n\n        });\n\n        //bind events to apply hover effect on embedded buttons\n        $(document).on('vmousedown', 'i.fa-ep-entry-value-embedded-btn', function (e) {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            $(this).css(\"color\", _this.colors.tap_action_overlay);\n\n        });\n\n        $(document).on('vmouseup', 'i.fa-ep-entry-value-embedded-btn', function (e) {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            $(this).css(\"color\", _this.colors.fa_entry_value_embedded_btn_default);\n\n        });\n\n        //bind events to apply hover effect on \"show more\" buttons\n        $(document).on('vmousedown', '.more-items-btn', function (e) {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            $(this).css(\"background-color\", _this.colors.tap_action_overlay);\n\n        });\n\n        $(document).on('vmouseup', '.more-items-btn', function (e) {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            $(this).css(\"background-color\", _this.colors.default_button_background);\n\n        });\n\n    }\n};\n\n","/*global $, jQuery, cordova, Connection, LocalFileSystem*/\n\nvar EC = EC || {};\nEC.Utils = EC.Utils || {};\nEC.Utils = (function () {\n    'use strict';\n\n    var UUID;\n    var project = {};\n    var forms = [];\n\n    //UUID is the phone ID set by Phonegap (see Phonegap docs)\n    var setPhoneUUID = function (the_uuid) {\n        this.UUID = the_uuid;\n        console.log('device UUID: ' + this.UUID);\n    };\n\n    var getPhoneUUID = function () {\n        return this.UUID;\n    };\n\n    //return a v4 GUID\n    var _generateGUID = function () {\n        var d = new Date().getTime();\n        var guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = (d + Math.random() * 16) % 16 | 0;\n            d = Math.floor(d / 16);\n            return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);\n        });\n        return guid;\n    };\n\n    //auto gen key is based ion GUID v4\n    var getGenKey = function () {\n        //auto generate a unique key in the form <guid>_<timestamp>\n        return _generateGUID();\n    };\n\n    //return UNIX Epoch timestamp (seconds, 10 digits)\n    var getTimestamp = function () {\n        return Math.floor((new Date().getTime()) / 1000);\n    };\n\n    //open db based on platform\n    var openDatabase = function () {\n\n        if (EC.Utils.isChrome()) {\n            console.log('chrome websql db init');\n            //Chrome Chrome\n            return window.openDatabase('epicollect', '1.0', 'Epicollect', 5 * 1024 * 1024);\n\n        }\n\n        console.log('native SQLite db init');\n\n        //native implementation via SQLite plugin\n        return window.sqlitePlugin.openDatabase({\n            name: 'epicollect.db'\n        });\n        //return window.sqlitePlugin.openDatabase({name: 'epicollect',\n        // bgType: 0});\n\n    };\n\n    //check if the environment is the Chrome browser (using feature detection\n    // http://goo.gl/x4jcS) so we will have to trigger deviceready manually\n    // and also NOT call any Phonegap functions\n    var isChrome = function () {\n        var isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n        // Opera 8.0+ (UA detection to detect Blink/v8-powered Opera)\n        return !!window.chrome && !isOpera;\n    };\n\n\n    var sleep = function (milliseconds) {\n\n        var i;\n        var start = new Date().getTime();\n        for (i = 0; i < 1e7; i++) {\n            if ((new Date().getTime() - start) > milliseconds) {\n                break;\n            }\n        }\n    };\n\n    /*\n     * Parse the specified date format(Timestamp mask) to POSIX standards\n     * (DateBox)\n     */\n    var parseTimestampDate2Posix = function (the_format, the_type) {\n\n        var format = the_format;\n        var type = the_type;\n        var elements;\n        var formatted_elements = [];\n        var i;\n        var iLength;\n\n        //split format based on its type\n        elements = (type === 'date') ? format.split('/') : format.split(':');\n\n        iLength = elements.length;\n        for (i = 0; i < iLength; i++) {\n\n            switch (elements[i]) {\n\n                case 'dd':\n                    formatted_elements.push('%d');\n                    break;\n\n                case 'MM':\n                    formatted_elements.push('%m');\n                    break;\n\n                case 'yyyy':\n                    formatted_elements.push('%Y');\n                    break;\n\n                case 'YYYY':\n                    formatted_elements.push('%Y');\n                    break;\n\n                //hours in 24 format\n                case 'HH':\n                    formatted_elements.push('%H');\n                    break;\n\n                //hours in 12 format\n                case 'hh':\n                    formatted_elements.push('%I');\n                    break;\n\n                case 'mm':\n                    formatted_elements.push('%M');\n                    break;\n\n                case 'ss':\n                    formatted_elements.push('%S');\n                    break;\n            }//switch\n\n        }//for\n\n        return (type === 'date') ? formatted_elements.join('/') : formatted_elements.join(':');\n\n    };\n\n    /** Parse a JS date according to the specified format.\n     *  On Android, date is returned by the datePicker Phonegap plugin in the\n     * form of yyyy/mm/dd\n     *  and it is converted to a javascript date\n     *\n     *  @param {the_date} a JS Date object\n     *  @param {the_format} the format to parse the date to for presentation\n     *  Returns the formatted string\n     */\n    var parseDate = function (the_date, the_format) {\n\n        var date = the_date;\n        var format = the_format;\n        var day = date.getDate();\n        var month = date.getMonth() + 1;\n        //months start from 0\n        var year = date.getFullYear();\n\n        var format_parts = format.split('/');\n        var parsed_date_parts = [];\n        var i;\n        var iLength = format_parts.length;\n\n        for (i = 0; i < iLength; i++) {\n\n            switch (format_parts[i]) {\n\n                case 'dd':\n                    parsed_date_parts.push(day);\n                    break;\n                case 'MM':\n                    parsed_date_parts.push(month);\n                    break;\n                case 'yyyy':\n                    parsed_date_parts.push(year);\n                    break;\n            }\n\n        }\n\n        return parsed_date_parts.join('/');\n\n    };\n\n    /**\n     * Parse an iOS input type='date' value according to the specified\n     * format.\n     * The HTML5 date input specification [1] refers to the RFC3339\n     * specification [2], which specifies a full-date     format equal to:\n     * yyyy-mm-dd\n     * Returns the formatted string\n     */\n    var parseIOSDate = function (the_ios_date, the_format) {\n\n        var date = the_ios_date;\n        var date_parts = date.split('-');\n        var format = the_format;\n        var day = date_parts[2];\n        var month = date_parts[1];\n        var year = date_parts[0];\n\n        var format_parts = format.split('/');\n        var parsed_date_parts = [];\n        var i;\n        var iLength = format_parts.length;\n\n        for (i = 0; i < iLength; i++) {\n\n            switch (format_parts[i]) {\n\n                case 'dd':\n                    parsed_date_parts.push(day);\n                    break;\n                case 'MM':\n                    parsed_date_parts.push(month);\n                    break;\n                case 'yyyy':\n                    parsed_date_parts.push(year);\n                    break;\n            }\n\n        }\n\n        return parsed_date_parts.join('/');\n\n    };\n\n    //Parse time according to the specified format. Returns the formatted\n    // time string\n    var parseTime = function (the_date, the_format) {\n\n        var date = the_date;\n        var format = the_format;\n        var hours24 = date.getHours();\n        var hours12 = ((hours24 + 11) % 12) + 1;\n        var minutes = date.getMinutes();\n        var seconds = date.getSeconds();\n\n        var format_parts = format.split(':');\n        var parsed_date_parts = [];\n        var i;\n        var iLength = format_parts.length;\n\n        var _addZero = function (num) {\n            return (num >= 0 && num < 10) ? '0' + num : num;\n        };\n        for (i = 0; i < iLength; i++) {\n            switch (format_parts[i]) {\n                case 'hh':\n                    parsed_date_parts.push(hours12);\n                    break;\n                case 'HH':\n                    parsed_date_parts.push(_addZero(hours24));\n                    break;\n                case 'mm':\n                    parsed_date_parts.push(_addZero(minutes));\n                    break;\n                case 'ss':\n                    parsed_date_parts.push(_addZero(seconds));\n                    break;\n            }\n        }\n        return parsed_date_parts.join(':');\n    };\n\n    /**\n     * Parse time according to the specified format.\n     * @param {the_ios_time} time in the form HH:mm:ss\n     * @para, {the_format} format to display time\n     * Returns the formatted time string\n     */\n    var parseIOSTime = function (the_ios_time, the_format) {\n\n        var time = the_ios_time;\n        var format = the_format;\n\n        var time_parts = time.split(':');\n\n        var hours24 = parseInt(time_parts[0], 10);\n        var hours12 = ((hours24 + 11) % 12) + 1;\n        var minutes = parseInt(time_parts[1], 10);\n        var seconds = parseInt(time_parts[2], 10);\n\n        var format_parts = format.split(':');\n        var parsed_date_parts = [];\n        var i;\n        var iLength = format_parts.length;\n\n        var _addZero = function (num) {\n            return (num >= 0 && num < 10) ? '0' + num : num;\n        };\n        for (i = 0; i < iLength; i++) {\n            switch (format_parts[i]) {\n                case 'hh':\n                    parsed_date_parts.push(hours12);\n                    break;\n                case 'HH':\n                    parsed_date_parts.push(_addZero(hours24));\n                    break;\n                case 'mm':\n                    parsed_date_parts.push(_addZero(minutes));\n                    break;\n                case 'ss':\n                    parsed_date_parts.push(_addZero(seconds));\n                    break;\n            }\n        }\n        return parsed_date_parts.join(':');\n    };\n\n    var setProject = function (the_project) {\n\n        this.project = the_project;\n    };\n\n    var getProject = function () {\n\n        return this.project;\n    };\n\n    var setForms = function (the_forms) {\n\n        this.forms = the_forms;\n\n        window.localStorage.forms = JSON.stringify(this.forms);\n\n    };\n\n    /*\n     * form tree is defined by @num sequence, i.e form num=2 is always the\n     * child of form num=1 and so on\n     *\n     * @return an object { parent: <id>, pname: <parent name>, child: <id>,\n     * cname: <child name>} with an id of 0 if parent or\n     * child is not applicable\n     */\n    var getParentAndChildForms = function (the_form_id) {\n\n        //get forms object if it is not defined\n        this.forms = this.forms || JSON.parse(window.localStorage.forms);\n\n        var form_id = parseInt(the_form_id, 10);\n        var i;\n        var iLength = this.forms.length;\n        var parent_form_id;\n        var parent_form_name;\n        var child_form_id;\n        var child_form_name;\n\n        for (i = 0; i < iLength; i++) {\n\n            //get current form num\n            if (parseInt(this.forms[i]._id, 10) === form_id) {\n\n                if (i - 1 === -1) {\n                    //return 0 if this is the top parent form in the tree\n                    parent_form_id = 0;\n                    parent_form_name = '';\n\n                }\n                else {\n                    parent_form_id = this.forms[i - 1]._id;\n                    parent_form_name = this.forms[i - 1].name;\n                }\n\n                if (i + 1 === iLength) {\n\n                    child_form_id = 0;\n                    child_form_name = '';\n\n                }\n                else {\n                    //return 0 if this is the bottom child in the tree\n                    child_form_id = this.forms[i + 1]._id;\n                    child_form_name = this.forms[i + 1].name;\n                }\n\n                return {\n                    parent: parent_form_id,\n                    pname: parent_form_name,\n                    child: child_form_id,\n                    cname: child_form_name\n                };\n\n            }\n\n        }//for\n\n    };\n\n    /*\n     * Parse location string returning a json object with all the properties\n     * in the form property: value\n     *\n     * Also remove any new line or carriage return from the values\n     *\n     * if the value is skipped, return an object with empty properties\n     */\n    var parseLocationString = function (the_string) {\n\n        var string = the_string;\n        var coords = {};\n        var temp_array = string.split(',');\n\n\n        if (temp_array[0] === EC.Const.SKIPPED) {\n            coords.latitude = '';\n            coords.longitude = '';\n            coords.altitude = '';\n            coords.accuracy = '';\n            coords.heading = '';\n\n        }\n        else {\n            coords.latitude = parseFloat(temp_array[0].replace('Latitude: ', '').replace(/(\\r\\n|\\n|\\r)/gm, ''));\n            coords.longitude = parseFloat(temp_array[1].replace('Longitude: ', '').replace(/(\\r\\n|\\n|\\r)/gm, ''));\n            coords.altitude = parseFloat(temp_array[2].replace('Altitude: ', '').replace(/(\\r\\n|\\n|\\r)/gm, ''));\n            coords.accuracy = parseFloat(temp_array[3].replace('Accuracy: ', '').replace(/(\\r\\n|\\n|\\r)/gm, ''));\n            coords.heading = parseFloat(temp_array[5].replace('Heading: ', '').replace(/(\\r\\n|\\n|\\r)/gm, ''));\n\n            //remove NAN todo better find a new way...\n            coords.latitude = isNaN(coords.latitude) ? '' : coords.latitude;\n            coords.longitude = isNaN(coords.longitude) ? '' : coords.longitude;\n            coords.altitude = isNaN(coords.altitude) ? '' : coords.altitude;\n            coords.accuracy = isNaN(coords.accuracy) ? '' : coords.accuracy;\n            coords.heading = isNaN(coords.heading) ? '' : coords.heading;\n        }\n\n        return coords;\n    };\n\n    //test is astring is a valid URL\n    var isURL = function (the_string) {\n        var regexp = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n        return regexp.test(the_string);\n    };\n\n    var isValidEmail = function (the_email) {\n        var re = /^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$/;\n        return re.test(the_email);\n    };\n\n    var getForms = function () {\n        return this.forms;\n    };\n\n    var isGPSEnabled = function () {\n\n        var is_gps_enabled = true;\n        var deferred = new $.Deferred();\n\n        function _onGpsChecked(isEnabled) {\n            console.log('gps is ' + isEnabled);\n            if (!isEnabled) {\n                deferred.reject();\n            }\n            else {\n                deferred.resolve();\n            }\n        }\n\n        if (!EC.Utils.isChrome()) {\n\n            switch (window.device.platform) {\n\n                case EC.Const.ANDROID:\n                    cordova.plugins.diagnostic.isLocationEnabled(_onGpsChecked);\n                    break;\n                case EC.Const.IOS:\n                    //TODO: resolve until we have a way to get this via\n                    // Cordova, maybe allowing location at the beginning is\n                    // enough\n                    deferred.resolve();\n                    break;\n            }\n        }\n        return deferred.promise();\n    };\n\n    //execute a function passing its full namespaced name (and window as\n    // context) form_tr\n    //http://stackoverflow.com/questions/359788/how-to-execute-a-javascript-function-when-i-have-its-name-as-a-string\n    var executeFunctionByName = function (functionName, context /*, args */) {\n\n        var i;\n        var args = Array.prototype.slice.call(arguments).splice(2);\n        var namespaces = functionName.split('.');\n        var func = namespaces.pop();\n        for (i = 0; i < namespaces.length; i++) {\n            context = context[namespaces[i]];\n        }\n        return context[func].apply(this, args);\n    };\n\n    /*\n     * When jumps are defined in the xml they are a comma separated list of\n     * values like:\n     *\n     * ecplus_University_ctrl16,1,ecplus_University_ctrl16,!1\n     *\n     * odd item is identifier to jump to\n     * even element is the INDEX of the value (starting from 1) that trigger\n     * the jump for RADIO and DROPDOWN\n     * for CHECKBOX, the even element is  bizzarely the VALUE that trigger\n     * the jump (not the INDEX). Go figure\n     * the '!' will define the jump logic (is/is not)\n     * END means the end off the form\n     * ALL means jump always\n     *\n     */\n    var parseJumpString = function (the_jump_string) {\n\n        var raw_jumps;\n        var parsed_jumps = [];\n        var i;\n        var iLength;\n        var obj;\n\n        raw_jumps = the_jump_string.split(',');\n        iLength = raw_jumps.length;\n\n        for (i = 0; i < iLength; i += 2) {\n\n            obj = {};\n\n            //even element is a jump destination, as @ref\n            obj.jump_to = raw_jumps[i];\n\n            if (raw_jumps[i + 1].charAt(0) === '!') {\n\n                obj.jump_when = EC.Const.JUMP_VALUE_IS_NOT;\n                obj.jump_value = raw_jumps[i + 1].substr(1);\n\n            }\n            else {\n\n                switch (raw_jumps[i + 1]) {\n\n                    case EC.Const.JUMP_ALWAYS:\n                        obj.jump_when = EC.Const.JUMP_ALWAYS;\n                        obj.jump_value = '';\n                        break;\n\n                    case EC.Const.JUMP_FIELD_IS_BLANK:\n                        obj.jump_when = EC.Const.JUMP_FIELD_IS_BLANK;\n                        obj.jump_value = '';\n                        break;\n\n                    default:\n                        obj.jump_when = obj.jump_when = EC.Const.JUMP_VALUE_IS;\n                        obj.jump_value = raw_jumps[i + 1];\n\n                }\n\n            }\n\n            parsed_jumps.push(obj);\n\n        }\n\n        return parsed_jumps;\n\n    };\n\n    var getLocalFormID = function (the_form_name) {\n\n        var forms = JSON.parse(window.localStorage.forms);\n        var i;\n        var iLength = forms.length;\n        var name = the_form_name;\n\n        for (i = 0; i < iLength; i++) {\n\n            if (forms[i].name === name) {\n                return forms[i]._id;\n            }\n\n        }\n\n    };\n\n    var isFormGenKeyHidden = function () {\n\n        var forms = JSON.parse(window.localStorage.forms);\n        var form_id = parseInt(window.localStorage.form_id, 10);\n        var i;\n        var iLength = forms.length;\n\n        for (i = 0; i < iLength; i++) {\n\n            if (parseInt(forms[i]._id, 10) === form_id) {\n                return parseInt(forms[i].is_genkey_hidden, 10);\n            }\n\n        }\n\n    };\n\n    var isBranchFormGenKeyHidden = function () {\n\n        var form = JSON.parse(window.localStorage.branch_form);\n\n        return form.is_genkey_hidden;\n\n    };\n\n    var getLocalInputID = function (the_ref) {\n\n        var inputs = JSON.parse(window.localStorage.local_input_ids);\n        var i;\n        var iLength = inputs.length;\n        var ref = the_ref;\n\n        for (i = 0; i < iLength; i++) {\n\n            if (inputs[i].ref === ref) {\n\n                return inputs[i]._id;\n\n            }\n\n        }\n    };\n\n    var getFormPrimaryKeyRef = function (the_form_id) {\n\n        var form_id = parseInt(the_form_id, 10);\n        var forms = JSON.parse(window.localStorage.forms);\n        var i;\n        var iLength = forms.length;\n\n        for (i = 0; i < iLength; i++) {\n\n            if (forms[i]._id === form_id) {\n\n                return forms[i].key;\n            }\n        }\n\n    };\n\n    var projectHasBranches = function () {\n\n        var forms = JSON.parse(window.localStorage.forms);\n        var i;\n        var iLength = forms.length;\n        var has_branches = false;\n\n        for (i = 0; i < iLength; i++) {\n\n            if (parseInt(forms[i].has_branches, 10) === 1) {\n                has_branches = true;\n            }\n        }\n        return has_branches;\n\n    };\n\n    //to keep track of parent-child relationship, we need the 'ref' of the parent form for some features\n    var getFormParentPrimaryKeyRef = function (the_form_id) {\n\n        var form_id = parseInt(the_form_id, 10);\n        var forms = JSON.parse(window.localStorage.forms);\n        var i;\n        var iLength = forms.length;\n\n        for (i = 0; i < iLength; i++) {\n            if (forms[i]._id === form_id) {\n                return forms[i - 1].key;\n            }\n        }\n    };\n\n    var getFormByID = function (the_form_id) {\n\n        var form_id = parseInt(the_form_id, 10);\n        var forms = JSON.parse(window.localStorage.forms);\n        var i;\n        var iLength = forms.length;\n\n        for (i = 0; i < iLength; i++) {\n\n            if (parseInt(forms[i]._id, 10) === form_id) {\n\n                return forms[i];\n            }\n        }\n\n    };\n\n    var getEntriesCount = function () {\n\n        var i;\n        var iLength;\n        var forms = JSON.parse(window.localStorage.forms);\n        var count = 0;\n\n        for (i = 0; i < iLength; i++) {\n            count += parseInt(forms[i].entries, 10);\n        }\n        return count;\n    };\n\n    var getParentFormByChildID = function (the_child_form_id) {\n\n        var form_id = parseInt(the_child_form_id, 10);\n        var forms = JSON.parse(window.localStorage.forms);\n        var i;\n        var iLength = forms.length;\n\n        for (i = 0; i < iLength; i++) {\n            if (forms[i]._id === form_id) {\n                return forms[i - 1];\n            }\n        }\n    };\n\n    var updateFormsObj = function (the_form_id) {\n\n        var forms = JSON.parse(window.localStorage.forms);\n        var form_id = parseInt(the_form_id, 10);\n        var i;\n        var iLength = forms.length;\n\n        for (i = 0; i < iLength; i++) {\n\n            if (forms[i]._id === form_id) {\n\n                //increase entries counter\n                forms[i].entries = forms[i].entries + 1;\n                break;\n            }\n        }\n\n        window.localStorage.forms = JSON.stringify(forms);\n\n    };\n\n    var getChildrenForms = function (the_form_id) {\n\n        var forms = JSON.parse(window.localStorage.forms);\n        var form_id = parseInt(the_form_id, 10);\n        var i;\n        var iLength = forms.length;\n\n        for (i = 0; i < iLength; i++) {\n\n            if (forms[i]._id === form_id) {\n\n                //return all the elements after the current index\n                return forms.slice(i + 1, iLength + 1);\n            }\n        }\n    };\n\n    var changeHashNavigationDirection = function (the_hash, the_new_direction) {\n\n        var hash = the_hash.split('&');\n        var direction = hash[hash.length - 1].split('=');\n\n        direction[direction.length - 1] = the_new_direction;\n\n        hash[hash.length - 1] = direction[0] + '=' + direction[1];\n\n        console.log(hash);\n\n        return hash.join('&');\n\n    };\n\n    //check if a value is in the array, return true on success\n    var inArray = function (the_array, the_value, is_case_sensitive) {\n\n        if (!the_array) {\n            return false;\n        }\n\n        function findWord(array, word) {\n            return -1 < array.map(function (item) {\n                    return item.toLowerCase();\n                }).indexOf(word.toLowerCase());\n        }\n\n        //case sensitive search\n        if (is_case_sensitive) {\n            return (the_array.indexOf(the_value) !== -1);\n        }\n\n        // case not sensitive search\n        return findWord(the_array, the_value);\n    };\n\n    /*\n     * Get app version name\n     */\n    var getVersionName = function () {\n\n        var version_name;\n        var deferred = new $.Deferred();\n\n        cordova.getAppVersion(function (the_version_name) {\n            console.log('App version ' + the_version_name);\n            version_name = the_version_name;\n            deferred.resolve(version_name);\n        });\n\n        return deferred.promise();\n\n    };\n\n    var getAppName = function () {\n\n        var app_name;\n        var deferred = new $.Deferred();\n\n        cordova.getAppVersion.getAppName(function (the_app_name) {\n            console.log('App name ' + the_app_name);\n            app_name = the_app_name;\n            deferred.resolve(app_name);\n        });\n\n        return deferred.promise();\n\n    };\n\n    var getExportDirName = function () {\n\n        var dir;\n        var deferred = new $.Deferred();\n\n        cordova.getAppVersion.getAppName(function (the_app_name) {\n\n            //sanitise app name to be used as a directory (remove all special chars with '-')\n            dir = the_app_name.replace(/[^\\w\\s]/gi, '-')\n            dir += '-export';\n            deferred.resolve(dir);\n        });\n\n        return deferred.promise();\n\n    };\n\n    //get absolute path for page urls\n    var getPageBaseURI = function () {\n\n        var base_uri;\n\n        //if we are testing with Chrome Chrome/browser on the iMac (replace based on your\n        // dev environment if needed)\n        if (EC.Utils.isChrome()) {\n\n            base_uri = window.localStorage.BASE_URI;\n\n        }\n        else {\n\n            switch (window.device.platform) {\n\n                case 'Android':\n\n                    //@debug on: old android platforms need jsHybugger to run\n                    // as a service, newer platform do not\n                    //check if the phone is running anything less than 4.4.*\n                    // KitKat then request pages via the service if needed\n                    console.log('kitkat regex: ' + EC.Const.KITKAT_REGEX.test(window.device.version));\n                    if (EC.Const.DEBUG === 1 && !(EC.Const.KITKAT_REGEX.test(window.device.version) || EC.Const.LOLLIPOP_REGEX.test(window.device.version))) {\n\n                        //base_uri = 'content://jsHybugger.org/file:///android_asset/www/';\n                        //@debug off\n                        base_uri = EC.Const.ANDROID_ASSETS_ABS_PATH;\n\n                    }\n                    else {\n\n                        //@debug off\n                        base_uri = EC.Const.ANDROID_ASSETS_ABS_PATH;\n                    }\n\n                    break;\n\n                case 'iOS':\n\n                    base_uri = EC.Const.IOS_ASSETS_ABS_PATH;\n                    break;\n\n            }\n        }\n        return base_uri;\n    };\n\n    var isValidValue = function (the_input, the_value, the_clone_value) {\n\n        var self = this;\n\n        //store validation details in coordsheadin.\n        var validation = {\n            is_valid: true,\n            message: ''\n        };\n\n        var input = the_input;\n        var value = the_value;\n        var pattern;\n        var clone_value = the_clone_value;\n\n        //return immediately if input is branch\n        if (input.type === EC.Const.BRANCH) {\n            return validation;\n        }\n\n        //return immediately if input is integer value is not an integer but\n        // a float (user can enter the dot, depending on the native keyboard\n        // layout)\n        if (input.type === EC.Const.INTEGER) {\n\n            //check if number value is integer, not float\n            if (parseFloat(value) !== parseInt(value, 10) && value !== '') {\n\n                validation.is_valid = false;\n                validation.message = EC.Localise.getTranslation('invalid_integer');\n\n                return validation;\n            }\n        }\n\n        /** for iOS only: it is currently NOT possible to show a keyboard\n         * with only numbers and the dot '.' to input decimal values\n         *  therefore the full keyboard is shown and we need to sanitise the\n         * input against wrong chars\n         *\n         */\n        if (input.type === EC.Const.DECIMAL) {\n\n            //check if value is a decimal value (http://goo.gl/Q4J4cU)\n            if (!self.isNumber(value)) {\n\n                if (value !== '') {\n                    validation.is_valid = false;\n                    validation.message = EC.Localise.getTranslation('invalid_decimal');\n\n                    return validation;\n                }\n\n            }\n        }\n\n        //if the value is a primary key, check that is does not contain the\n        // char set as ENTRY_ROOT_PATH_SEPARATOR\n        if (input.is_primary_key === 1 && value.indexOf(EC.Const.ENTRY_ROOT_PATH_SEPARATOR) !== -1) {\n\n            validation.is_valid = false;\n            validation.message = EC.Localise.getTranslation('pk_reserved_char') + EC.Const.ENTRY_ROOT_PATH_SEPARATOR;\n\n            return validation;\n\n        }\n\n        //check if the input needs to match a regular expression\n        if (input.regex !== '') {\n\n            if (!value.match(input.regex)) {\n\n                validation.is_valid = false;\n                validation.message = EC.Localise.getTranslation('invalid_regex') + input.regex;\n\n                return validation;\n            }\n        }\n\n        //check if the value has a double check. In that case 'value' will\n        // contain 2 values to match\n        if (parseInt(input.has_double_check, 10) === 1) {\n\n            if (value !== clone_value) {\n\n                validation.is_valid = false;\n                validation.message = EC.Localise.getTranslation('values_unmatched');\n\n                return validation;\n            }\n        }\n\n        //check if the value is within the max range\n        if (input.max_range !== '') {\n\n            //use parseFloat as it can be an integer or a decimal value\n            if (parseFloat(value) > parseFloat(input.max_range)) {\n\n                validation.is_valid = false;\n                validation.message = EC.Localise.getTranslation('out_of_range');\n\n                return validation;\n            }\n        }\n\n        //check if the value is within the min range\n        if (input.min_range !== '') {\n\n            //use parseFloat as it can be an integer or a decimal value\n            if (parseFloat(value) < parseFloat(input.min_range)) {\n\n                validation.is_valid = false;\n                validation.message = EC.Localise.getTranslation('out_of_range');\n\n                return validation;\n            }\n        }\n\n        //check the user did not entered the reserved word _skipp3d_\n        if (input.value === EC.Const.SKIPPED) {\n\n            validation.is_valid = false;\n            validation.message = EC.Localise.getTranslation('reserved_keyword');\n\n            return validation;\n\n        }\n\n        //check if the input is required\n        if (parseInt(input.is_required, 10) === 1) {\n\n            //if the input is a dropdown, radio or checkbox, check for\n            // NO_OPTION_SELECTED label\n            if (input.type === EC.Const.DROPDOWN || input.type === EC.Const.RADIO || input.type === EC.Const.CHECKBOX) {\n\n                if (value === EC.Const.NO_OPTION_SELECTED) {\n\n                    validation.is_valid = false;\n                    validation.message = EC.Localise.getTranslation('field_required');\n\n                    return validation;\n                }\n\n            }\n            else {\n\n                if (value === '') {\n\n                    validation.is_valid = false;\n                    validation.message = EC.Localise.getTranslation('field_required');\n\n                    return validation;\n                }\n\n            }\n        }\n\n        return validation;\n    };\n\n    // get iOS app root path (www)\n    var setIOSRootPath = function () {\n\n        function onSuccess(fileSystem) {\n\n            var documents_path;\n\n            //get absolute path on iOS 8, there is a bug in Cordova 3.7 see\n            // http://goo.gl/lUIqyl\n            if (window.device.platform === EC.Const.IOS && parseFloat(window.device.version) >= 8) {\n\n                documents_path = fileSystem.toURL();\n\n                EC.Const.IOS_ASSETS_ABS_PATH = documents_path.replace('file:////', 'file:///private/');\n                EC.Const.IOS_ASSETS_ABS_PATH += 'www/';\n                console.log('iOS 8+ root www - ' + EC.Const.IOS_ASSETS_ABS_PATH);\n            }\n            else {\n\n                /* Very imp!!!! they changed the property from 'fullPath'\n                 * (Cordova  2.9) to 'nativeURL' somewhere in time!!!!\n                 */\n\n                console.log(fileSystem);\n\n                documents_path = fileSystem.root.nativeURL;\n                documents_path = documents_path.replace('Documents/', '');\n\n                //IOS_ASSETS_ABS_PATH : 'Epicollect5 64bit.app/www/' -> we ned to append this\n                EC.Const.IOS_ASSETS_ABS_PATH = documents_path + EC.Const.IOS_ASSETS_ABS_PATH;\n\n                console.log('iOS root www - ' + EC.Const.IOS_ASSETS_ABS_PATH);\n            }\n        }\n\n        function onError(error) {\n\n            console.log(JSON.stringify(error));\n        }\n\n        //on iOS 8, get the Directory Entry using new method\n        if (window.device.platform === EC.Const.IOS && parseFloat(window.device.version) >= 8) {\n            window.resolveLocalFileSystemURL(cordova.file.applicationDirectory, onSuccess, onError);\n        }\n        else {\n\n            //on other platforms, use legacy method\n            window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, onSuccess, onError);\n        }\n\n    };\n\n    var setIOSPersistentStoragePath = function () {\n\n        function onSuccess(fileSystem) {\n\n            EC.Const.IOS_APP_PRIVATE_URI = fileSystem.root.nativeURL;\n\n            /*remove 'file://' from path: images from iOS application folder\n             * will need the 'file://'\n             * to be loaded, but audio and video files will not:\n             * http://stackoverflow.com/questions/24205331/mp3-audio-playback-not-working-with-cordova-3-5-on-ios\n             */\n            EC.Const.IOS_APP_PRIVATE_URI = EC.Const.IOS_APP_PRIVATE_URI.slice(7);\n\n            console.log('iOS Documents path - ' + EC.Const.IOS_APP_PRIVATE_URI);\n        }\n\n        function onError(error) {\n            console.log(JSON.stringify(error));\n        }\n\n        window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, onSuccess, onError);\n    };\n\n    var setMediaDirPaths = function () {\n\n        switch (window.device.platform) {\n\n            case EC.Const.ANDROID:\n                EC.Const.PHOTO_DIR = '/files/images/';\n                EC.Const.AUDIO_DIR = '/files/audios/';\n                EC.Const.VIDEO_DIR = '/files/videos/';\n                break;\n            case EC.Const.IOS:\n                EC.Const.PHOTO_DIR = 'images/';\n                EC.Const.AUDIO_DIR = 'audios/';\n                EC.Const.VIDEO_DIR = 'videos/';\n                break;\n\n        }\n\n    };\n\n    /**\n     *\n     * @param {Object} the_filenames an array mapping filenames against their\n     * timestamps\n     * @param {Object} the_current_filename The filename to look the\n     * timestamp for\n     *\n     * get the filename for a photo saved in persistent storage on iOS.\n     * Cordova Camera API returns an image URI like <cdv_photo_001.jpg> on\n     * iOS tmp folder\n     * but we save the file using the timestamp in the Documents folder, as\n     * wee do on Android\n     * (where the timestamp is used as file name by default).\n     */\n    var getIOSFilename = function (the_filenames, the_current_filename) {\n\n        var i;\n        var filenames = the_filenames;\n        var current_filename = the_current_filename;\n        var iLength = filenames.length;\n\n        for (i = 0; i < iLength; i++) {\n            if (filenames[i].filename === current_filename) {\n                return filenames[i].timestamp;\n            }\n        }\n    };\n\n    function isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function getParameterByName(name) {\n        name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n        var regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)'),\n            results = regex.exec(location.search);\n        return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n    }\n\n    var mapLabelToValue = function (the_value, the_inputs) {\n\n        function _getInputByRef(the_ref, the_inputs) {\n\n            var inputs = the_inputs;\n            var i;\n            var iLength = inputs.length;\n\n            for (i = 0; i < iLength; i++) {\n\n                if (inputs[i].ref === the_ref) {\n                    return inputs[i];\n                }\n            }\n        }\n\n        function _getCheckboxLabels(the_value, the_current_input) {\n\n            var value_as_array = the_value.value.split(',');\n            var current_input = the_current_input;\n            var i;\n            var j;\n            var iLength = value_as_array.length;\n            var jLength = current_input.options.length;\n            var labels = [];\n            for (i = 0; i < iLength; i++) {\n                for (j = 0; j < jLength; j++) {\n\n                    if (current_input.options[j].value === value_as_array[i].trim()) {\n                        labels.push(current_input.options[j].label);\n                    }\n\n                }\n            }\n\n            return labels;\n\n        }\n\n        function _getDropdownOrRadioLabel(the_value, the_current_input) {\n\n            var i;\n            var current_input = the_current_input;\n            var value = the_value;\n            var iLength = current_input.options.length;\n\n            for (i = 0; i < iLength; i++) {\n                if (current_input.options[i].value === value.value.trim()) {\n                    return current_input.options[i].label;\n                }\n            }\n        }\n\n        var value = the_value;\n        var ref = value.ref;\n        var inputs = the_inputs;\n        var current_input = _getInputByRef(ref, inputs);\n        var mapped_label;\n\n        switch (value.type) {\n\n            //value.value will be an array\n            case EC.Const.CHECKBOX:\n                //for checkboxes, mapped_label will be a csv\n                mapped_label = _getCheckboxLabels(value, current_input);\n                break;\n\n            //value.value will be string\n            case EC.Const.DROPDOWN:\n\n                mapped_label = _getDropdownOrRadioLabel(value, current_input);\n                break;\n\n            //value.value will be string\n            case EC.Const.RADIO:\n\n                mapped_label = _getDropdownOrRadioLabel(value, current_input);\n                break;\n\n        }\n\n        return mapped_label;\n\n    };\n\n    //check if the audio files is stored or cache, comparing the paths\n    function isAudioFileStored(the_cache_path, _the_file_path) {\n\n        var file_path = _the_file_path;\n        var cache_path = the_cache_path;\n        var file_path_parts = file_path.split('/');\n\n        file_path_parts.pop();\n        file_path = file_path_parts.join('/');\n        file_path += '/';\n\n        console.log('cache_path ' + cache_path);\n        console.log('file_path' + file_path);\n\n        return (file_path === cache_path) ? false : true;\n\n    }\n\n    function generateAudioFileName() {\n\n        var filename;\n\n        switch (window.device.platform) {\n\n            case EC.Const.ANDROID:\n                //build filename timestamp + mp4 (Cordova 2.9 sources have been modified manually\n                // to record high quality audio)\n                filename = EC.Utils.getTimestamp() + '.mp4';\n                break;\n\n            case EC.Const.IOS:\n\n                //build filename timestamp + wav (iOS only records to files of type .wav and\n                // returns an error if the file name extension is not correct.)\n                filename = EC.Utils.getTimestamp() + '.wav';\n                break;\n\n        }\n\n        return filename;\n\n    }\n\n    //check if there is a internet connection (cordova online and offline events consider Connection.UNKNOWN as online? Better to use this function)\n    var hasConnection = function () {\n        //return immediately if testing on Chrome\n        if (EC.Utils.isChrome()) {\n            return true;\n        }\n        if (navigator.network) {\n            return !(navigator.network.connection.type === Connection.NONE || navigator.network.connection.type === Connection.UNKNOWN);\n        }\n    };\n\n    //check if the connection is good enough to load map tiles (well, CELL network type is not available on iOS so this function is exactly like hasConnection)\n    function hasGoodConnection() {\n\n        var is_good = true;\n\n        switch (navigator.connection.type) {\n\n            case Connection.NONE:\n                console.log('no internet connection');\n                is_good = false;\n                break;\n\n            case Connection.UNKNOWN:\n                console.log('unknown internet connection');\n                is_good = false;\n                break;\n\n            //this would be great but Cell network info are not available on iOS\n            //case Connection.CELL_2G:\n            //    console.log('2G connection too weak');\n            //    is_good = false;\n            //    break;\n            //\n            //case Connection.CELL:\n            //    console.log('Connection too weak');\n            //    is_good = false;\n            //    break;\n        }\n        //I assume the connection is good enough to load the map tiles\n        return is_good;\n    }\n\n    return {\n\n        setForms: setForms,\n        getForms: getForms,\n        getPhoneUUID: getPhoneUUID,\n        setPhoneUUID: setPhoneUUID,\n        getGenKey: getGenKey,\n        getParentAndChildForms: getParentAndChildForms,\n        getTimestamp: getTimestamp,\n        hasConnection: hasConnection,\n        openDatabase: openDatabase,\n        isChrome: isChrome,\n        projectHasBranches: projectHasBranches,\n        parseTimestampDate2Posix: parseTimestampDate2Posix,\n        parseDate: parseDate,\n        parseIOSDate: parseIOSDate,\n        parseTime: parseTime,\n        parseIOSTime: parseIOSTime,\n        parseLocationString: parseLocationString,\n        parseJumpString: parseJumpString,\n        isURL: isURL,\n        isNumber: isNumber,\n        sleep: sleep,\n        isGPSEnabled: isGPSEnabled,\n        executeFunctionByName: executeFunctionByName,\n        getLocalInputID: getLocalInputID,\n        getLocalFormID: getLocalFormID,\n        isValidEmail: isValidEmail,\n        getFormPrimaryKeyRef: getFormPrimaryKeyRef,\n        getFormParentPrimaryKeyRef: getFormParentPrimaryKeyRef,\n        getFormByID: getFormByID,\n        getEntriesCount: getEntriesCount,\n        isFormGenKeyHidden: isFormGenKeyHidden,\n        isBranchFormGenKeyHidden: isBranchFormGenKeyHidden,\n        getParentFormByChildID: getParentFormByChildID,\n        updateFormsObj: updateFormsObj,\n        getChildrenForms: getChildrenForms,\n        changeHashNavigationDirection: changeHashNavigationDirection,\n        inArray: inArray,\n        getVersionName: getVersionName,\n        getAppName:getAppName,\n        getExportDirName: getExportDirName,\n        getPageBaseURI: getPageBaseURI,\n        isValidValue: isValidValue,\n        setIOSRootPath: setIOSRootPath,\n        setMediaDirPaths: setMediaDirPaths,\n        setIOSPersistentStoragePath: setIOSPersistentStoragePath,\n        getIOSFilename: getIOSFilename,\n        getParameterByName: getParameterByName,\n        mapLabelToValue: mapLabelToValue,\n        isAudioFileStored: isAudioFileStored,\n        generateAudioFileName: generateAudioFileName,\n        hasGoodConnection: hasGoodConnection\n    };\n\n}());\n\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n * Small library of utility function helpful when running epicollect5 on older platforms or when a custom function is necessary\n *\n */\nvar EC = window.EC || {};\nEC.Config = (function () {\n    'use strict';\n\n    //concatenate array only keeping unique values\n    Array.prototype.unique = function () {\n\n        var i;\n        var j;\n        var a = this.concat();\n\n        for (i = 0; i < a.length; ++i) {\n            for (j = i + 1; j < a.length; ++j) {\n                if (a[i] === a[j]) {\n                    a.splice(j--, 1);\n                }\n            }\n        }\n        return a;\n    };\n\n    //search element in array\n    if (!Array.prototype.indexOf) {\n        Array.prototype.indexOf = function (searchElement, fromIndex) {\n            var i, pivot = fromIndex || 0, length;\n\n            if (!this) {\n                throw new TypeError();\n            }\n\n            length = this.length;\n\n            if (length === 0 || pivot >= length) {\n                return -1;\n            }\n\n            if (pivot < 0) {\n                pivot = length - Math.abs(pivot);\n            }\n\n            for (i = pivot; i < length; i++) {\n                if (this[i] === searchElement) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }//indexOf\n\n    //check if two arrays are identical, strict flag if the elements need to be in the same order\n    Array.prototype.equals = function (array, is_strict) {\n\n        var i;\n\n        if (!array) {\n            return false;\n        }\n        if (arguments.length === 1) {\n            is_strict = true;\n        }\n\n        if (this.length !== array.length) {\n            return false;\n        }\n        for (i = 0; i < this.length; i++) {\n            if (this[i] instanceof Array && array[i] instanceof Array) {\n                if (!this[i].equals(array[i], is_strict)) {\n                    return false;\n                }\n            }\n            if (is_strict && this[i] !== array[i]) {\n                return false;\n            }\n            if (!is_strict) {\n                return this.sort().equals(array.sort(), true);\n            }\n        }\n        return true;\n    };\n\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n    //check if a string start with the passed substring/char\n    if (!String.prototype.startsWith) {\n        Object.defineProperty(String.prototype, 'startsWith', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: function (searchString, position) {\n                position = position || 0;\n                return this.indexOf(searchString, position) === position;\n            }\n        });\n    }//startsWith\n\n    /* Truncate a string\n     * @param {n} the length\n     */\n    String.prototype.trunc = function (n) {\n        return this.substr(0, n - 1) + (this.length > n ? '...' : '');\n    };\n\n    // From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n    if (!Object.keys) {\n        Object.keys = (function () {\n            var hasOwnProperty = Object.prototype.hasOwnProperty, hasDontEnumBug = !({\n                toString: null\n            }).propertyIsEnumerable('toString'), dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'], dontEnumsLength = dontEnums.length;\n\n            return function (obj) {\n                if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n                    throw new TypeError('Object.keys called on non-object');\n                }\n\n                var result = [], prop, i;\n\n                for (prop in obj) {\n                    if (hasOwnProperty.call(obj, prop)) {\n                        result.push(prop);\n                    }\n                }\n\n                if (hasDontEnumBug) {\n                    for (i = 0; i < dontEnumsLength; i++) {\n                        if (hasOwnProperty.call(obj, dontEnums[i])) {\n                            result.push(dontEnums[i]);\n                        }\n                    }\n                }\n                return result;\n            };\n        }());\n    }\n}());\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device*/\nvar EC = EC || {};\nEC.Const = EC.Const || {};\n\n//Define constant values to be used across the application\nEC.Const = (function () {\n    'use strict';\n\n    return {\n        //debug on/off\n        DEBUG: 1,\n\n        //platforms\n        ANDROID: 'Android',\n        IOS: 'iOS',\n        ANDROID_ASSETS_ABS_PATH: 'file:///android_asset/www/',\n        IOS_ASSETS_ABS_PATH: 'Epicollect+.app/www/',\n\n        //file paths\n        ANDROID_APP_PRIVATE_URI: 'file:///data/data/uk.ac.imperial.epicollectplus.html5',\n        IOS_APP_PRIVATE_URI: '', //set at run time, it is the Documents folder or the Library folder\n        // folder\n\n        //input types\n        TEXT: 'text', //\n        TEXTAREA: 'textarea',\n        INTEGER: 'integer',\n        DECIMAL: 'decimal',\n        DATE: 'date',\n        TIME: 'time',\n        RADIO: 'radio',\n        CHECKBOX: 'checkbox',\n        DROPDOWN: 'select',\n        BARCODE: 'barcode',\n        LOCATION: 'location',\n        AUDIO: 'audio',\n        VIDEO: 'video',\n        PHOTO: 'photo',\n        BRANCH: 'branch',\n        BRANCH_PREFIX: 'branch-',\n        //PHOTO_DIR : '/files/images/',\n        PHOTO_DIR: '', //defined at run time\n        AUDIO_DIR: '', //defined at run time\n        VIDEO_DIR: '', //defined at run time\n        BRANCH_VIEWS_DIR: 'branch_inputs/',\n        INPUT_VIEWS_DIR: 'inputs/',\n        VIEWS_DIR: 'views/',\n        HTML_FILE_EXT: '.html',\n        PHOTO_FILE_EXTENSION: 'jpg',\n\n        //transaction callback log\n        TRANSACTION_SUCCESS: 'TRANSACTION SUCCESS ',\n        TRANSACTION_ERROR: 'TRANSACTION ERROR ----------------------------------------------------------------**',\n\n        //Model actions\n        DELETE: 'delete',\n        DELETE_SINGLE_ENTRY: 'delete_single_entry',\n        RESTORE: 'restore',\n        INSERT: 'insert',\n        DOWNLOAD: 'download',\n\n        //Upload actions\n        START_HIERARCHY_UPLOAD: 'start_hierarchy_upload',\n        STOP_HIERARCHY_UPLOAD: 'stop_hierarchy_upload',\n        HIERARCHY_RECURSION: 'hierarchy_recursion',\n        START_BRANCH_UPLOAD: 'start_branch_upload',\n        STOP_BRANCH_UPLOAD: 'stop_branch_upload',\n        BRANCH_RECURSION: 'branch_recursion',\n\n        //navigation\n        ADDING: 'adding',\n        FORWARD: 'forward',\n        BACKWARD: 'backward',\n        EDITING: 'editing',\n        PREVIOUS: 'previous',\n        NEXT: 'next',\n        VIEW: 'view',\n\n        //hierarchy views\n        INDEX_VIEW: 'index.html',\n        UPLOAD_VIEW: 'upload.html',\n        DOWNLOAD_VIEW: 'download.html',\n        EMAIL_BACKUP_VIEW: 'email-backup.html',\n        ENTRIES_LIST_VIEW: 'entries-list.html',\n        SETTINGS_VIEW: 'settings.html',\n        ADD_PROJECT_VIEW: 'add-project.html',\n        FORMS_VIEW: 'forms.html',\n        SAVE_CONFIRM_VIEW: 'save-confirm.html',\n\n        //branch views\n        BRANCH_ENTRIES_LIST_VIEW: 'branch-entries-list.html',\n        BRANCH_SAVE_CONFIRM_VIEW: 'branch-save-confirm.html',\n        BRANCH_FEEDBACK_VIEW: 'branch-feedback.html',\n\n        //max length for strings before triggering ellipsis\n        PROJECT_NAME_MAX_LENGTH: 22,\n        FORM_NAME_MAX_LENGTH: 12,\n\n        //pagination\n        ITEMS_PER_PAGE: 20,\n\n        //various\n        SET: 1,\n        INDEX: 'index',\n        INPUTS: 'inputs',\n        PROJECT_LIST: 'Project List',\n        FORMS: 'Forms',\n        FILLER: '_fill3r_', //extra element to add to breadcrumb for\n        // navigation\n\n        //labels\n        NO_OPTION_SELECTED: 'select_one_option',\n        PHOTO_AVAILABLE_LABEL: 'photo_available',\n        PHOTO_NOT_AVAILABLE_LABEL: 'no_photo',\n        AUDIO_AVAILABLE_LABEL: 'audio_available',\n        AUDIO_NOT_AVAILABLE_LABEL: 'no_audio',\n        VIDEO_AVAILABLE_LABEL: 'video_available',\n        VIDEO_NOT_AVAILABLE_LABEL: 'no_video',\n\n        //jumps\n        JUMP_VALUE_IS: 'IS',\n        JUMP_VALUE_IS_NOT: 'IS NOT',\n        JUMP_ALWAYS: 'ALL',\n        JUMP_FIELD_IS_BLANK: 'NULL',\n        SKIPPED: '_skipp3d_', //flag to set as a value when an input field\n        // is skipped by a jump\n        END_OF_FORM: 'END',\n\n        // default server\n        EPICOLLECT_SERVER_URL: 'http://plus.epicollect.net/',\n\n        //proxy to load xml in Chrome (CORS)\n        //TODO this is not used anymore as we are using a Chrome plugin, it will be removed\n        //http://goo.gl/oQNhwh\n        PROXY: 'http://www.corsproxy.com/plus.epicollect.net/',\n\n        //the length of a cached file <timestamp.extension> (Android)\n        CACHED_FILENAME_LENGTH: 17,\n\n        //this is to concatenate the full path of an entry up to its root, to\n        // identify immediate parent\n        //used for navigation and uniquely identify an entry\n        ENTRY_ROOT_PATH_SEPARATOR: '|',\n\n        //Languages\n        ENGLISH: 'en',\n        ITALIAN: 'it',\n\n        //minimum Android version NOT to run jsHybugger (regEx) 4.4.*\n        KITKAT_REGEX: /^4.4.\\d{1}$/,\n\n        //Lollipop regex\n        LOLLIPOP_REGEX: /^5.\\d{1}$/\n\n    };\n}());\n","/*jslint vars: true , nomen: true, devel: true, plusplus: true*/\r\n/*global $, jQuery, cordova, device*/\r\n/*\r\n * @module EC\r\n * @submodulemodule Parser\r\n *\r\n * Parse the XML (normalising it) and create the following objects matching the DB structure\r\n *\r\n * - Project\r\n * - Forms\r\n * - Inputs\r\n * - Input_options\r\n *\r\n */\r\n\r\nvar EC = EC || {};\r\nEC.Parse = EC.Parse || {};\r\nEC.Parse = (function (module) {\r\n    'use strict';\r\n\r\n    //static variable to expose across the module\r\n    //*******************************************\r\n    module.is_form_genkey_hidden = '';\r\n    module.form_key = '';\r\n    //project definition\r\n    module.project = {};\r\n    //parsed forms\r\n    module.parsed_forms = [];\r\n    //store inputs for hierarchy forms (main) (each element is an object with allthe inputs for a single form)\r\n    module.inputs = [];\r\n    //store inputs for branch forms (main) (each element is an object with allthe inputs for a single form)\r\n    module.branch_inputs = [];\r\n    module.form_inputs_positions = [];\r\n    //store list of inputs for a single form\r\n    module.input_list = [];\r\n    //store sets of option for tags like <radio>, <select> and <select1>\r\n    module.options = [];\r\n    module.branch_options = [];\r\n    //*******************************************\r\n\r\n    module.getHierarchyForms = function () {\r\n\r\n        var self = this;\r\n        var i;\r\n        var iLength = self.parsed_forms.length;\r\n        var hierarchy_forms = [];\r\n\r\n        for (i = 0; i < iLength; i++) {\r\n            if (self.parsed_forms[i].type === 'main') {\r\n                hierarchy_forms.push(self.parsed_forms[i]);\r\n            }\r\n        }\r\n        return hierarchy_forms;\r\n    };\r\n\r\n    module.getBranchForms = function () {\r\n\r\n        var self = this;\r\n        var i;\r\n        var iLength = self.parsed_forms.length;\r\n        var branch_forms = [];\r\n\r\n        for (i = 0; i < iLength; i++) {\r\n            if (self.parsed_forms[i].type === 'branch') {\r\n                branch_forms.push(self.parsed_forms[i]);\r\n            }\r\n        }\r\n        return branch_forms;\r\n    };\r\n    return module;\r\n\r\n}(EC.Parse));\r\n\r\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n * @module EC\n * @submodulemodule Parser\n */\nvar EC = EC || {};\nEC.Parse = ( function(module) {\"use strict\";\n\n\t\t/**\n\t\t * Map the position a form input using the @ref attribute and return an array:\n\t\t * Doing this because when converting to json the same tags are grouped together and we lose the correct inputs order!\n\t\t */\n\n\t\tmodule.mapPositionToInput = function(the_xml) {\n\n\t\t\tvar xml = the_xml;\n\t\t\tvar form_children;\n\t\t\tvar input_positions = [];\n\t\t\tvar form_num;\n\t\t\tvar form_position = 1;\n\t\t\tvar position;\n\t\t\tvar positions;\n\t\t\tvar key;\n\t\t\tvar main;\n\t\t\tvar form_name;\n\t\t\tvar hierarchy_skip_key;\n\t\t\tvar branch_skip_keys = [];\n\n\t\t\t$(xml).find('form').each(function(i) {\n\n\t\t\t\tform_children = $(this).children();\n\t\t\t\tpositions = [];\n\t\t\t\tposition = 1;\n\n\t\t\t\t//get form key value\n\t\t\t\tkey = $(this).attr('key');\n\n\t\t\t\t//get form main value. true: main form, false: branch form\n\t\t\t\tmain = $(this).attr('main');\n\n\t\t\t\tform_num = parseInt($(this).attr('num'), 10);\n\n\t\t\t\t//get form name which is unique within a project\n\t\t\t\tform_name = $(this).attr('name');\n\n\t\t\t\t//loop all the inputs\n\t\t\t\t$(form_children).each(function(index) {\n\n\t\t\t\t\tvar ref = $(this).attr('ref');\n\n\t\t\t\t\tif (form_num === 1) {\n\n\t\t\t\t\t\tif (!hierarchy_skip_key) {\n\t\t\t\t\t\t\thierarchy_skip_key = key;\n\t\t\t\t\t\t\tbranch_skip_keys.push(key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpositions.push({\n\n\t\t\t\t\t\t\tform_num : form_num,\n\t\t\t\t\t\t\tform_name : form_name,\n\t\t\t\t\t\t\tform_position : form_position,\n\t\t\t\t\t\t\tposition : position,\n\t\t\t\t\t\t\tref : ref\n\n\t\t\t\t\t\t});\n\t\t\t\t\t\tposition++;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t/* remove reference to parent key from child form: we have to skip the input where the @ref is equal to the @key of the immediate parent;\n\t\t\t\t\t\t * that input is there on the xml for legacy reasons. It is used in the old Android client but no more on the new HTML5 implementation\n\t\t\t\t\t\t */\n\n\t\t\t\t\t\tif (ref === hierarchy_skip_key) {\n\n\t\t\t\t\t\t\tpositions.push({\n\n\t\t\t\t\t\t\t\tform_num : form_num,\n\t\t\t\t\t\t\t\tform_name : form_name,\n\t\t\t\t\t\t\t\tform_position : form_position,\n\t\t\t\t\t\t\t\tposition : \"skip\",\n\t\t\t\t\t\t\t\tref : ref\n\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t//check if the current form is a branch, in that case skip the input if the ref is equal to any one of the cached main keys\n\t\t\t\t\t\t\t//(again to skip the useless input there for legacy reasons)\n\t\t\t\t\t\t\tif (main === \"false\" && EC.Utils.inArray(branch_skip_keys, ref)) {\n\n\t\t\t\t\t\t\t\tpositions.push({\n\n\t\t\t\t\t\t\t\t\tform_num : form_num,\n\t\t\t\t\t\t\t\t\tform_name : form_name,\n\t\t\t\t\t\t\t\t\tform_position : form_position,\n\t\t\t\t\t\t\t\t\tposition : \"skip\",\n\t\t\t\t\t\t\t\t\tref : ref\n\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tpositions.push({\n\n\t\t\t\t\t\t\t\t\tform_num : form_num,\n\t\t\t\t\t\t\t\t\tform_name : form_name,\n\t\t\t\t\t\t\t\t\tform_position : form_position,\n\t\t\t\t\t\t\t\t\tposition : position,\n\t\t\t\t\t\t\t\t\tref : ref\n\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tposition++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t\t/*if the form is a main one and not a branch, cache its key\n\t\t\t\t (as it is needed later to recognised a legacy input field to be removed)\n\t\t\t\t as the branch forms are in random order (lol),\n\t\t\t\t the hierarchy forms keys are cached in an array as we have to skip a branch input\n\t\t\t\t if the ref is equal to any of them */\n\t\t\t\tif (main === \"true\") {\n\n\t\t\t\t\thierarchy_skip_key = key;\n\t\t\t\t\tbranch_skip_keys.push(key);\n\t\t\t\t}\n\n\t\t\t\tinput_positions.push(positions);\n\t\t\t\tform_num++;\n\t\t\t\tform_position++;\n\n\t\t\t});\n\n\t\t\tconsole.log(\"input_positions\");\n\t\t\tconsole.log(input_positions, true);\n\n\t\t\treturn input_positions;\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Parse));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n * @module EC\n * @submodulemodule Parser\n */\nvar EC = EC || {};\nEC.Parse = ( function(module) {\"use strict\";\n\n\t\tvar self;\n\n\t\t/*\n\t\t * Return the position of an input within a form based on form name AND the input @ref (uniqueness is given by the composite key)\n\t\t */\n\t\tvar _getInputPosition = function(the_ref, the_form_name) {\n\n\t\t\tvar ref = the_ref;\n\t\t\tvar form_name = the_form_name;\n\t\t\tvar input_position;\n\t\t\tvar i;\n\t\t\tvar iLength = self.form_inputs_positions.length;\n\t\t\tvar j;\n\t\t\tvar jLength;\n\t\t\tvar current_num;\n\t\t\tvar current_ref;\n\t\t\tvar inputs;\n\n\t\t\t//loop all forms\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\t//loop all inputs within a form\n\t\t\t\tinputs = self.form_inputs_positions[i];\n\t\t\t\tjLength = inputs.length;\n\t\t\t\tfor ( j = 0; j < jLength; j++) {\n\n\t\t\t\t\tif (inputs[j].form_name === form_name && inputs[j].ref === ref) {\n\n\t\t\t\t\t\treturn inputs[j].position;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\t\t\n\t\t/*\n\t\t * Get an array of objects to loop and pass to \"parseInputObject\" for parsing\n\t\t */\n\t\tmodule.parseInputArray = function(the_raw_array, the_type, the_form_num, the_form_type, the_form_name) {\n\n\t\t\tvar self = this;\n\n\t\t\t$.each(the_raw_array, function(key, value) {\n\t\t\t\tself.parseInputObject(value, the_type, the_form_num, the_form_type, the_form_name);\n\t\t\t});\n\t\t};\n\n\n\t\tmodule.parseInputObject = function(the_raw_input, the_type, the_form_num, the_form_type, the_form_name) {\n\n\t\t\tvar i;\n\t\t\tvar iLength;\n\t\t\tvar j;\n\t\t\tvar jLenght;\n\t\t\tvar input_position;\n\t\t\tvar ref;\n\t\t\tvar form_num;\n\t\t\tvar form_type;\n\t\t\tvar form_name;\n\t\t\tvar is_genkey_hidden;\n\n\t\t\tself = this;\n\t\t\tref = the_raw_input[\"@ref\"];\n\t\t\tform_num = the_form_num;\n\t\t\tform_type = the_form_type;\n\t\t\tform_name = the_form_name;\n\n\t\t\t//get input position\n\t\t\tinput_position = _getInputPosition(ref, form_name);\n\n\t\t\t//skip this input if position is set to 'skip'\n\t\t\tif (input_position === \"skip\") {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar parsed_input = {\n\n\t\t\t\tposition : input_position,\n\t\t\t\tlabel : the_raw_input.label,\n\t\t\t\ttype : the_type,\n\t\t\t\tref : ref,\n\t\t\t\tdatetime_format : \"\",\n\t\t\t\thas_jump : \"\",\n\t\t\t\tjumps : \"\",\n\t\t\t\thas_advanced_jump : \"\"\n\n\t\t\t};\n\n\t\t\tparsed_input.is_genkey = (the_raw_input[\"@genkey\"] === undefined) ? \"\" : 1;\n\n\t\t\tis_genkey_hidden = (the_raw_input[\"@display\"] === undefined) ? 0 : 1;\n\n\t\t\tif (parsed_input.is_genkey === 1 && is_genkey_hidden === 1) {\n\t\t\t\tself.is_form_genkey_hidden = 1;\n\t\t\t}\n\n\t\t\t//Set primary key flag to true  if the input is the primary key for current form\n\t\t\tparsed_input.is_primary_key = (parsed_input.ref === self.form_key) ? 1 : 0;\n\t\t\t\n\t\t\t//#handle a bug in the form builder when a NOT autogenerated key can be hidden (LOL): when a primary key input is hidden, force it to be autogenerated\n\t\t\tif(parsed_input.is_primary_key === 1 && is_genkey_hidden === 1){\n\t\t\t\tself.is_form_genkey_hidden = 1;\n\t\t\t}\n\n\t\t\t//if @default is present, there is a default value set for this input\n\t\t\tparsed_input.default_value = (the_raw_input[\"@default\"] === undefined) ? \"\" : parsed_input.default_value = the_raw_input[\"@default\"];\n\n\t\t\t//if @integer is present, convert the type to integer (it defaults to text)\n\t\t\tif (the_raw_input[\"@integer\"] !== undefined) {\n\t\t\t\tparsed_input.type = \"integer\";\n\n\t\t\t}\n\n\t\t\t//if @decimal is present, convert the type to integer (it defaults to text)\n\t\t\tif (the_raw_input[\"@decimal\"] !== undefined) {\n\t\t\t\tparsed_input.type = \"decimal\";\n\n\t\t\t}\n\n\t\t\t//if @setdate or @date  is present, convert the type to date (it defaults to text) and add the \"format\" attribute\n\t\t\tif (the_raw_input[\"@setdate\"] !== undefined || the_raw_input[\"@date\"] !== undefined) {\n\n\t\t\t\tparsed_input.type = \"date\";\n\t\t\t\tparsed_input.datetime_format = the_raw_input[\"@setdate\"] || the_raw_input[\"@date\"];\n\n\t\t\t\t//also add the setdate value as default to indicate it needs to default to current date\n\t\t\t\tparsed_input.default_value = the_raw_input[\"@setdate\"] || \"\";\n\n\t\t\t}\n\n\t\t\t//if @settime or @time is present, convert the type to time (it defaults to text) and add the \"format\" attribute\n\t\t\tif (the_raw_input[\"@settime\"] !== undefined || the_raw_input[\"@time\"] !== undefined) {\n\n\t\t\t\tparsed_input.type = \"time\";\n\t\t\t\tparsed_input.datetime_format = the_raw_input[\"@settime\"] || the_raw_input[\"@time\"];\n\n\t\t\t\t//also add the settime value as default to indicate it needs to default to current time\n\t\t\t\tparsed_input.default_value = the_raw_input[\"@settime\"] || \"\";\n\t\t\t}\n\n\t\t\t//set regex if any @regex is specified\n\t\t\tparsed_input.regex = (the_raw_input[\"@regex\"] === undefined) ? \"\" : the_raw_input[\"@regex\"];\n\n\t\t\t//set max and min value if any specified (not numeric fields will get \"none\")\n\t\t\tparsed_input.max_range = (the_raw_input[\"@max\"] === undefined) ? \"\" : the_raw_input[\"@max\"];\n\t\t\tparsed_input.min_range = (the_raw_input[\"@min\"] === undefined) ? \"\" : the_raw_input[\"@min\"];\n\n\t\t\t//set is_required to true or false based on the @required present or not\n\t\t\tparsed_input.is_required = (the_raw_input[\"@required\"] === undefined) ? 0 : 1;\n\n\t\t\t//set search flag: this will be used for the advanced search function\n\t\t\tparsed_input.is_searchable = (the_raw_input[\"@search\"] === undefined) ? 0 : 1;\n\n\t\t\t/*\n\t\t\t * set title to true or false based on the @title present or not\n\t\t\t *\n\t\t\t * !--XML form builder needs to force at least one occurrence of @title --!\n\t\t\t */\n\t\t\tparsed_input.is_title = (the_raw_input[\"@title\"] === undefined) ? 0 : 1;\n\n\t\t\t//set is_double_entry flag based on @verify present or not\n\t\t\tparsed_input.has_double_check = (the_raw_input[\"@verify\"] === undefined) ? 0 : 1;\n\n\t\t\tif (the_raw_input[\"@jump\"] !== undefined) {\n\n\t\t\t\t//Set flag about this input triggering a jump or not\n\t\t\t\tparsed_input.has_jump = 1;\n\n\t\t\t\tparsed_input.jumps = the_raw_input[\"@jump\"];\n\t\t\t}\n\n\t\t\t//<radio>, <select> (checkbox), <select1>(select) will have list of available options attached as \"item\" array\n\t\t\tif (the_type === EC.Const.RADIO || the_type === EC.Const.CHECKBOX || the_type === EC.Const.DROPDOWN) {\n\n\t\t\t\t//add set of options to options array, to link back to each input using @ref, @num\n\n\t\t\t\t//options for hierarchy forms (main)\n\t\t\t\tif (form_type === \"main\") {\n\t\t\t\t\tself.options.push({\n\t\t\t\t\t\tnum : the_form_num,\n\t\t\t\t\t\tref : the_raw_input[\"@ref\"],\n\t\t\t\t\t\toptions : the_raw_input.item\n\t\t\t\t\t});\n\t\t\t\t} else {\n\n\t\t\t\t\t//options for branch form\n\t\t\t\t\tself.branch_options.push({\n\t\t\t\t\t\tnum : the_form_num,\n\t\t\t\t\t\tref : the_raw_input[\"@ref\"],\n\t\t\t\t\t\toptions : the_raw_input.item\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t}//if\n\n\t\t\t//if the type is branch, set branch_form value\n\t\t\tparsed_input.branch_form_name = (the_raw_input[\"@branch_form\"] === undefined) ? \"\" : the_raw_input[\"@branch_form\"];\n\n\t\t\t//store input\n\t\t\tself.input_list.push(parsed_input);\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Parse));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device, xml2json*/\n/*\n * @module EC\n * @submodulemodule Parser\n */\nvar EC = EC || {};\nEC.Parse = ( function(module) {\"use strict\";\n\n\t\tmodule.parseXML = function(the_data) {\n\n\t\t\tvar self = this;\n\t\t\tvar data = the_data;\n\t\t\tvar i;\n\t\t\tvar iLength;\n\t\t\tvar malformed_json = \"\";\n\t\t\tvar json = \"\";\n\t\t\tvar obj;\n\t\t\tvar form_has_media;\n\t\t\tvar form_has_branches;\n\t\t\tvar raw_forms = [];\n\n\t\t\tself.form_key = \"\";\n\t\t\tself.parsed_forms = [];\n\t\t\tself.form_inputs_positions = [];\n\n\t\t\t/* Map each form inputs against its position in the form:\n\t\t\t * we do this because converting from xml to json it will group the same tags together therefore we would lose the inputs real order */\n\t\t\tself.form_inputs_positions = self.mapPositionToInput(data);\n\n\t\t\tconsole.log(self.form_inputs_positions, true);\n\n\t\t\t//remove \"undefined\" from json string (workaround to deal with ECML custom data format)\n\t\t\tmalformed_json = xml2json(data);\n\n\t\t\tjson = malformed_json.replace(\"undefined\", \"\");\n\n\t\t\tconsole.log('json');\n\t\t\tconsole.log(json);\n\n\t\t\t//json string to object\n\t\t\ttry {\n\t\t\t\tobj = JSON.parse(json);\n\t\t\t} catch (error) {\n\t\t\t\t//escape backslashes (found in regex, for example) -> double check cos it is working better without\n\t\t\t\tjson = json.replace(/\\\\/g, \"\\\\\\\\\");\n\t\t\t\tobj = JSON.parse(json);\n\n\t\t\t}\n\n\t\t\t//get project details (access properties with @ as array keys)\n\t\t\tself.project = {\n\t\t\t\tname : obj.ecml.model.submission[\"@projectName\"], //\n\t\t\t\tallowDownloadEdits : obj.ecml.model.submission[\"@allowDownloadEdits\"], //\n\t\t\t\tversion : obj.ecml.model.submission[\"@versionNumber\"],\n\t\t\t\tdownloadFromServer : obj.ecml.model.downloadFromServer,\n\t\t\t\tuploadToServer : obj.ecml.model.uploadToServer\n\t\t\t};\n\n\t\t\t//get the forms in raw format (with @ etc...)\n\t\t\traw_forms = obj.ecml.form;\n\n\t\t\t//if no forms for this project, exit and warn user project xml is wrong\n\t\t\tif (raw_forms === undefined) {\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//cache lenght (with a single form project length defaults to 1 as the length property will be undefined)\n\t\t\tiLength = raw_forms.length || 1;\n\n\t\t\t//convert object to array (when it is a single form)\n\t\t\tif (iLength === 1) {\n\t\t\t\traw_forms = [raw_forms];\n\t\t\t}\n\n\t\t\tconsole.log(self.project);\n\n\t\t\t//kepp track of number of form per type\n\t\t\tself.project.total_hierarchy_forms = 0;\n\t\t\tself.project.total_branch_forms = 0;\n\n\t\t\t//parse all the raw forms to have objects in proper format\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\tvar form_obj = raw_forms[i];\n\t\t\t\tvar type = \"\";\n\t\t\t\t//cache form number to be passed later to parseInput functions\n\t\t\t\tvar form_num = form_obj[\"@num\"];\n\t\t\t\tvar form_type = (form_obj[\"@main\"] === \"false\") ? \"branch\" : \"main\";\n\t\t\t\tvar form_name = form_obj[\"@name\"];\n\n\t\t\t\t//clear input_list\n\t\t\t\tself.input_list.length = 0;\n\n\t\t\t\t//clear genkey hidden flag\n\t\t\t\tself.is_form_genkey_hidden = 0;\n\n\t\t\t\t//store a flag to indicate the current form has at least 1 media input\n\t\t\t\tform_has_media = 0;\n\n\t\t\t\t//store a flag to indicate the current form has at least 1 branch\n\t\t\t\tform_has_branches = 0;\n\n\t\t\t\t//store the current form key for later use\n\t\t\t\tself.form_key = form_obj[\"@key\"];\n\n\t\t\t\t//get form attribute\n\t\t\t\tself.parsed_forms.push({\n\n\t\t\t\t\tnum : form_num,\n\t\t\t\t\tname : form_name,\n\t\t\t\t\tkey : self.form_key\n\n\t\t\t\t});\n\n\t\t\t\t/*if @main is defined this is a form of type main, else it is a branch\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\tself.parsed_forms[i].type = form_type;\n\n\t\t\t\t/*\tParse single value form inputs/custom tags\n\t\t\t\t*   if a tag is not undefined, it can be either an Object (single occurrence) or Array of Objects (multiple occurrences)\n\t\t\t\t*\talso add the form 'num' attribute to each input to reference the right form when storing the inputs to db\n\t\t\t\t*/\n\n\t\t\t\t//parse all the input tags (set as type text)\n\t\t\t\tif (form_obj.input !== undefined) {\n\n\t\t\t\t\ttype = \"text\";\n\n\t\t\t\t\tif (Array.isArray(form_obj.input)) {\n\t\t\t\t\t\tself.parseInputArray(form_obj.input, type, form_num, form_type, form_name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.parseInputObject(form_obj.input, type, form_num, form_type, form_name);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//parse barcode tags (set as type barcode)\n\t\t\t\tif (form_obj.barcode !== undefined) {\n\n\t\t\t\t\ttype = \"barcode\";\n\n\t\t\t\t\tif (Array.isArray(form_obj.barcode)) {\n\t\t\t\t\t\tself.parseInputArray(form_obj.barcode, type, form_num, form_type, form_name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.parseInputObject(form_obj.barcode, type, form_num, form_type, form_name);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//parse location tags (set as type location)\n\t\t\t\tif (form_obj.location !== undefined) {\n\n\t\t\t\t\ttype = \"location\";\n\n\t\t\t\t\tif (Array.isArray(form_obj.location)) {\n\t\t\t\t\t\tself.parseInputArray(form_obj.location, type, form_num, form_type, form_name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.parseInputObject(form_obj.location, type, form_num, form_type, form_name);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//parse audio tags (set as type audio)\n\t\t\t\tif (form_obj.audio !== undefined) {\n\n\t\t\t\t\ttype = \"audio\";\n\t\t\t\t\tform_has_media = 1;\n\n\t\t\t\t\tif (Array.isArray(form_obj.audio)) {\n\t\t\t\t\t\tself.parseInputArray(form_obj.audio, type, form_num, form_type, form_name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.parseInputObject(form_obj.audio, type, form_num, form_type, form_name);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//parse video tags (set as type video)\n\t\t\t\tif (form_obj.video !== undefined) {\n\n\t\t\t\t\ttype = \"video\";\n\t\t\t\t\tform_has_media = 1;\n\n\t\t\t\t\tif (Array.isArray(form_obj.video)) {\n\t\t\t\t\t\tself.parseInputArray(form_obj.video, type, form_num, form_type, form_name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.parseInputObject(form_obj.video, type, form_num, form_type, form_name);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//parse photo tags (set as type photo)\n\t\t\t\tif (form_obj.photo !== undefined) {\n\n\t\t\t\t\ttype = \"photo\";\n\t\t\t\t\tform_has_media = 1;\n\n\t\t\t\t\tif (Array.isArray(form_obj.photo)) {\n\t\t\t\t\t\tself.parseInputArray(form_obj.photo, type, form_num, form_type, form_name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.parseInputObject(form_obj.photo, type, form_num, form_type, form_name);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//parse textarea tags (set as type textarea)\n\t\t\t\tif (form_obj.textarea !== undefined) {\n\n\t\t\t\t\ttype = \"textarea\";\n\n\t\t\t\t\tif (Array.isArray(form_obj.textarea)) {\n\t\t\t\t\t\tself.parseInputArray(form_obj.textarea, type, form_num, form_type, form_name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.parseInputObject(form_obj.textarea, type, form_num, form_type, form_name);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t* Parse tags which allows selection from multiple values (drodpdown, checkbox, radio )\n\t\t\t\t*\n\t\t\t\t*  ! select -> checkbox\n\t\t\t\t*  ! select1 -> select (dropdown)\n\t\t\t\t*  ! radio -> radio button\n\t\t\t\t*\n\t\t\t\t*  Each sets of possible values is within the itme array\n\t\t\t\t*/\n\n\t\t\t\t//parse radio tags (set as type radio)\n\t\t\t\tif (form_obj.radio !== undefined) {\n\n\t\t\t\t\ttype = \"radio\";\n\n\t\t\t\t\tif (Array.isArray(form_obj.radio)) {\n\t\t\t\t\t\tself.parseInputArray(form_obj.radio, type, form_num, form_type, form_name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.parseInputObject(form_obj.radio, type, form_num, form_type, form_name);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//parse select1 tags (set as type select)\n\t\t\t\tif (form_obj.select1 !== undefined) {\n\n\t\t\t\t\ttype = \"select\";\n\n\t\t\t\t\tif (Array.isArray(form_obj.select1)) {\n\t\t\t\t\t\tself.parseInputArray(form_obj.select1, type, form_num, form_type, form_name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.parseInputObject(form_obj.select1, type, form_num, form_type, form_name);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//parse select tags (set as type checkbox)\n\t\t\t\tif (form_obj.select !== undefined) {\n\n\t\t\t\t\ttype = \"checkbox\";\n\n\t\t\t\t\tif (Array.isArray(form_obj.select)) {\n\t\t\t\t\t\tself.parseInputArray(form_obj.select, type, form_num, form_type, form_name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.parseInputObject(form_obj.select, type, form_num, form_type, form_name);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//parse <branch> tag (set as type bracnh)\n\t\t\t\tif (form_obj.branch !== undefined) {\n\n\t\t\t\t\ttype = \"branch\";\n\t\t\t\t\tform_has_branches = 1;\n\n\t\t\t\t\tif (Array.isArray(form_obj.branch)) {\n\t\t\t\t\t\tself.parseInputArray(form_obj.branch, type, form_num, form_type, form_name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.parseInputObject(form_obj.branch, type, form_num, form_type, form_name);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t* After all the field tags have been parsed, store input list for the current form and clear it for next form\n\t\t\t\t*/\n\n\t\t\t\t//store list of inputs for current form (hierarchy-> main=true, branch->main=false)\n\t\t\t\tif (form_obj[\"@main\"] === \"true\") {\n\t\t\t\t\tself.inputs.push({\n\t\t\t\t\t\tnum : form_obj[\"@num\"],\n\t\t\t\t\t\tinput_list : self.input_list.slice(0)\n\t\t\t\t\t});\n\n\t\t\t\t\t//count current form as hierarchy\n\t\t\t\t\tself.project.total_hierarchy_forms++;\n\n\t\t\t\t} else {\n\t\t\t\t\tself.branch_inputs.push({\n\t\t\t\t\t\tnum : form_obj[\"@num\"],\n\t\t\t\t\t\tinput_list : self.input_list.slice(0)\n\t\t\t\t\t});\n\n\t\t\t\t\t//count current form as branch\n\t\t\t\t\tself.project.total_branch_forms++;\n\t\t\t\t}\n\n\t\t\t\t//add total number of inputs to current parsed form object\n\t\t\t\tself.parsed_forms[i].total_inputs = self.input_list.length;\n\n\t\t\t\t//add is_form_genkey_hidden flag, meaning the input field with the auto generated key will not be shown\n\t\t\t\tself.parsed_forms[i].is_form_genkey_hidden = self.is_form_genkey_hidden;\n\n\t\t\t\t//add flag to see if a form contains media input\n\t\t\t\tself.parsed_forms[i].has_media = form_has_media;\n\n\t\t\t\t//add flag to see if a form contains branches\n\t\t\t\tself.parsed_forms[i].has_branches = form_has_branches;\n\n\t\t\t}//for each raw_forms\n\n\t\t\tconsole.log(\"Parsed forms\");\n\t\t\tconsole.log(self.parsed_forms, true);\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Parse));\n","/*jslint vars: true , nomen: true, devel: true, plusplus: true*/\n/*global $, jQuery*/\n\n/**\n * @module EC\n * @submodule Routing\n */\n\nvar EC = EC || {};\nEC.Routing = EC.Routing || {};\nEC.Routing.branchInputsPageEvents = function () {\n    'use strict';\n\n    $(document).on('pageinit', '#branch-feedback', function () {\n        console.log('feedback init called');\n    });\n\n    /********BRANCH INPUT TEXT*********/\n    $(document).on('pagebeforeshow', '#branch-text', function (e) {\n        //get the branch-text.html page and inject the input data\n        EC.BranchInputs.renderInput(EC.BranchInputs.getInputAt(window.localStorage.branch_current_position));\n    });\n    // $(document).on('pagecreate', '#branch-text', function(e) {\n    // EC.Utils.updateFormCompletion(true);\n    // });\n    /**********************************/\n\n    /********BRANCH INPUT INTEGER*********/\n    $(document).on('pagebeforeshow', '#branch-integer', function (e) {\n        //get the branch-integer.html page and inject the input data\n        EC.BranchInputs.renderInput(EC.BranchInputs.getInputAt(window.localStorage.branch_current_position));\n    });\n    // $(document).on('pagecreate', '#branch-integer', function(e) {\n    // EC.Utils.updateFormCompletion(true);\n    // });\n    /************************************/\n\n    /********BRANCH INPUT DECIMAL*********/\n    $(document).on('pagebeforeshow', '#branch-decimal', function (e) {\n        //get the branch-decimal.html page and inject the input data\n        EC.BranchInputs.renderInput(EC.BranchInputs.getInputAt(window.localStorage.branch_current_position));\n    });\n    // $(document).on('pagecreate', '#branch-decimal', function(e) {\n    // EC.Utils.updateFormCompletion(true);\n    // });\n    /************************************/\n\n    /********BRANCH INPUT DATE*********/\n    $(document).on('pagebeforeshow', '#branch-date', function (e) {\n        //get the #branch-date.html page and inject the input data\n        EC.BranchInputs.renderInput(EC.BranchInputs.getInputAt(window.localStorage.branch_current_position));\n    });\n    // $(document).on('pagecreate', '#branch-date', function(e) {\n    // EC.Utils.updateFormCompletion(true);\n    // });\n    /************************************/\n\n    /********BRANCH INPUT TIME*********/\n    $(document).on('pagebeforeshow', '#branch-time', function (e) {\n        //get the branch-time.html page and inject the input data\n        EC.BranchInputs.renderInput(EC.BranchInputs.getInputAt(window.localStorage.branch_current_position));\n    });\n    // $(document).on('pagecreate', '#branch-time', function(e) {\n    // EC.Utils.updateFormCompletion(true);\n    // });\n    /************************************/\n\n    //#select is rendered as dropdown\n    /********BRANCH INPUT DROPDOWN*********/\n    $(document).on('pagebeforeshow', '#branch-select', function (e) {\n        //get the branch-select.html page and inject the input data\n        EC.BranchInputs.renderInput(EC.BranchInputs.getInputAt(window.localStorage.branch_current_position));\n    });\n    // $(document).on('pagecreate', '#branch-select', function(e) {\n    // EC.Utils.updateFormCompletion(true);\n    // });\n    /************************************/\n\n    /********BRANCH INPUT RADIO*********/\n    $(document).on('pagebeforeshow', '#branch-radio', function (e) {\n\n        //get the branch-radio.html page and inject the input data\n        EC.BranchInputs.renderInput(EC.BranchInputs.getInputAt(window.localStorage.branch_current_position));\n\n        //@bug in JQM maybe...I do not know any other way to make it work\n        $('div#input-radio input:radio').each(function (i) {\n\n            //if a value is cached, pre-select that radio button option manually triggering a 'vclick' event\n            if ($(this).attr('checked')) {\n                $(this).next().trigger('vclick');\n            }\n        });\n    });\n    // $(document).on('pagecreate', '#branch-radio', function(e) {\n    // EC.Utils.updateFormCompletion(true);\n    // });\n    /************************************/\n\n    /* BRANCH INPUT CHECKBOX ************/\n    $(document).on('pagebeforeshow', '#branch-checkbox', function (e) {\n        //get the branch-checkbox,html page and inject the input data\n        EC.BranchInputs.renderInput(EC.BranchInputs.getInputAt(window.localStorage.branch_current_position));\n    });\n    // $(document).on('pagecreate', '#branch-checkbox', function(e) {\n    // EC.Utils.updateFormCompletion(true);\n    // });\n    /************************************/\n\n    /* BRANCH INPUT TEXTAREA ************/\n    $(document).on('pagebeforeshow', '#branch-textarea', function (e) {\n        //get the #textarea page and inject the input data\n        EC.BranchInputs.renderInput(EC.BranchInputs.getInputAt(window.localStorage.branch_current_position));\n    });\n    // $(document).on('pagecreate', '#branch-textarea', function(e) {\n    // EC.Utils.updateFormCompletion(true);\n    // });\n    /************************************/\n\n    /** BRANCH INPUT LOCATION **********/\n    $(document).on('pagebeforeshow', '#branch-location', function (e) {\n        //get the branch-location.html page and inject the input data\n        EC.BranchInputs.renderInput(EC.BranchInputs.getInputAt(window.localStorage.branch_current_position));\n    });\n    // $(document).on('pagecreate', '#branch-location', function(e) {\n    // EC.Utils.updateFormCompletion(true);\n    // });\n    /************************************/\n\n    /** BRANCH INPUT PHOTO *************/\n    $(document).on('pagebeforeshow', '#branch-photo', function (e) {\n        //get the branch-photo.html page and inject the input data\n        EC.BranchInputs.renderInput(EC.BranchInputs.getInputAt(window.localStorage.branch_current_position));\n    });\n    // $(document).on('pagecreate', '#branch-photo', function(e) {\n    // EC.Utils.updateFormCompletion(true);\n    // });\n    /************************************/\n\n    /** BRANCH INPUT VIDEO *************/\n    $(document).on('pagebeforeshow', '#branch-video', function (e) {\n        //get the branch-video.html page and inject the input data\n        EC.BranchInputs.renderInput(EC.BranchInputs.getInputAt(window.localStorage.branch_current_position));\n    });\n    // $(document).on('pagecreate', '#branch-video', function(e) {\n    // EC.Utils.updateFormCompletion(true);\n    // });\n    /************************************/\n\n    /** BRANCH INPUT AUDIO *************/\n    $(document).on('pagebeforeshow', '#branch-audio', function (e) {\n        //get the branch-audio page and inject the input data\n        EC.BranchInputs.renderInput(EC.BranchInputs.getInputAt(window.localStorage.branch_current_position));\n    });\n    // $(document).on('pagecreate', '#branch-audio', function(e) {\n    // EC.Utils.updateFormCompletion(true);\n    // });\n    /*************************************/\n\n    /** BRANCH INPUT BARCODE *************/\n    $(document).on('pagebeforeshow', '#branch-barcode', function (e) {\n        //get the  branch-barcode.html page and inject the input data\n        EC.BranchInputs.renderInput(EC.BranchInputs.getInputAt(window.localStorage.branch_current_position));\n    });\n    // $(document).on('pagecreate', '#branch-audio', function(e) {\n    // EC.Utils.updateFormCompletion(true);\n    // });\n    /*************************************/\n\n    $(document).on('pagebeforeshow', '#branch-save-confirm', function (e) {\n        //Ask save confirmation to use\n        EC.BranchInputs.renderSaveConfirmView();\n    });\n\n    $(document).on('pagebeforeshow', '#branch-feedback', function (e) {\n        //Show feedback to user\n        EC.BranchInputs.renderFeedbackView();\n    });\n};\n","var EC = EC || {};\nEC.Routing = EC.Routing || {};\nEC.Routing.changePage = function (the_view, the_path) {\n    'use strict';\n\n    var view = the_view;\n    var page_uri;\n    //TODO: make the function reusable when we want or not want to add a new entry in the browser history\n    var page;\n\n    page_uri = EC.Utils.getPageBaseURI();\n    page = (view === EC.Const.INDEX_VIEW) ? page_uri + view : page_uri + EC.Const.VIEWS_DIR + view;\n\n    console.log('Routing to ---------------------------------> ' + page);\n    $.mobile.changePage(page, {\n        transition: 'fade',\n        reverse: false,\n        changeHash: true,\n        allowSamePageTransition: true\n    });\n};\n","/* jslint vars: true , nomen: true devel: true, plusplus: true*/\n/* global $, jQuery, cordova, device*/\n\nvar EC = EC || {};\nEC.Routing = EC.Routing || {};\nEC.Routing.goBack = function (the_page_id) {\n    'use strict';\n\n    var page_id = the_page_id;\n    var back_btn = null;\n    var inactive_tab = null;\n\n    var input_views_ids = [//\n        'audio', //\n        'barcode', //\n        'branch', //\n        'checkbox', //\n        'date', //\n        'decimal', //\n        'integer', //\n        'location', //\n        'photo', //\n        'radio', //\n        'save-confirm', //\n        'save-feedback', //\n        'select', //\n        'text', //\n        'textarea', //\n        'time', //\n        'video'//\n    ];\n\n    var branch_input_views_ids = [//\n        'branch-audio', //\n        'branch-barcode', //\n        'branch-branch', //\n        'branch-checkbox', //\n        'branch-date', //\n        'branch-decimal', //\n        'branch-integer', //\n        'branch-location', //\n        'branch-photo', //\n        'branch-radio', //\n        'branch-save-confirm', //\n        'branch-save-feedback', //\n        'branch-select', //\n        'branch-text', //\n        'branch-textarea', //\n        'branch-time', //\n        'branch-video'//\n    ];\n\n    var hierarchy_views_ids = [//\n        'forms', //\n        'entries', //\n        'entry-values' //\n    ];\n\n    var branch_views_ids = [//\n        'branch-entries', //\n        'branch-entry-values' //\n    ];\n\n    var action_views_ids = [//\n        'settings', //\n        'add-project', //\n        'email-backup', //\n        'upload', //\n        'download' //\n    ];\n\n\n\n    //if the page is an input view, back button will perform the same action as the\n    // top left back button on screen\n    if (EC.Utils.inArray(input_views_ids, page_id)) {\n\n        //force a click to on screen back button\n        back_btn = $('div#' + page_id + ' div[data-role=\"header\"] div[data-href=\"back-btn\"]');\n        back_btn.trigger('vclick');\n\n    }\n\n    //if the page if a branch input view, back button will perform the same action as\n    // the top left back button on screen\n    if (EC.Utils.inArray(branch_input_views_ids, page_id)) {\n\n        //force a click to on screen back button\n        back_btn = $('div#' + page_id + ' div[data-role=\"header\"] div[data-href=\"back-btn\"]');\n        back_btn.trigger('vclick');\n\n    }\n\n    //if the page is one of the hierarchy dynamic navigation pages, the back button\n    // will perform the same action as the left tab button on screen\n    if (EC.Utils.inArray(hierarchy_views_ids, page_id)) {\n\n        //force a click to on screen back button\n        inactive_tab = $('div#' + page_id + ' div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab');\n        inactive_tab.trigger('vclick');\n\n    }\n\n    /* if the page is one of the branch dynamic navigation pages, the back button\n     * will perform the same action as the left tab button on screen i.e back 1 step\n     *\n     */\n    if (EC.Utils.inArray(branch_views_ids, page_id)) {\n        //force a click to on screen back button\n        inactive_tab = $('div#' + page_id + ' div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab');\n        inactive_tab.trigger('vclick');\n    }\n\n    //if the page if a action view, back button will perform the same action as the\n    // top left back button on screen\n    if (EC.Utils.inArray(action_views_ids, page_id)) {\n\n        //force a click to on screen back button\n        back_btn = $('div#' + page_id + ' div[data-role=\"header\"] div[data-href=\"back-btn\"]');\n        back_btn.trigger('vclick');\n\n    }\n\n};\n","/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.Routing = EC.Routing || {};\nEC.Routing.indexPageEvents = function () {\n    'use strict';\n\n    $(document).on('pagebeforeshow', '#index', function (e) {\n\n        var back_nav_hash = window.localStorage.back_nav_url;\n\n        //if we are coming to the #index page after a project deletion, force a getProjectList() to update the list of project\n        if (window.localStorage.is_project_deleted === '1') {\n\n            EC.Project.getList();\n\n            window.localStorage.removeItem('is_project_deleted');\n            return;\n\n        }\n\n        if (back_nav_hash === '#refresh') {\n            EC.Project.getList();\n            window.localStorage.removeItem('back_nav_hash');\n        }\n\n    });\n\n    $(document).on('pagebeforeshow', '#forms', function (e) {\n\n        var $query_param = e.delegateTarget.baseURI;\n\n        EC.Notification.showProgressDialog();\n\n        console.log('#forms pagebeforeshow');\n\n        //reset breadcrumbs trail\n        window.localStorage.removeItem('breadcrumbs');\n        window.localStorage.removeItem('entries_totals');\n        //reset 'editing mode' flag\n        window.localStorage.removeItem('edit_mode');\n\n        //get all form by project_id\n        EC.Forms.getList(decodeURI($query_param));\n\n    });\n\n    $(document).on('pagebeforeshow', '#entries', function (e) {\n\n        var $query_param = e.delegateTarget.baseURI;\n\n        EC.Notification.showProgressDialog();\n\n        //reset 'editing mode' flag\n        window.localStorage.removeItem('edit_mode');\n\n        //get all entries\n        EC.Entries.getList(decodeURI($query_param));\n\n    });\n\n    $(document).on('pagebeforeshow', '#entry-values', function (e) {\n\n        var $query_param = e.delegateTarget.baseURI;\n\n        EC.Notification.showProgressDialog();\n\n        EC.Entries.getEntryValues(decodeURI($query_param));\n\n    });\n\n    //settings page\n    $(document).on('pagebeforeshow', '#settings', function (e) {\n        EC.Settings.renderView();\n    });\n\n    //add project page\n    $(document).on('pagebeforeshow', '#add-project', function (e) {\n        EC.Project.renderAddProjectView();\n    });\n\n    //email backup page\n    $(document).on('pagebeforeshow', '#email-backup', function (e) {\n        EC.EmailBackup.renderSendEmailView();\n    });\n\n    //upload page\n    $(document).on('pagebeforeshow', '#upload', function (e) {\n        EC.Upload.renderUploadView(false);\n    });\n\n    //download page\n    $(document).on('pagebeforeshow', '#download', function (e) {\n        EC.Download.renderDownloadView();\n    });\n\n    /********************************************************/\n    //force close the activity spinner loader\n    $(document).on('pageshow', '#index', function (e) {\n        EC.Notification.hideProgressDialog();\n        /*@bug on iOS: hack to force a scroll to the top of the page,\n         otherwise page will scroll down 18px (due to iOS7 status bar quirk, see MainViewController.m in xCode)*/\n        if (window.device) {\n            if (window.device.platform === EC.Const.IOS) {\n                $.mobile.silentScroll(0);\n            }\n        }\n\n    });\n\n    $(document).on('pageshow', '#forms', function (e) {\n\n        /*@bug on iOS: hack to force a scroll to the top of the page,\n         otherwise page will scroll down 18px (due to iOS7 status bar quirk, see MainViewController.m in xCode)*/\n        if (window.device) {\n            if (window.device.platform === EC.Const.IOS) {\n                $.mobile.silentScroll(0);\n            }\n        }\n        //$('div#forms').scrollTop(18);\n        EC.Notification.hideProgressDialog();\n\n    });\n\n    $(document).on('pageshow', '#entries', function (e) {\n\n        if (window.localStorage.previous_tapped_entry_Y) {\n            $.mobile.silentScroll(parseInt(window.localStorage.previous_tapped_entry_Y, 10));\n        }\n        else {\n            /*@bug on iOS: hack to force a scroll to the top of the page,\n             otherwise page will scroll down 18px (due to iOS7 status bar quirk, see MainViewController.m in xCode)*/\n            if (window.device) {\n                if (window.device.platform === EC.Const.IOS) {\n                    $.mobile.silentScroll(0);\n                }\n            }\n\n        }\n\n        EC.Notification.hideProgressDialog();\n    });\n\n    $(document).on('pageshow', '#entry-values', function (e) {\n        /*@bug on iOS: hack to force a scroll to the top of the page,\n         otherwise page will scroll down 18px (due to iOS7 status bar quirk, see MainViewController.m in xCode)*/\n        if (window.device) {\n            if (window.device.platform === EC.Const.IOS) {\n                $.mobile.silentScroll(0);\n            }\n        }\n\n        EC.Notification.hideProgressDialog();\n    });\n    /********************************************************/\n\n    /*Localise placeholders: it needs to be done here, after the markup has been enhanced by JQM\n     *placing it in pagebeforeshow was not working\n     */\n    $(document).on('pageshow', '#add-project', function (e) {\n\n        /*@bug on iOS: hack to force a scroll to the top of the page,\n         otherwise page will scroll down 18px (due to iOS7 status bar quirk, see MainViewController.m in xCode)*/\n        if (window.device) {\n            if (window.device.platform === EC.Const.IOS) {\n                $.mobile.silentScroll(0);\n            }\n        }\n\n        //Localise placeholder if device language is not set to English and the language is supported\n        //if the device language is not localised or it is English, do not translate placeholder\n        if (Object.keys(EC.Dictionary).indexOf(window.localStorage.DEVICE_LANGUAGE) !== -1) {\n            EC.Localise.applyToPlaceholders(window.localStorage.DEVICE_LANGUAGE);\n        }\n\n    });\n};\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n\n/**\n * @module EC\n * @submodule Routing\n */\n\nvar EC = window.EC || {};\nEC.Routing = EC.Routing || {};\nEC.Routing.inputsPageEvents = function () {\n    'use strict';\n\n    $(document).on('pageinit', '#feedback', function () {\n\n        console.log('feedback init called');\n\n    });\n\n    $(document).on('pagebeforeshow', '#text', function () {\n\n        //get the #text page and inject the input data\n        EC.Inputs.renderInput(EC.Inputs.getInputAt(window.localStorage.current_position));\n\n    });\n    $(document).on('pagebeforeshow', '#integer', function () {\n\n        //get the #number page and inject the input data\n        EC.Inputs.renderInput(EC.Inputs.getInputAt(window.localStorage.current_position));\n\n    });\n    $(document).on('pagebeforeshow', '#decimal', function () {\n\n        //get the #number page and inject the input data\n        EC.Inputs.renderInput(EC.Inputs.getInputAt(window.localStorage.current_position));\n\n    });\n    $(document).on('pagebeforeshow', '#date', function () {\n\n        //get the #date page and inject the input data\n        EC.Inputs.renderInput(EC.Inputs.getInputAt(window.localStorage.current_position));\n\n    });\n    $(document).on('pagebeforeshow', '#time', function () {\n\n        //get the #time page and inject the input data\n        EC.Inputs.renderInput(EC.Inputs.getInputAt(window.localStorage.current_position));\n\n    });\n\n    //#select is dropdown\n    $(document).on('pagebeforeshow', '#select', function () {\n\n        //get the #dropdown page and inject the input data\n        EC.Inputs.renderInput(EC.Inputs.getInputAt(window.localStorage.current_position));\n\n    });\n    $(document).on('pagebeforeshow', '#radio', function () {\n\n        //get the #radio page and inject the input data\n        EC.Inputs.renderInput(EC.Inputs.getInputAt(window.localStorage.current_position));\n\n        //@bug in JQM maybe...I do not know any other way to make it work\n        $('div#input-radio input:radio').each(function () {\n\n            //if a value is cached, pre-select that radio button option manually triggering a 'vclick' event\n            if ($(this).attr('checked')) {\n                $(this).next().trigger('vclick');\n            }\n        });\n        //@bug\n\n    });\n\n    $(document).on('pagebeforeshow', '#checkbox', function () {\n\n        //get the #checkbox page and inject the input data\n        EC.Inputs.renderInput(EC.Inputs.getInputAt(window.localStorage.current_position));\n\n    });\n    $(document).on('pagebeforeshow', '#textarea', function () {\n\n        //get the #textarea page and inject the input data\n        EC.Inputs.renderInput(EC.Inputs.getInputAt(window.localStorage.current_position));\n\n    });\n    $(document).on('pagecreate', '#textarea', function () {\n        //EC.Utils.updateFormCompletion(false);\n    });\n\n    $(document).on('pagebeforeshow', '#location', function () {\n\n        //get the #location page and inject the input data\n        EC.Inputs.renderInput(EC.Inputs.getInputAt(window.localStorage.current_position));\n\n    });\n    $(document).on('pagebeforeshow', '#photo', function () {\n\n        //get the #photo page and inject the input data\n        EC.Inputs.renderInput(EC.Inputs.getInputAt(window.localStorage.current_position));\n\n    });\n    $(document).on('pagebeforeshow', '#video', function () {\n\n        //get the #video page and inject the input data\n        EC.Inputs.renderInput(EC.Inputs.getInputAt(window.localStorage.current_position));\n\n    });\n    $(document).on('pagebeforeshow', '#audio', function () {\n\n        //get the #audio page and inject the input data\n        EC.Inputs.renderInput(EC.Inputs.getInputAt(window.localStorage.current_position));\n\n    });\n    $(document).on('pagebeforeshow', '#barcode', function () {\n\n        //get the #barcode page and inject the input data\n        EC.Inputs.renderInput(EC.Inputs.getInputAt(window.localStorage.current_position));\n\n    });\n\n    $(document).on('pagebeforeshow', '#branch', function () {\n\n        //reset cached branch objects in localStorage\n        window.localStorage.removeItem('branch_current_position');\n        window.localStorage.removeItem('branch_entries');\n        window.localStorage.removeItem('branch_form_has_jumps');\n        window.localStorage.removeItem('branch_form_id');\n        window.localStorage.removeItem('branch_form_name');\n        window.localStorage.removeItem('branch_inputs_total');\n        window.localStorage.removeItem('branch_inputs_trail');\n        window.localStorage.removeItem('branch_inputs_values');\n\n        //get the #branch page and inject the input data\n        EC.Inputs.renderInput(EC.Inputs.getInputAt(window.localStorage.current_position));\n\n    });\n\n    $(document).on('pagebeforeshow', '#branch-entries', function () {\n\n        //get the #branch-entries page and inject the input data\n        EC.Entries.getBranchEntriesList();\n\n    });\n\n    $(document).on('pagebeforeshow', '#branch-entry-values', function (e) {\n\n        //get full url with query string\n        var $query_param = e.delegateTarget.baseURI;\n\n        //get the #branch page and inject the input data\n        EC.Entries.getBranchEntryValues(decodeURI($query_param));\n\n    });\n\n    $(document).on('pageshow', '#branch-entry-values', function () {\n        EC.Notification.hideProgressDialog();\n    });\n\n    $(document).on('pagebeforeshow', '#save-confirm', function () {\n        //Ask save confirmation to use\n        EC.Inputs.renderSaveConfirmView();\n    });\n\n    $(document).on('pagebeforeshow', '#feedback', function () {\n\n        //Show feedback to user\n        EC.Inputs.renderFeedbackView();\n\n    });\n\n    /********************************************************/\n    //force close the activity spinner loader\n    $(document).on('pageshow', '#branch-entries', function () {\n        EC.Notification.hideProgressDialog();\n    });\n    $(document).on('pageshow', '#branch-entry-values', function () {\n        EC.Notification.hideProgressDialog();\n    });\n    /********************************************************/\n\n};\n","var EC = EC || {};\nEC.Dictionary = EC.Dictionary || {};\nEC.Dictionary = {\n\n    en: {\n        home: 'Home',\n        settings: 'Settings',\n        help: 'Help',\n        rate_us: 'Rate Us',\n        add_project: 'Add project',\n        loading_project: 'Loading project',\n        search_project: 'Search a project using the box above',\n        projects: 'Projects',\n        filter_project: 'Filter projects...',\n        no_projects_found: 'No projects found!',\n        project_list: 'Project List',\n        type_project_name_here: 'Type a project name here...',\n        tap_the: 'Tap the ',\n        button: 'button ',\n        add: 'Add ',\n        to: ' to ',\n        to_add: 'to add ',\n        to_add_one: 'to add one.',\n        upload_to: 'Upload to ',\n        upload_data: 'Upload Data',\n        upload_images: 'Upload Images',\n        upload_audios: 'Upload Audios',\n        upload_videos: 'Upload Videos',\n        remote_server_url: 'Remote Server URL',\n        pagination: 'Pagination: entries listed per page',\n        app_version: 'App Version: ',\n        forms: 'Forms',\n        backup_data: 'Backup Project Data',\n        restore_data: 'Restore Data from Backup',\n        email_backup: 'Email Backup',\n        download_remote_data: 'Download remote data',\n        unsync_entries: 'Unsync All Entries Data',\n        delete_entries: 'Delete All Entries',\n        export_all_entries_to_csv: 'Export Data to CSV',\n        export_all_entries_to_csv_confirm: 'Are you sure you want to export data to CSV?',\n        delete_synced: 'Delete Synced Entries',\n        delete_media: 'Delete Media Files',\n        delete_project: 'Delete Project',\n        show_more: 'Show more',\n        no_entries_found: 'No entries found!',\n        enter_email: 'Enter email address',\n        email_backup_to: 'Email Backup for',\n        select_form_download: 'Select form to download data from',\n        delete_entry: 'Delete Entry',\n        unsync_entry: 'Unsync Entry',\n        prev: 'Previous',\n        next: 'Next',\n        record: 'Record',\n        stop: 'Stop',\n        play: 'Play',\n        recording: 'Recording',\n        no_audio_available: 'No audio available yet',\n        scan: 'Scan',\n        type_confirm: 'Type again to confirm',\n        pk_not_editable: 'This value is the primary key for this entry, it cannot be edited. ',\n        add_branch_form: 'Add branch form',\n        list_branch_entries: 'List branch entries',\n        set_location: 'Set Location',\n        take_photo: 'Take Photo',\n        tap_to_store: 'Tap button to store values',\n        store: 'Store',\n        store_edit: 'Store Edit',\n        data_saved_success: 'Data saved successfully',\n        branch_data_saved_success: 'Branch data saved successfully',\n        add_another: 'Add another ',\n        list: 'List ',\n        entries: ' entries ',\n        add_video: 'Add video',\n        play_video: 'Play video',\n        back_to: 'Back to ',\n        error: 'Error',\n        project_already_loaded: 'Project already loaded on device!',\n        exit: 'Exit',\n        exit_confirm: 'Are you sure? \\nData will NOT be saved',\n        value_exist: 'Value already exists!',\n        invalid_integer: 'The number entered is not an integer value!',\n        invalid_decimal: 'The value entered is not a decimal value! Only numbers and the dot \".\" are allowed',\n        pk_reserved_char: 'This field is a primary key: it cannot cointain the reserved char: ',\n        invalid_regex: 'This field does not match the regex: ',\n        values_unmatched: 'This fields do not match each other',\n        out_of_range: 'Value entered is out of range',\n        reserved_keyword: 'Value entered is an Epicollect+ reserved keyword',\n        field_required: 'This field is required',\n        invalid_xml: 'Project XML is no valid, maybe no forms yet?',\n        connection_timeout: 'Server connection time out',\n        connection_lost: 'Connection lost, please retry',\n        project_not_found_on_server: 'Project not found on server ',\n        project_not_found: 'Project not found!',\n        unknow_error: 'Unknown Error!',\n        leaving_current_form: 'Leaving current form',\n        save_before_leave: 'Save data before leaving?',\n        edit_saved: 'Edit saved!',\n        missing_pk: 'Primary key value for this form is missing.You probably jumped a required field, please go back and try again',\n        gps_disabled: 'Please enable GPS',\n        locating: 'Locating',\n        wait: 'Wait...',\n        location_acquired: 'Location acquired',\n        location_fail: ', not able to locate!',\n        location_service_fail: 'Something went wrong...are Location Services enabled for Epicollect5?',\n        failed_because: 'Failed because: ',\n        download_success: 'All data downloaded',\n        parent_key_for_1: 'Parent keys for ',\n        parent_key_for_2: ' are missing on device database, please download ',\n        parent_key_for_3: ' entries first',\n        no_internet: 'No Internet Connection!!',\n        invalid_email: 'Not a valid email address!!',\n        invalid_email_client: 'Please set up a mail client app first',\n        generic_error: 'An error occurred, please retry',\n        entry_unsynced: 'Entry unsynced',\n        entry_deleted: 'Entry deleted',\n        all_data_synced: 'All data unsynced',\n        all_entries_deleted: 'All entries deleted',\n        data_exported_to_csv: 'Data exported to csv',\n        all_media_deleted: 'All media deleted',\n        all_synced_deleted: 'All synced entries deleted',\n        branch_entry_deleted: 'Branch entry deleted',\n        delete_branch_entry: 'Delete Branch Entry',\n        delete_entry_confirm: 'Are you sure you want to delete this entry?',\n        unsync_entry_confirm: 'Are you sure you want to unsync this entry?',\n        delete_entry_with_children_confirm: 'Are you sure you want to delete this entry?  \\n This entry and all its children will be deleted!',\n        unsync_all_data: 'Unsync all data',\n        unsync_all_data_confirm: 'Are you sure you want to unsync all the data?',\n        delete_project_confirm: 'Are you sure you want to delete this project?',\n        delete_all_entries: 'Delete all entries',\n        delete_all_entries_confirm: 'Are you sure you want to delete all entries?',\n        delete_all_media: 'Delete all media files',\n        delete_all_media_confirm: 'Are you sure you want to delete all media files?',\n        delete_all_synced: 'Delete all synced entries',\n        delete_all_synced_confirm: 'Are you sure you want to delete all synced entries?',\n        backup_data_confirm: 'Are you sure you want to backup all project entries?',\n        restore_data_confirm: 'Are you sure you want to restore from a backup? Existing data will be overriden!',\n        warning: 'Warning',\n        edited_jump: 'You modified a value linked to a jump so it is not possible to save the edit yet \\nTap NEXT to proceed or revert your changes before saving',\n        success: 'Success',\n        project_backup_success: 'Project backed up!',\n        project_deleted: 'Project deleted',\n        project_no_spaces_allowed: 'Project name cannot have empty spaces',\n        project_empty_not_allowed: 'Project name cannot be empty',\n        project_restored: 'Project restored!',\n        upload_error: ' An error occurred while uploading, please retry. ',\n        no_backup_saved: 'No backup file found!!',\n        all_images_uploaded: 'All image files uploaded! ',\n        all_audios_uploaded: 'All audio files uploaded! ',\n        all_videos_uploaded: 'All video files uploaded! ',\n        uploading: 'Uploading...',\n        data_upload_success: ' Data uploaded! ',\n        check_your_internet: ', check you internet connection.',\n        settings_saved_success: 'Settings saved',\n        questions: ' Questions',\n        hierarchy_forms: ' Hierarchy form(s)',\n        branch_forms: ' Branch(es)',\n        sending_message: 'Sending message...',\n        backup_for: 'Backup for ',\n        backup_for_project: 'Backup for project ',\n        is_attached: ' is attached',\n        select_one_option: 'Select one option',\n        photo_available: 'Photo available',\n        no_photo: 'No photo saved',\n        audio_available: 'Audio available',\n        no_audio: 'No audio saved',\n        video_available: 'Video available',\n        no_video: 'No video saved',\n        no: 'No',\n        save: 'Save',\n        dismiss: 'Dismiss',\n        confirm: 'Confirm'\n    },\n    it: {\n        home: 'Home',\n        settings: 'Impostazioni',\n        help: 'Aiuto',\n        rate_us: 'Votaci',\n        add_project: 'Aggiungi progetto',\n        loading_project: 'Caricando progetto',\n        search_project: 'Cerca progetto usando l\\'input di testo sopra',\n        projects: 'Progetti',\n        filter_project: 'Filtra progetti',\n        no_projects_found: 'Nessun progetto trovato!',\n        project_list: 'Lista progetti',\n        type_project_name_here: 'Digita il nome del progetto...',\n        tap_the: 'Premi il ',\n        button: '',\n        add: 'Add ',\n        to: ' a ',\n        to_add: 'per aggiungere ',\n        to_add_one: 'per aggiungerne uno ',\n        upload_to: 'Carica dati a ',\n        upload_data: 'Carica dati',\n        upload_images: 'Carica foto',\n        upload_audios: 'Carica tracce audio',\n        upload_videos: 'Carica video',\n        remote_server_url: 'URL del server remoto',\n        pagination: 'Paginazione: quanti elementi per pagina',\n        app_version: 'Versione della app: ',\n        forms: 'Schede',\n        backup_data: 'Backup dati',\n        restore_data: 'Ripristina da Backup',\n        email_backup: 'Posta Backup',\n        download_remote_data: 'Scarica dati remoti',\n        unsync_entries: 'De-sincronizza dati',\n        delete_entries: 'Cancella dati',\n        delete_synced: 'Cancella elementi sincronizzati',\n        delete_media: 'Cancella files multimedia',\n        delete_project: 'Cancella progetto',\n        show_more: 'Mostra altri elementi',\n        no_entries_found: 'Nessun elemento trovato!',\n        enter_email: 'Inserisci indirizzo email',\n        email_backup_to: 'Manda backup tramite email per ',\n        select_form_download: 'Seleziona la scheda da cui scaricare dati',\n        delete_entry: 'Cancella elemento',\n        unsync_entry: 'De-sincronizza elemento',\n        prev: 'Prec',\n        next: 'Succ',\n        record: 'Record',\n        stop: 'Stop',\n        play: 'Play',\n        recording: 'Registrazione',\n        no_audio_available: 'Nessuna registrazione trovata',\n        scan: 'Scan',\n        type_confirm: 'Digita di nuovo pre confermare',\n        pk_not_editable: 'Questo dato &egrave; una chiave primaria, non si &ograve; modificare',\n        add_branch_form: 'Aggiungi scheda diramazione',\n        list_branch_entries: 'Lista schede diramate',\n        set_location: 'Imposta posizione',\n        take_photo: 'Scatta foto',\n        data_saved_success: 'Dati salvati con successo',\n        branch_data_saved_success: 'Dati ramificazione salvati con successo',\n        add_another: 'Aggiungi un altro ',\n        list: 'Lista ',\n        entries: ' elementi ',\n        add_video: 'Aggiungi video',\n        play_video: 'Play video',\n        back_to: 'Torna a ',\n        error: 'Error',\n        project_already_loaded: 'Questo progetto esiste gi&agrave;',\n        exit: 'Exit',\n        exit_confirm: 'Sei sicuro? \\nDati NON verranno salvati',\n        value_exist: 'Questo valore esiste gi&agrave;',\n        invalid_integer: 'Valore inserito non &egrave; un numero intero',\n        invalid_decimal: 'Valore inserito non &egrave; un  numero decimale, solo numeri e punto (.) sono permessi',\n        pk_reserved_char: 'Questo campo &egrave; una chiave primaria, non pu&ograve; contenere il carattere riservato: ',\n        invalid_regex: 'Valore non soddisfa la epressione regolare: ',\n        values_unmatched: 'I valori non corrispondono',\n        out_of_range: 'Valore inserito &egrave; fuori dai limiti',\n        reserved_keyword: 'Valore inserito &egrave; un valore riservato a Epicollect+',\n        field_required: 'Un valore &egrave; richiesto',\n        invalid_xml: 'Progetto XML non valiso, forse non ha schede ancora?',\n        connection_timeout: 'Connessione al server scaduta',\n        connection_lost: 'Connessione persa, riprova',\n        project_not_found_on_server: 'Progetto non trovato nel server ',\n        project_not_found: 'Progetto non trovato!',\n        unknow_error: 'Errore sconosciuto!',\n        leaving_current_form: 'Uscire da scheda corrente',\n        save_before_leave: 'Salvare dati prima di uscire?',\n        edit_saved: 'Modifiche salvate',\n        missing_pk: 'Manca chive primaria.Probabilmente un campo obbligatorio &egrave; stato saltato, torna indietro e riprova',\n        gps_disabled: 'Per favore, attivare GPS',\n        locating: 'Localizzazione',\n        wait: 'Aspetta...',\n        location_acquired: 'Posizione acquisita',\n        location_fail: ', incapace di trovare posizione',\n        location_service_fail: 'Qualcosa &egrave; andato storto...sono i Servizi Locazione abilitati per Epicollect5 app?',\n        failed_because: 'Fallito perch&egrave;: ',\n        download_success: 'Tutti i dati scaricati',\n        parent_key_for_1: 'Chiavi padre per ',\n        parent_key_for_2: ' mancano nel database del dispositivo, scarica ',\n        parent_key_for_3: ' elementi prima',\n        no_internet: 'Nessuna connessione internet!!',\n        invalid_email: 'Indirizzo Email non valido!!',\n        invalid_email_client: 'Una app per mandare emails non &egrave; stata ancora impostata',\n        generic_error: 'Errore, riprova',\n        entry_unsynced: 'Elemento de-sincronizzato',\n        entry_deleted: 'Elemento cancellato',\n        all_data_synced: 'Tutti i dati sincronizzati',\n        all_entries_deleted: 'Tutti gli elementi cancellati',\n        all_media_deleted: 'Tutti i media cancellati',\n        all_synced_deleted: 'Tutti gli elementi sincronizzati cancellati',\n        branch_entry_deleted: 'Elemento ramificato cancellato',\n        delete_branch_entry: 'Cancella elemento ramificato',\n        delete_entry_confirm: 'Sei sicuro che vuoi cancellare questo elemento?',\n        unsync_entry_confirm: 'Sei sicuro che vuoi de-sincronizzare questo elemento?',\n        delete_entry_with_children_confirm: 'Sei sicuro che vuoi cancellare questo elemento?  \\n Questo elemento e tutti i \"figli\" verranno cancellati',\n        unsync_all_data: 'Unsync all data',\n        unsync_all_data_confirm: 'Sei sicuro che vuoi de-sincronizzare tutti i dati?',\n        delete_project_confirm: 'Sei sicuro che vuoi cancellare questo progetto?',\n        delete_all_entries: 'Cancella tutti gli elementi',\n        data_exported_to_csv: 'Dati esportati in formato csv',\n        delete_all_entries_confirm: 'Sei sicuro che vuoi cancellare tutti gli elementi',\n        export_all_entries_to_csv: 'Esportare dati formato csv',\n        export_all_entries_to_csv_confirm: 'Sicuro di esportare tutti dati in formato csv?',\n        delete_all_media: 'Cancellare tutti i file media',\n        delete_all_media_confirm: 'Sei sicuro che vuoi cancellare tutti i file media?',\n        delete_all_synced: 'Cancella tutti elementi sincronizzati',\n        delete_all_synced_confirm: 'Sei sicuro che vuoi cancellare tutti gli elementi sincronizzati?',\n        backup_data_confirm: 'Sicuro che vuoi fare un backup',\n        restore_data_confirm: 'Sicuro che vuoi ripristinare da backup? Dati esistenti verranno persi!',\n        warning: 'Attenzione',\n        edited_jump: 'Hai modificato un valore collegato a un salto quindi non &egrave; possibile salvare le modifiche \\nPremi \"Successivo\" per procedere o annulla le modifiche per salvare',\n        success: 'Successo',\n        project_backup_success: 'Backup del progetto eseguito!',\n        project_deleted: 'Progetto cancellato',\n        project_no_spaces_allowed: 'Il nome del progetto non pu&ograve; aver spazi',\n        project_empty_not_allowed: 'Il nome del progetto non pu&ograve; essere vuoto',\n        project_restored_: 'Progetto ripristinato!',\n        upload_error: ' Errore durante caricamento dati, riprovare. ',\n        no_backup_saved: 'Nessun file di backup trovato!!',\n        all_images_uploaded: 'Tutte i file immagini caricati! ',\n        all_audios_uploaded: 'Tutti i file audio caricati! ',\n        all_videos_uploaded: 'Tutti i file video caricati! ',\n        uploading: 'Caricando...',\n        data_upload_success: ' Dati caricati! ',\n        check_your_internet: ', controlla la tua connessione internet.',\n        settings_saved_success: 'Impostazioni salvate',\n        questions: ' Domande',\n        hierarchy_forms: ' Schede gerarchia',\n        branch_forms: ' Schede ramificate',\n        sending_message: 'Mandando email...',\n        backup_for: 'Backup per ',\n        backup_for_project: 'Il backup per il progetto ',\n        is_attached: ' &egrave; attaccato',\n        select_one_option: 'Scegli opzione',\n        photo_available: 'Foto presente',\n        no_photo: 'Nessuna foto salvata',\n        audio_available: 'Traccia audio presente',\n        no_audio: 'Nessuna traccia audio presente',\n        video_available: 'Video presente',\n        no_video: 'Nessun video presente',\n        no: 'No',\n        save: 'Salva',\n        dismiss: 'Annulla',\n        confirm: 'Conferma'\n    }\n};\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/**\n * @module EC\n * @submodule Localise\n */\n\nvar EC = EC || {};\nEC.Localise = EC.Localise || {};\nEC.Localise = ( function () {\n    \"use strict\";\n\n    //TODO: get device language from localStorage (set in app.js)\n    var language;\n    var self;\n\n    function setLanguage() {\n        language = window.localStorage.DEVICE_LANGUAGE;\n    }\n\n    //TODO: return translation based on key and device language\n    function getTranslation(the_key) {\n\n        var key_to_lookup = the_key;\n        var translated_string = \"\";\n\n        try {\n            translated_string = EC.Dictionary[language][key_to_lookup];\n        } catch (error) {\n            translated_string = \"Translation not found\";\n        }\n\n        return translated_string;\n\n    }\n\n    function applyToHTML(the_language) {\n\n        //TODO for each data-i10n, replace text with translated one\n        var page_id = $.mobile.activePage.attr(\"id\");\n        var strings = $('div#' + page_id + ' [data-i10n]');\n        var translated_string;\n        var self = this;\n\n        console.log(strings);\n\n        strings.each(function (index) {\n\n            console.log($(this).data(\"i10n\"));\n            translated_string = self.getTranslation($(this).data(\"i10n\"));\n            $(this).text(translated_string);\n\n        });\n\n    }\n\n    function applyToPlaceholders(the_language) {\n\n        var page_id = $.mobile.activePage.attr(\"id\");\n        var placeholders = $('div#' + page_id + ' [placeholder]');\n        var translated_string;\n        var self = this;\n\n        placeholders.each(function (index) {\n\n            console.log($(this).attr(\"placeholder\"));\n            translated_string = self.getTranslation($(this).attr(\"placeholder\"));\n            $(this).attr(\"placeholder\", translated_string);\n\n        });\n\n    }\n\n    return {\n        setLanguage: setLanguage,\n        getTranslation: getTranslation,\n        applyToHTML: applyToHTML,\n        applyToPlaceholders: applyToPlaceholders\n    };\n\n}());\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/*\n *   @module Branch\n *\n */\nvar EC = EC || {};\nEC.Branch = EC.Branch || {};\nEC.Branch = ( function(module) {\"use strict\";\n\n        var self;\n        var deferred;\n        //keep track of foreign keys\n        var project_insertId;\n        var branch_forms_IDs = [];\n        //store forms\n        var branch_forms;\n        //we need to keep track of the form @num to be linked with whatever ID it gets upon being entered to the the db\n        var branch_form_num_index = 0;\n\n        var _errorCB = function(the_tx, the_result) {\n            console.log(the_result);\n        };\n\n        //Transaction to save all the forms to the db. Each form will get its own executeSql and relative callback\n        var _commitBranchFormsTX = function(tx) {\n\n            var i;\n            var iLenght = branch_forms.length;\n            var query;\n            for ( i = 0; i < iLenght; i++) {\n\n                query = \"\";\n                query += 'INSERT INTO ec_branch_forms (project_id, num, name, key, has_media, is_genkey_hidden, total_inputs) ';\n                query += 'VALUES (\"';\n                query += project_insertId + '\", \"';\n                query += branch_forms[i].num + '\", \"';\n                query += branch_forms[i].name + '\", \"';\n                query += branch_forms[i].key + '\", \"';\n                query += branch_forms[i].has_media + '\", \"';\n                query += branch_forms[i].is_form_genkey_hidden + '\", \"';\n                query += branch_forms[i].total_inputs + '\");';\n\n                //keep track of current form @num and database row ID. Defaults to 0, it will be set after the INSERT\n                branch_forms_IDs.push({\n                    num : branch_forms[i].num,\n                    id : 0\n                });\n\n                tx.executeSql(query, [], _commitBranchFormsSQLSuccess, _errorCB);\n            }\n\n        };\n\n        /*\n         *  @method _commitBranchFormsSQLSuccess\n         *\n         *\tit links the form @num with the actual ID on the database to be used as foreign key on the ec_inputs table\n         *\tit is called as a callback for each form executeSql()\n         */\n        var _commitBranchFormsSQLSuccess = function(the_tx, the_result) {\n\n            //link each row ID to its form\n            branch_forms_IDs[branch_form_num_index].id = the_result.insertId;\n            branch_form_num_index++;\n\n        };\n\n        //resets forms array\n        var _commitBranchFormsSuccessCB = function() {\n\n            //reset forms arrays\n            branch_forms.length = 0;\n            \n            //return branch forms IDs\n            deferred.resolve(branch_forms_IDs);\n\n        };\n\n        /**\n         * @method insertForms\n         */\n        module.commitBranchForms = function(the_branch_forms, the_project_insertId) {\n\n            self = this;\n            deferred = new $.Deferred();\n            branch_forms = the_branch_forms;\n            project_insertId = the_project_insertId;\n            branch_forms_IDs.length = 0;\n            branch_form_num_index = 0;\n\n            EC.db.transaction(_commitBranchFormsTX, _errorCB, _commitBranchFormsSuccessCB);\n\n            return deferred.promise();\n        };\n\n        return module;\n\n    }(EC.Branch));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/*\n *   @module Branch\n *\n */\nvar EC = EC || {};\nEC.Branch = EC.Branch || {};\nEC.Branch = ( function(module) {\"use strict\";\n\n\t\tvar self;\n\t\tvar deferred;\n\t\tvar branch_max_form_ID;\n\t\t//keep track of foreign keys\n\t\tvar project_insertId;\n\t\tvar branch_forms_IDs = [];\n\t\t//store forms\n\t\tvar branch_forms;\n\t\t//we need to keep track of the form @num to be linked with whatever ID it gets upon being entered to the the db\n\t\tvar branch_form_num_index = 0;\n\t\t\n\t\tvar _errorCB = function(the_tx, the_result){\n\t\t\tconsole.log(the_result);\n\t\t};\n\n\t\t//Transaction to save all the forms to the db. Each form will get its own executeSql and relative callback\n\t\tvar _commitBranchFormsTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLenght = branch_forms.length;\n\t\t\tvar query;\n\t\t\tfor ( i = 0; i < iLenght; i++) {\n\n\t\t\t\tquery = \"\";\n\t\t\t\tquery += 'INSERT INTO ec_branch_forms (project_id, num, name, key, has_media, is_genkey_hidden, total_inputs) ';\n\t\t\t\tquery += 'VALUES (\"';\n\t\t\t\tquery += project_insertId + '\", \"';\n\t\t\t\tquery += branch_forms[i].num + '\", \"';\n\t\t\t\tquery += branch_forms[i].name + '\", \"';\n\t\t\t\tquery += branch_forms[i].key + '\", \"';\n\t\t\t\tquery += branch_forms[i].has_media + '\", \"';\n\t\t\t\tquery += branch_forms[i].is_form_genkey_hidden + '\", \"';\n\t\t\t\tquery += branch_forms[i].total_inputs + '\");';\n\n\t\t\t\t//keep track of current form @num and database row ID. Defaults to 0, it will be set after the INSERT\n\t\t\t\tbranch_forms_IDs.push({\n\t\t\t\t\tnum : branch_forms[i].num,\n\t\t\t\t\tid : 0\n\t\t\t\t});\n\n\t\t\t\ttx.executeSql(query, [], _commitBranchFormsSQLSuccess, _errorCB);\n\t\t\t}\n\n\t\t};\n\n\t\t/*\n\t\t *  @method _commitBranchFormsSQLSuccess\n\t\t *\n\t\t *\tit links the form @num with the actual ID on the database to be used as foreign key on the ec_inputs table\n\t\t *\tit is called as a callback for each form executeSql()\n\t\t */\n\t\tvar _commitBranchFormsSQLSuccess = function(the_tx, the_result) {\n\n\t\t\t// _id of last entered row will be max_form_ID + 1\n\t\t\tbranch_forms_IDs[branch_form_num_index].id = ++branch_max_form_ID;\n\t\t\tbranch_form_num_index++;\n\n\t\t};\n\n\t\t//resets forms array\n\t\tvar _commitBranchFormsSuccessCB = function() {\n\n\t\t\t//reset forms arrays\n\t\t\tbranch_forms.length = 0;\n\t\t\t\n\t\t\tdeferred.resolve(branch_forms_IDs);\n\n\t\t};\n\t\t\n\t\tvar _getHighestIdTX = function(tx) {\n\n\t\t\tvar query = \"SELECT MAX(_id) AS _id from ec_branch_forms\";\n\t\t\t\n\t\t\t//reset auto increment for ec_forms table\n\t\t\tvar reset_seq_query = 'UPDATE sqlite_sequence SET seq = (SELECT MAX(_id) FROM ec_branch_forms) WHERE name=\"ec_branch_forms\"';\n\n\t\t\ttx.executeSql(query, [], _getHighestIdSQLSuccess, self.errorCB);\n\t\t\ttx.executeSql(reset_seq_query, [], _resetSequenceSQLSuccess, null);\n\n\t\t};\n\n\t\tvar _getHighestIdSQLSuccess = function(the_tx, the_result) {\n\t\t\tbranch_max_form_ID = the_result.rows.item(0)._id;\n\t\t};\n\n\t\tvar _getHighestIdSuccessCB = function() {\n\t\t\t\n\t\t\t//we got the max _id, perform all the INSERT transactions\n\t\t\tEC.db.transaction(_commitBranchFormsTX, self.errorCB, _commitBranchFormsSuccessCB);\n\n\t\t};\n\t\t\n\t\tvar _resetSequenceSQLSuccess = function(the_tx, the_result){\n\t\t};\n\n\t\t/**\n\t\t * @method commitBranchForms. Due to a bug on iOS (insertId undefined after INSERT)\n\t\t * we need to get the MAX(_id) of the table ec_branch_forms, reset the sqlite_sequence table to that value for the ec_branch_forms column \n\t\t * to basically know in advance what the insertId will be in the database \n\t\t * \n\t\t */\n\t\tmodule.commitBranchForms = function(the_branch_forms, the_project_insertId) {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tbranch_forms = the_branch_forms;\n\t\t\tproject_insertId = the_project_insertId;\n\t\t\tbranch_forms_IDs.length = 0;\n\t\t\tbranch_form_num_index = 0;\n\t\t\tbranch_max_form_ID = 0;\n\t\t\t\n\t\t\t//select max _id from ec_branch_forms\n\t\t\tEC.db.transaction(_getHighestIdTX, self.errorCB, _getHighestIdSuccessCB);\n\n\t\t\treturn deferred.promise();\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Branch));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n *   @module Branch\n *\n */\n\nvar EC = EC || {};\nEC.Branch = EC.Branch || {};\nEC.Branch = ( function(module) {\"use strict\";\n\n\t\tvar self;\n\t\t//store input values object\n\t\tvar branch_input_options;\n\n\t\tvar branch_inputs_IDs = [];\n\n\t\t//Transaction to save each options to the db (form multiple option branch_inputs like radio, checkbox, select)\n\t\tvar _commitBranchInputOptionsTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar j;\n\t\t\tvar k;\n\t\t\tvar iLength;\n\t\t\tvar jLength;\n\t\t\tvar kLength;\n\t\t\tvar ref;\n\t\t\tvar branch_input_id;\n\t\t\tvar label;\n\t\t\tvar value;\n\t\t\tvar num;\n\t\t\tvar query;\n\n\t\t\t//loop the branch_input_options array\n\t\t\tfor ( i = 0, iLength = branch_input_options.length; i < iLength; i++) {\n\n\t\t\t\t//get the branch_input ID based on (branch_input ref AND form num)\n\t\t\t\tref = branch_input_options[i].ref;\n\t\t\t\tnum = branch_input_options[i].num;\n\n\t\t\t\t//loop all the branch_input IDs to find a match\n\t\t\t\tfor ( j = 0, jLength = branch_inputs_IDs.length; j < jLength; j++) {\n\n\t\t\t\t\tif (branch_inputs_IDs[j].ref === ref && branch_inputs_IDs[j].form_num === num) {\n\n\t\t\t\t\t\tbranch_input_id = branch_inputs_IDs[j].id;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t}//loop branch_input_IDs\n\n\t\t\t\t//commit each option (IF ANY: we allow radio, checkbox and dropdown not to have any option)\n\t\t\t\tif (branch_input_options[i].options === undefined) {\n\t\t\t\t\tkLength = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkLength = branch_input_options[i].options.length;\n\t\t\t\t}\n\n\t\t\t\tfor ( k = 0; k < kLength; k++) {\n\n\t\t\t\t\tlabel = branch_input_options[i].options[k].label;\n\t\t\t\t\tvalue = branch_input_options[i].options[k].value;\n\n\t\t\t\t\tquery = 'INSERT INTO ec_branch_input_options (';\n\t\t\t\t\tquery += 'input_id, ';\n\t\t\t\t\tquery += 'ref, ';\n\t\t\t\t\tquery += 'label, ';\n\t\t\t\t\tquery += 'value)';\n\t\t\t\t\tquery += 'VALUES (\"';\n\t\t\t\t\tquery += branch_input_id + '\", \"';\n\t\t\t\t\tquery += ref + '\", \"';\n\t\t\t\t\tquery += label + '\", \"';\n\t\t\t\t\tquery += value + '\");';\n\n\t\t\t\t\ttx.executeSql(query, [], _commitBranchInputOptionsSQLSuccess, self.errorCB);\n\n\t\t\t\t}//loop branch_input_options.options\n\n\t\t\t}//loop branch_input_options\n\n\t\t};\n\n\t\tvar _commitBranchInputOptionsSQLSuccess = function(the_tx, the_result) {\n\n\t\t\t//console.log(the_result);\n\t\t\tconsole.log(\"executeSql SUCCESS BRANCH INPUT OPTIONS\");\n\n\t\t};\n\n\t\tvar _commitBranchInputOptionsSuccessCB = function() {\n\n\t\t\t//reset options length\n\t\t\tbranch_input_options.length = 0;\n\n\t\t\t//Branch structure saved to database correctly, trigger custom event\n\t\t\t$(document).trigger('BranchModelReady');\n\t\t\tconsole.log(\"BranchModelReady\");\n\n\t\t};\n\n\t\tmodule.commitBranchInputOptions = function(the_brach_input_options, the_branch_inputs_ids) {\n\n\t\t\tself = this;\n\t\t\tbranch_input_options = the_brach_input_options;\n\t\t\tbranch_inputs_IDs = the_branch_inputs_ids;\n\n\t\t\tEC.db.transaction(_commitBranchInputOptionsTX, self.errorCB, _commitBranchInputOptionsSuccessCB);\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Branch));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device*/\n/*\n *   @module Branch\n *\n */\n\nvar EC = EC || {};\nEC.Branch = ( function(module) {\"use strict\";\n\n        var self;\n        var deferred;\n\n        //track inputs IDs\n        var branch_inputs_IDs = [];\n\n        //we need to keep track of the input option @ref to be linked with whatever ID it gets upon being entered to the the db\n        var branch_input_option_index = 0;\n\n        //store inputs object\n        var branch_inputs;\n\n        var branch_forms_with_media = [];\n        var branch_forms_IDs = [];\n\n        //Transaction to save all the inputs for each form to database\n        var _commitBranchInputsTX = function(tx) {\n\n            var i;\n            var j;\n            var k;\n            var iLength;\n            var jLength;\n            var kLength;\n            var current_form_num;\n            var current_form_id;\n            var input_list;\n            var input_type;\n            var input_ref;\n            var query;\n\n            //loop input array, one element per form . Each element contains an input list and the @num attribute\n            for ( i = 0, iLength = branch_inputs.length; i < iLength; i++) {\n\n                //get the database ID for the current form\n                current_form_num = branch_inputs[i].num;\n                for ( j = 0, jLength = branch_forms_IDs.length; j < jLength; j++) {\n\n                    if (branch_forms_IDs[j].num === current_form_num) {\n\n                        //exit loop as soon as we get a match\n                        current_form_id = branch_forms_IDs[j].id;\n                        break;\n                    }\n                }//j for\n\n                //loop each input for the current element(form) and commit it\n                for ( k = 0, kLength = branch_inputs[i].input_list.length; k < kLength; k++) {\n\n                    input_type = branch_inputs[i].input_list[k].type;\n                    input_ref = branch_inputs[i].input_list[k].ref;\n\n                    query = \"\";\n                    query += 'INSERT INTO ec_branch_inputs (';\n                    query += 'form_id, ';\n                    query += 'label, ';\n                    query += 'default_value, ';\n                    query += 'type, ';\n                    query += 'ref, ';\n                    query += 'position, ';\n                    query += 'is_primary_key, ';\n                    query += 'is_genkey, ';\n                    query += 'regex, ';\n                    query += 'max_range, ';\n                    query += 'min_range, ';\n                    query += 'is_required, ';\n                    query += 'is_title, ';\n                    query += 'has_jump, ';\n                    query += 'jumps, ';\n                    query += 'has_advanced_jump, ';\n                    query += 'datetime_format, ';\n                    query += 'has_double_check) ';\n                    query += 'VALUES (\"';\n                    query += current_form_id + '\", \"';\n                    query += branch_inputs[i].input_list[k].label + '\", \"';\n                    query += branch_inputs[i].input_list[k].default_value + '\", \"';\n                    query += input_type + '\", \"';\n                    query += input_ref + '\", \"';\n                    query += branch_inputs[i].input_list[k].position + '\", \"';\n                    query += branch_inputs[i].input_list[k].is_primary_key + '\", \"';\n                    query += branch_inputs[i].input_list[k].is_genkey + '\", \"';\n                    query += branch_inputs[i].input_list[k].regex + '\", \"';\n                    query += branch_inputs[i].input_list[k].max_range + '\", \"';\n                    query += branch_inputs[i].input_list[k].min_range + '\", \"';\n                    query += branch_inputs[i].input_list[k].is_required + '\", \"';\n                    query += branch_inputs[i].input_list[k].is_title + '\", \"';\n                    query += branch_inputs[i].input_list[k].has_jump + '\", \"';\n                    query += branch_inputs[i].input_list[k].jumps + '\", \"';\n                    query += branch_inputs[i].input_list[k].has_advanced_jump + '\", \"';\n                    query += branch_inputs[i].input_list[k].datetime_format + '\", \"';\n\n                    query += branch_inputs[i].input_list[k].has_double_check + '\");';\n\n                    //keep track of current input @ref\n                    branch_inputs_IDs.push({\n                        ref : input_ref,\n                        form_id : current_form_id,\n                        form_num : current_form_num\n                    });\n\n                    tx.executeSql(query, [], _commitBranchInputsSQLSuccess, self.errorCB);\n\n                }//for each input\n\n            }// for each form\n\n        };\n\n        /* Callback called each time an input executeSql is successful\n         *\n         * here the input ID (geerated from the query when entering the input) is linked to its input @ref\n         */\n        var _commitBranchInputsSQLSuccess = function(the_tx, the_result) {\n\n            //link each row ID to its input\n            branch_inputs_IDs[branch_input_option_index].id = the_result.insertId;\n            branch_input_option_index++;\n\n            console.log(\"executeSql SUCCESS INPUTS\");\n\n        };\n\n        var _commitBranchInputsSuccessCB = function() {\n\n            branch_forms_IDs.length = 0;\n            branch_inputs.length = 0;\n            branch_forms_with_media.length = 0;\n\n            deferred.resolve(branch_inputs_IDs);\n            \n        };\n\n        module.commitBranchInputs = function(the_branch_inputs, the_branch_forms_ids) {\n\n            self = this;\n            deferred = new $.Deferred();\n            branch_inputs = the_branch_inputs;\n            branch_forms_IDs = the_branch_forms_ids;\n\n            EC.db.transaction(_commitBranchInputsTX, self.errorCB, _commitBranchInputsSuccessCB);\n\n            return deferred.promise();\n        };\n\n        return module;\n\n    }(EC.Branch));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device*/\n/*\n *   @module Branch\n *\n *  It will save the project branches data structure (branch_forms, branch_inputs, branch_input_values)\n to the database\n *\n */\nvar EC = EC || {};\nEC.Branch = EC.Branch || {};\nEC.Branch = (function (module) {\n    'use strict';\n\n    //callback for a transaction error\n    module.errorCB = function (the_error) {\n        console.log('Error INSERT STRUCTURE BRANCH');\n        console.log(the_error);\n        console.log(EC.Utils.TRANSACTION_ERROR);\n    };\n    return module;\n}(EC.Branch));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\r\n/*global $, jQuery, cordova, device*/\r\n/*\r\n * @module DBAdapter\r\n *\r\n *   Initialise the database using Phonegap 2.9\r\n *   Phonegap uses Web SQL specifications on the Chrome browser (Android)\r\n *\r\n */\r\nvar EC = EC || {};\r\nEC.CreateSQLiteDatabase = EC.CreateSQLiteDatabase || {};\r\nEC.CreateSQLiteDatabase = ( function() {\r\n\t\t\"use strict\";\r\n\r\n\t\t//Initialise private database object if it is not already\r\n\t\t//var EC.db =  window.openDatabase(\"epicollect\", \"1.0\", \"Epicollect\", 2000000);\r\n\r\n\t\t//native\r\n\t\t//var EC.db =  db || window.sqlitePlugin.openDatabase(\"epicollect\", \"1.0\",\r\n\t\t// \"Epicollect\", 2000000);\r\n\r\n\t\t/*\r\n\t\t *  Query to create the database tables\r\n\t\t *  foreign keys apparently do not work on Web SQL, so it is better to use\r\n\t\t * triggers or manually do all the delete/update on cascade\r\n\t\t *\r\n\t\t */\r\n\r\n\t\tvar deferred;\r\n\r\n\t\t//Query to create ec_projects table\r\n\t\tvar cq_ec_projects = ['', //\r\n\t\t'CREATE TABLE IF NOT EXISTS \"ec_projects\" (', //\r\n\t\t' \"_id\" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,', //\r\n\t\t'\"name\" TEXT, ', //\r\n\t\t'\"total_hierarchy_forms\" INTEGER DEFAULT 0, ', //\r\n\t\t'\"total_branch_forms\" INTEGER DEFAULT 0, ', //\r\n\t\t'\"is_active\" INTEGER DEFAULT 0,', //\r\n\t\t'\"uploadToServer\" TEXT,', //\r\n\t\t'\"downloadFromServer\" TEXT,', //\r\n\t\t'\"allowDownloadEdits\" INTEGER DEFAULT 0,', //\r\n\t\t'\"version\" TEXT,', '\"description\" TEXT,', //\r\n\t\t'\"radiobutton_image_url\" TEXT,', //\r\n\t\t'\"reg_mail\" TEXT);'//\r\n\t\t].join('');\r\n\t\t//\r\n\r\n\t\t//Query to create ec_forms table\r\n\t\tvar cq_ec_forms = ['', 'CREATE TABLE IF NOT EXISTS \"ec_forms\" (', //\r\n\t\t' \"_id\" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL  UNIQUE,', //\r\n\t\t'\"project_id\" INTEGER NOT NULL, ', //\r\n\t\t'\"name\" TEXT, ', //\r\n\t\t'\"num\" INTEGER, ', //\r\n\t\t'\"key\" TEXT, ', //\r\n\t\t'\"total_inputs\" INTEGER, ', //\r\n\t\t'\"has_media\" INTEGER DEFAULT 0, ', //\r\n\t\t'\"has_branches\" INTEGER DEFAULT 0, ', //\r\n\t\t'\"is_genkey_hidden\" INTEGER DEFAULT 0, ', //\r\n\t\t'\"entries\" INTEGER DEFAULT 0, ', //\r\n\t\t'FOREIGN KEY (\"project_id\") REFERENCES ec_projects (\"_id\") ON DELETE CASCADE ON ',\r\n\t\t// //\r\n\t\t'UPDATE CASCADE);'].join('');\r\n\t\t//\r\n\r\n\t\t//Query to create ec_branch_forms table\r\n\t\tvar cq_ec_branch_forms = ['', 'CREATE TABLE IF NOT EXISTS \"ec_branch_forms\" (',\r\n\t\t// //\r\n\t\t' \"_id\" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL  UNIQUE,', //\r\n\t\t'\"project_id\" INTEGER NOT NULL, ', //\r\n\t\t'\"name\" TEXT, ', //\r\n\t\t'\"num\" INTEGER, ', //\r\n\t\t'\"key\" TEXT, ', //\r\n\t\t'\"total_inputs\" INTEGER, ', //\r\n\t\t'\"has_media\" INTEGER DEFAULT 0, ', //\r\n\t\t'\"is_genkey_hidden\" INTEGER DEFAULT 0, ', //\r\n\t\t'\"entries\" INTEGER DEFAULT 0, ', //\r\n\t\t'FOREIGN KEY (\"project_id\") REFERENCES ec_projects (\"_id\") ON DELETE CASCADE ON ',\r\n\t\t// //\r\n\t\t'UPDATE CASCADE);'].join('');\r\n\t\t//\r\n\r\n\t\t//Query to create ec_inputs table\r\n\t\tvar cq_ec_inputs = ['', //\r\n\t\t'CREATE  TABLE IF NOT EXISTS \"ec_inputs\" (', //\r\n\t\t'\"_id\" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL  UNIQUE , ', //\r\n\t\t'\"form_id\" INTEGER NOT NULL , ', //\r\n\t\t'\"ref\" TEXT,', //\r\n\t\t'\"position\" INTEGER,', //\r\n\t\t'\"label\" TEXT,', //\r\n\t\t'\"default_value\" TEXT,', //\r\n\t\t'\"type\" TEXT, ', //\r\n\t\t'\"is_primary_key\" INTEGER,', //\r\n\t\t'\"is_genkey\" INTEGER,', //\r\n\t\t'\"has_double_check\" INTEGER,', //\r\n\t\t'\"max_range\" TEXT,', //\r\n\t\t'\"min_range\" TEXT , ', //\r\n\t\t'\"is_required\" INTEGER, ', //\r\n\t\t'\"is_title\" INTEGER,', //\r\n\t\t'\"is_server_local\" INTEGER,', //\r\n\t\t'\"is_searchable\" TEXT, ', //\r\n\t\t'\"regex\" TEXT, ', //\r\n\t\t'\"has_jump\" INTEGER,', //\r\n\t\t'\"jumps\" TEXT,', //\r\n\t\t'\"has_advanced_jump\" INTEGER, ', //\r\n\t\t'\"datetime_format\" TEXT,', //\r\n\t\t'\"branch_form_name\" TEXT,', //\r\n\t\t'FOREIGN KEY (\"form_id\") REFERENCES ec_forms(_id) ON DELETE CASCADE ON ', //\r\n\t\t'UPDATE CASCADE', //\r\n\t\t');'//\r\n\t\t].join('');\r\n\t\t//\r\n\r\n\t\t//Query to create ec_branch_inputs table\r\n\t\tvar cq_ec_branch_inputs = ['', //\r\n\t\t'CREATE  TABLE IF NOT EXISTS \"ec_branch_inputs\" (', //\r\n\t\t'\"_id\" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL  UNIQUE , ', //\r\n\t\t'\"form_id\" INTEGER NOT NULL , ', //\r\n\t\t'\"ref\" TEXT,', //\r\n\t\t'\"position\" INTEGER,', //\r\n\t\t'\"label\" TEXT,', //\r\n\t\t'\"default_value\" TEXT,', //\r\n\t\t'\"type\" TEXT, ', //\r\n\t\t'\"is_primary_key\" INTEGER,', //\r\n\t\t'\"is_genkey\" INTEGER,', //\r\n\t\t'\"has_double_check\" INTEGER,', //\r\n\t\t'\"max_range\" TEXT,', //\r\n\t\t'\"min_range\" TEXT , ', //\r\n\t\t'\"is_required\" INTEGER, ', //\r\n\t\t'\"is_title\" INTEGER,', //\r\n\t\t'\"is_server_local\" INTEGER,', //\r\n\t\t'\"is_searchable\" TEXT, ', //\r\n\t\t'\"regex\" TEXT, ', //\r\n\t\t'\"has_jump\" INTEGER,', //\r\n\t\t'\"jumps\" TEXT,', //\r\n\t\t'\"has_advanced_jump\" INTEGER, ', //\r\n\t\t'\"datetime_format\" TEXT,', //\r\n\t\t'FOREIGN KEY (\"form_id\") REFERENCES ec_branch_forms(_id) ON DELETE CASCADE ON ',\r\n\t\t// //\r\n\t\t'UPDATE CASCADE', //\r\n\t\t');'//\r\n\t\t].join('');\r\n\t\t//\r\n\r\n\t\t//Query to create ec_input_options table\r\n\t\tvar cq_ec_input_options = ['', //\r\n\t\t'CREATE TABLE IF NOT EXISTS \"ec_input_options\" (', //\r\n\t\t'\"_id\" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL  UNIQUE ,', //\r\n\t\t'\"input_id\" INTEGER NOT NULL , ', //\r\n\t\t'\"ref\" TEXT NOT NULL ,', //\r\n\t\t'\"label\" TEXT NOT NULL ,', //\r\n\t\t'\"value\" TEXT NOT NULL , ', //\r\n\t\t'FOREIGN KEY (\"input_id\") REFERENCES ec_inputs(\"_id\") ON DELETE CASCADE ON ', //\r\n\t\t'UPDATE CASCADE', //\r\n\t\t');'//\r\n\t\t].join('');\r\n\r\n\t\t//Query to create ec_branch_input_options table\r\n\t\tvar cq_ec_branch_input_options = ['', //\r\n\t\t'CREATE TABLE IF NOT EXISTS \"ec_branch_input_options\" (', //\r\n\t\t'\"_id\" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL  UNIQUE ,', //\r\n\t\t'\"input_id\" INTEGER NOT NULL , ', //\r\n\t\t'\"ref\" TEXT NOT NULL ,', //\r\n\t\t'\"label\" TEXT NOT NULL ,', //\r\n\t\t'\"value\" TEXT NOT NULL , ', //\r\n\t\t'FOREIGN KEY (\"input_id\") REFERENCES ec_branch_inputs(\"_id\") ON DELETE CASCADE ON ',\r\n\t\t// //\r\n\t\t'UPDATE CASCADE', //\r\n\t\t');'//\r\n\t\t].join('');\r\n\r\n\t\t//Query to create ec_data table\r\n\t\tvar cq_ec_data = ['', //\r\n\t\t'CREATE TABLE IF NOT EXISTS \"ec_data\" (', //\r\n\t\t'\"_id\" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL  UNIQUE ,', //\r\n\t\t'\"input_id\" INTEGER NOT NULL, ', //\r\n\t\t'\"form_id\" INTEGER NOT NULL, ', //\r\n\t\t'\"position\" INTEGER NOT NULL, ', //\r\n\t\t'\"parent\" TEXT NOT NULL DEFAULT \"\", ', //\r\n\t\t'\"label\" TEXT NOT NULL DEFAULT \"\", ', //\r\n\t\t'\"value\" TEXT, ', //\r\n\t\t'\"ref\" TEXT, ', //\r\n\t\t'\"is_title\" INTEGER DEFAULT 0, ', //\r\n\t\t'\"entry_key\" TEXT NOT NULL,', //\r\n\t\t'\"type\" TEXT, ', //\r\n\t\t'\"is_data_synced\" INTEGER DEFAULT 0, ', //\r\n\t\t'\"is_media_synced\" INTEGER DEFAULT 0, ', //\r\n\t\t'\"is_remote\" INTEGER DEFAULT 0, ', //\r\n\t\t'\"created_on\" INTEGER, ', //\r\n\t\t'FOREIGN KEY (\"input_id\") REFERENCES ec_inputs(\"_id\") ON DELETE CASCADE ON ', //\r\n\t\t'UPDATE CASCADE', //\r\n\t\t');'//\r\n\t\t].join('');\r\n\r\n\t\t//Query to create ec_data table\r\n\t\tvar cq_ec_branch_data = ['', //\r\n\t\t'CREATE TABLE IF NOT EXISTS \"ec_branch_data\" (', //\r\n\t\t'\"_id\" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL  UNIQUE ,', //\r\n\t\t'\"input_id\" INTEGER NOT NULL, ', //\r\n\t\t'\"form_id\" INTEGER NOT NULL, ', //\r\n\t\t'\"hierarchy_entry_key_value\" TEXT, ', //main form entry key value\r\n\t\t'\"hierarchy_entry_key_ref\" TEXT, ', //main form entry key value\r\n\t\t'\"position\" INTEGER NOT NULL, ', //\r\n\t\t'\"label\" TEXT NOT NULL DEFAULT \"\", ', //\r\n\t\t'\"value\" TEXT, ', //\r\n\t\t'\"ref\" TEXT, ', //\r\n\t\t'\"is_title\" INTEGER DEFAULT 0, ', //\r\n\t\t'\"entry_key\" TEXT NOT NULL,', //\r\n\t\t'\"type\" TEXT, ', //\r\n\t\t'\"is_data_synced\" INTEGER DEFAULT 0, ', //\r\n\t\t'\"is_media_synced\" INTEGER DEFAULT 0, ', //\r\n\t\t'\"is_remote\" INTEGER DEFAULT 0, ', //if the entry has been downloaded remotely or\r\n\t\t// created\r\n\t\t'\"is_cached\" INTEGER DEFAULT 0, ', // if the etry is cached (branch form saved\r\n\t\t// but not its main form)\r\n\t\t'\"is_stored\" INTEGER DEFAULT 0, ', // if the entry and its main form is saved\r\n\t\t'\"created_on\" INTEGER, ', //\r\n\t\t'FOREIGN KEY (\"input_id\") REFERENCES ec_branch_inputs(\"_id\") ON DELETE CASCADE ON ',\r\n\t\t// //\r\n\t\t'UPDATE CASCADE', //\r\n\t\t');'//\r\n\t\t].join('');\r\n\r\n\t\t/**\r\n\t\t * *********************** TRIGGERS\r\n\t\t * *******************************************************\r\n\t\t */\r\n\r\n\t\tvar tq_delete_forms = [//\r\n\t\t'CREATE TRIGGER delete_forms ', //\r\n\t\t'BEFORE DELETE ', //\r\n\t\t'ON ec_projects ', //\r\n\t\t'FOR EACH ROW ', //\r\n\t\t'BEGIN ', //\r\n\t\t'DELETE FROM ec_forms WHERE ec_forms.project_id = old._id; ', //\r\n\t\t'END'//\r\n\t\t].join('');\r\n\r\n\t\tvar tq_delete_branch_forms = [//\r\n\t\t'CREATE TRIGGER delete_branch_forms ', //\r\n\t\t'BEFORE DELETE ', //\r\n\t\t'ON ec_projects ', //\r\n\t\t'FOR EACH ROW ', //\r\n\t\t'BEGIN ', //\r\n\t\t'DELETE FROM ec_branch_forms WHERE ec_branch_forms.project_id = old._id; ', //\r\n\t\t'END'//\r\n\t\t].join('');\r\n\r\n\t\tvar tq_delete_inputs = [//\r\n\t\t'CREATE TRIGGER delete_inputs ', //\r\n\t\t'BEFORE DELETE ', //\r\n\t\t'ON ec_forms ', //\r\n\t\t'FOR EACH ROW ', //\r\n\t\t'BEGIN ', //\r\n\t\t'DELETE FROM ec_inputs WHERE ec_inputs.form_id = old._id; ', //\r\n\t\t'END'//\r\n\t\t].join('');\r\n\r\n\t\tvar tq_delete_branch_inputs = [//\r\n\t\t'CREATE TRIGGER delete_branch_inputs ', //\r\n\t\t'BEFORE DELETE ', //\r\n\t\t'ON ec_branch_forms ', //\r\n\t\t'FOR EACH ROW ', //\r\n\t\t'BEGIN ', //\r\n\t\t'DELETE FROM ec_branch_inputs WHERE ec_branch_inputs.form_id = old._id; ', //\r\n\t\t'END'//\r\n\t\t].join('');\r\n\r\n\t\tvar tq_delete_input_options = [//\r\n\t\t'CREATE TRIGGER delete_input_options ', //\r\n\t\t'BEFORE DELETE ', //\r\n\t\t'ON ec_inputs ', //\r\n\t\t'FOR EACH ROW ', //\r\n\t\t'BEGIN ', //\r\n\t\t'DELETE FROM ec_input_options WHERE ec_input_options.input_id = old._id; ', //\r\n\t\t'END'//\r\n\t\t].join('');\r\n\r\n\t\tvar tq_delete_branch_input_options = [//\r\n\t\t'CREATE TRIGGER delete_branch_input_options ', //\r\n\t\t'BEFORE DELETE ', //\r\n\t\t'ON ec_branch_inputs ', //\r\n\t\t'FOR EACH ROW ', //\r\n\t\t'BEGIN ', //\r\n\t\t'DELETE FROM ec_branch_input_options WHERE ec_branch_input_options.input_id = old._id; ',\r\n\t\t// //\r\n\t\t'END'//\r\n\t\t].join('');\r\n\r\n\t\tvar tq_delete_ec_data = [//\r\n\t\t'CREATE TRIGGER delete_ec_data ', //\r\n\t\t'BEFORE DELETE ', //\r\n\t\t'ON ec_inputs ', //\r\n\t\t'FOR EACH ROW ', //\r\n\t\t'BEGIN ', //\r\n\t\t'DELETE FROM ec_data WHERE ec_data.input_id = old._id; ', //\r\n\t\t'END'//\r\n\t\t].join('');\r\n\r\n\t\tvar tq_delete_ec_branch_data = [//\r\n\t\t'CREATE TRIGGER delete_ec_branch_data ', //\r\n\t\t'BEFORE DELETE ', //\r\n\t\t'ON ec_branch_inputs ', //\r\n\t\t'FOR EACH ROW ', //\r\n\t\t'BEGIN ', //\r\n\t\t'DELETE FROM ec_branch_data WHERE ec_branch_data.input_id = old._id; ', //\r\n\t\t'END'//\r\n\t\t].join('');\r\n\r\n\t\t/**\r\n\t\t *********************** DROP TRIGGERS\r\n\t\t */\r\n\t\tvar dtq_delete_forms = 'DROP TRIGGER IF EXISTS delete_forms ';\r\n\t\tvar dtq_delete_branch_forms = 'DROP TRIGGER IF EXISTS delete_branch_forms ';\r\n\t\tvar dtq_delete_inputs = 'DROP TRIGGER IF EXISTS delete_inputs ';\r\n\t\tvar dtq_delete_branch_inputs = 'DROP TRIGGER IF EXISTS delete_branch_inputs ';\r\n\t\tvar dtq_delete_input_options = 'DROP TRIGGER IF EXISTS delete_input_options ';\r\n\t\tvar dtq_delete_branch_input_options = 'DROP TRIGGER IF EXISTS delete_branch_input_options ';\r\n\t\tvar dtq_delete_ec_data = 'DROP TRIGGER IF EXISTS delete_ec_data ';\r\n\t\tvar dtq_delete_ec_branch_data = 'DROP TRIGGER IF EXISTS delete_ec_branch_data ';\r\n\r\n\t\t//Create database if not exist\r\n\t\tvar _initDB = function(tx) {\r\n\r\n\t\t\t//tx.executeSql(\"PRAGMA foreign_keys = ON;\"); //apparently PRAGMA is disabled is\r\n\t\t\t// some browsers\r\n\r\n\t\t\t//create tables\r\n\t\t\ttx.executeSql(cq_ec_projects);\r\n\t\t\ttx.executeSql(cq_ec_forms);\r\n\t\t\ttx.executeSql(cq_ec_branch_forms);\r\n\t\t\ttx.executeSql(cq_ec_inputs);\r\n\t\t\ttx.executeSql(cq_ec_branch_inputs);\r\n\t\t\ttx.executeSql(cq_ec_input_options);\r\n\t\t\ttx.executeSql(cq_ec_branch_input_options);\r\n\t\t\ttx.executeSql(cq_ec_data);\r\n\t\t\ttx.executeSql(cq_ec_branch_data);\r\n\r\n\t\t\t//drop existing triggers\r\n\t\t\ttx.executeSql(dtq_delete_forms);\r\n\t\t\ttx.executeSql(dtq_delete_branch_forms);\r\n\t\t\ttx.executeSql(dtq_delete_inputs);\r\n\t\t\ttx.executeSql(dtq_delete_branch_inputs);\r\n\t\t\ttx.executeSql(dtq_delete_input_options);\r\n\t\t\ttx.executeSql(dtq_delete_branch_input_options);\r\n\t\t\ttx.executeSql(dtq_delete_ec_data);\r\n\t\t\ttx.executeSql(dtq_delete_ec_branch_data);\r\n\r\n\t\t\t//add triggers\r\n\t\t\ttx.executeSql(tq_delete_forms);\r\n\t\t\ttx.executeSql(tq_delete_branch_forms);\r\n\t\t\ttx.executeSql(tq_delete_inputs);\r\n\t\t\ttx.executeSql(tq_delete_branch_inputs);\r\n\t\t\ttx.executeSql(tq_delete_input_options);\r\n\t\t\ttx.executeSql(tq_delete_branch_input_options);\r\n\t\t\ttx.executeSql(tq_delete_ec_data);\r\n\t\t\ttx.executeSql(tq_delete_ec_branch_data);\r\n\r\n\t\t};\r\n\r\n\t\t//Global callback for a transaction error\r\n\t\tvar errorCB = function(the_error) {\r\n\t\t\tconsole.log(EC.Const.TRANSACTION_ERROR);\r\n\t\t\tconsole.log(\"%c\" + the_error.message, \"color: red\");\r\n\t\t};\r\n\r\n\t\t//success callback when database transaction successful\r\n\t\tvar _initSuccessCB = function() {\r\n\t\t\tconsole.log(\"TRANSACTION INIT SUCCESS\");\r\n\t\t\tdeferred.resolve();\r\n\t\t};\r\n\r\n\t\t/* initialise database object */\r\n\t\tvar init = function() {\r\n\r\n\t\t\tdeferred = new $.Deferred();\r\n\t\t\t//open or create a webSQL database (on webkit)\r\n\t\t\tEC.db.transaction(_initDB, errorCB, _initSuccessCB);\r\n\r\n\t\t\treturn deferred.promise();\r\n\r\n\t\t};\r\n\r\n\t\treturn {\r\n\t\t\tinit : init,\r\n\t\t\terrorCB : errorCB\r\n\t\t};\r\n\r\n\t}());\r\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device*/\n/*\n *   @module Hierarchy\n *\n */\n\nvar EC = EC || {};\nEC.Hierarchy = EC.Hierarchy || {};\nEC.Hierarchy = ( function(module) {\"use strict\";\n\n\t\tvar self;\n\t\tvar deferred;\n\t\t//keep track of foreign keys\n\t\tvar project_insertId;\n\t\tvar forms_IDs = [];\n\t\t//store forms\n\t\tvar forms =[];\n\n\t\t//we need to keep track of the form @num to be linked with whatever ID it gets upon being entered to the the db\n\t\tvar form_num_index = 0;\n\n\t\t/*  @method _formsTXSuccess\n\t\t *\n\t\t *\tit links the form @num with the actual ID on the database to be used as foreign key on the ec_inputs table\n\t\t *\tit is called as a callback for each form executeSql()\n\t\t */\n\t\tvar _commitFormsSQLSuccess = function(the_tx, the_result) {\n\t\t\n\n\t\t\t//link each row ID to its form.\n\t\t\tif (the_result.insertId) {\n\t\t\t\tforms_IDs[form_num_index].id = the_result.insertId;\n\t\t\t} else {\n\t\t\t\t//Weird bug on iOS: insertId is undefined sometimes!\n\t\t\t\t//If that happem, drop parsing, delete tables and ask the user to start over\n\t\t\t\t//TODO: maybe adding forms recursively instead of looping?\n\n\t\t\t\tvar project_id = parseInt(window.localStorage.project_id, 10);\n\t\t\t\tvar project_name = window.localStorage.project_name;\n\n\t\t\t\t$.when(EC.Delete.deleteProject(project_id, project_name)).then(function() {\n\n\t\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"unknown_error\"));\n\t\t\t\t\twindow.localStorage.is_project_deleted = 1;\n\t\t\t\t\twindow.localStorage.back_nav_url = \"#refresh\";\n\t\t\t\t\tEC.Routing.changePage(EC.Const.INDEX_VIEW);\n\n\t\t\t\t}, function() {\n\t\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"unknown_error\"));\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\tform_num_index++;\n\n\t\t\tconsole.log(\"executeSql SUCCESS FORMS\");\n\n\t\t};\n\n\t\t//resets forms array\n\t\tvar _commitFormsSuccessCB = function(the_tx, the_result) {\n\n\t\t\tconsole.log(the_tx);\n\t\t\tconsole.log(the_result);\n\n\t\t\t//reset forms arrays\n\t\t\tforms.length = 0;\n\n\t\t\t//trigger function to save all the inputs for this form\n\t\t\t//self.commitInputs(EC.Parse.inputs, forms_IDs);\n\t\t\t\n\t\t\tdeferred.resolve(forms_IDs);\n\n\t\t};\n\n\t\t//Transaction to save all the forms to the db. Each form will get its own executeSql and relative callback\n\t\tvar _commitFormsTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLenght = forms.length;\n\t\t\tvar query;\n\n\t\t\tfor ( i = 0; i < iLenght; i++) {\n\n\t\t\t\tquery = 'INSERT INTO ec_forms (project_id, num, name, key, has_media, has_branches, is_genkey_hidden, total_inputs) ';\n\t\t\t\tquery += 'VALUES (\"';\n\t\t\t\tquery += project_insertId + '\", \"';\n\t\t\t\tquery += forms[i].num + '\", \"';\n\t\t\t\tquery += forms[i].name + '\", \"';\n\t\t\t\tquery += forms[i].key + '\", \"';\n\t\t\t\tquery += forms[i].has_media + '\", \"';\n\t\t\t\tquery += forms[i].has_branches + '\", \"';\n\t\t\t\tquery += forms[i].is_form_genkey_hidden + '\", \"';\n\t\t\t\tquery += forms[i].total_inputs + '\");';\n\n\t\t\t\t//keep track of current form @num and database row ID. Defaults to 0, it will be set after the INSERT\n\t\t\t\tforms_IDs.push({\n\t\t\t\t\tnum : forms[i].num,\n\t\t\t\t\tid : 0\n\t\t\t\t});\n\t\t\t\ttx.executeSql(query, [], _commitFormsSQLSuccess, self.errorCB);\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * @method insertForms\n\t\t */\n\t\tmodule.commitForms = function(the_forms_object, the_project_insertId) {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tforms = the_forms_object;\n\t\t\tproject_insertId = the_project_insertId;\n\t\t\tforms_IDs.length = 0;\n\t\t\tform_num_index = 0;\n\n\t\t\tEC.db.transaction(_commitFormsTX, self.errorCB, _commitFormsSuccessCB);\n\t\t\t\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Hierarchy));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device*/\n/*\n *   @module Hierarchy\n *\t \t\n */\n\nvar EC = EC || {};\nEC.Hierarchy = EC.Hierarchy || {};\nEC.Hierarchy = ( function(module) {\"use strict\";\n\n\t\tvar self;\n\t\tvar deferred;\n\t\tvar max_form_ID;\n\n\t\t//keep track of foreign keys\n\t\tvar project_insertId;\n\t\tvar forms_IDs = [];\n\n\t\t//store forms\n\t\tvar forms;\n\n\t\t//we need to keep track of the form @num to be linked with whatever ID it gets upon being entered to the the db\n\t\tvar form_num_index = 0;\n\n\t\t/*  @method _formsTXSuccess\n\t\t *\n\t\t *\tit links the form @num with the actual ID on the database to be used as foreign key on the ec_inputs table\n\t\t *\tit is called as a callback for each form executeSql()\n\t\t */\n\t\tvar _insertFormsSQLSuccess = function(the_tx, the_result) {\n\t\t\t\n\t\t\t// _id of last entered row will be max_form_ID + 1\n\t\t\tforms_IDs[form_num_index].id = ++max_form_ID;\n\n\t\t\tform_num_index++;\n\n\t\t\tconsole.log(\"executeSql SUCCESS FORMS\");\n\n\t\t};\n\n\t\tvar _insertFormsSuccessCB = function(the_tx, the_result) {\n\n\t\t\tconsole.log(the_tx);\n\t\t\tconsole.log(the_result);\n\n\t\t\t//reset forms arrays\n\t\t\tforms.length = 0;\n\t\t\t\n\t\t\tdeferred.resolve(forms_IDs);\n\n\t\t};\n\n\t\t//Transaction to save all the forms to the db. Each form will get its own executeSql and relative callback\n\t\tvar _insertFormsTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLenght = forms.length;\n\t\t\tvar query;\n\n\t\t\tfor ( i = 0; i < iLenght; i++) {\n\n\t\t\t\tquery = 'INSERT INTO ec_forms (project_id, num, name, key, has_media, has_branches, is_genkey_hidden, total_inputs) ';\n\t\t\t\tquery += 'VALUES (\"';\n\t\t\t\tquery += project_insertId + '\", \"';\n\t\t\t\tquery += forms[i].num + '\", \"';\n\t\t\t\tquery += forms[i].name + '\", \"';\n\t\t\t\tquery += forms[i].key + '\", \"';\n\t\t\t\tquery += forms[i].has_media + '\", \"';\n\t\t\t\tquery += forms[i].has_branches + '\", \"';\n\t\t\t\tquery += forms[i].is_form_genkey_hidden + '\", \"';\n\t\t\t\tquery += forms[i].total_inputs + '\");';\n\n\t\t\t\t//keep track of current form @num and database row ID. Defaults to 0, it will be set after the INSERT\n\t\t\t\tforms_IDs.push({\n\t\t\t\t\tnum : forms[i].num,\n\t\t\t\t\tid : 0\n\t\t\t\t});\n\t\t\t\ttx.executeSql(query, [], _insertFormsSQLSuccess, self.errorCB);\n\n\t\t\t}\n\t\t};\n\n\t\tvar _getHighestIdTX = function(tx) {\n\n\t\t\tvar query = \"SELECT MAX(_id) AS _id from ec_forms\";\n\t\t\t\n\t\t\t//reset auto increment for ec_forms table\n\t\t\tvar reset_seq_query = 'UPDATE sqlite_sequence SET seq = (SELECT MAX(_id) FROM ec_forms) WHERE name=\"ec_forms\"';\n\n\t\t\ttx.executeSql(query, [], _getHighestIdSQLSuccess, self.errorCB);\n\t\t\ttx.executeSql(reset_seq_query, [], _resetSequenceSQLSuccess, null);\n\n\t\t};\n\n\t\tvar _getHighestIdSQLSuccess = function(the_tx, the_result) {\n\t\t\tmax_form_ID = the_result.rows.item(0)._id;\n\t\t};\n\n\t\tvar _getHighestIdSuccessCB = function() {\n\t\t\t\n\t\t\t//we got the max _id, perform all the INSERT transactions\n\t\t\tEC.db.transaction(_insertFormsTX, self.errorCB, _insertFormsSuccessCB);\n\t\t};\n\t\t\n\t\tvar _resetSequenceSQLSuccess = function(the_tx, the_result){\n\t\t};\n\n\t\t/**\n\t\t * @method commitForms. Due to a bug on iOS (insertId undefined after INSERT)\n\t\t * we need to get the MAX(_id) of the table ec_forms, reset the sqlite_sequence table to that value for the ec_forms column \n\t\t * to basically know in advance what the insertId will be in the database \n\t\t * \n\t\t */\n\t\tmodule.commitForms = function(the_forms_object, the_project_insertId) {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tforms = the_forms_object;\n\t\t\tproject_insertId = the_project_insertId;\n\t\t\tforms_IDs.length = 0;\n\t\t\tform_num_index = 0;\n\t\t\tmax_form_ID = 0;\n\n\t\t\t//select max _id from ec_forms\n\t\t\tEC.db.transaction(_getHighestIdTX, self.errorCB, _getHighestIdSuccessCB);\n\t\t\t\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Hierarchy));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n *   @module Hierarchy\n *\n */\n\nvar EC = EC || {};\nEC.Hierarchy = EC.Hierarchy || {};\nEC.Hierarchy = ( function(module) {\"use strict\";\n\n\t\tvar self;\n\t\tvar deferred;\n\t\tvar input_options;\n\t\tvar inputs_IDs = [];\n\n\t\tvar _errorCB = function(the_tx, the_result) {\n\n\t\t\tconsole.log(EC.Utils.TRANSACTION_ERROR);\n\t\t\tconsole.log(the_tx);\n\t\t\tconsole.log(the_result);\n\t\t};\n\n\t\tvar _commitOneOption = function(the_input_id, the_ref, the_label, the_value, the_tx) {\n\n\t\t\tvar query = \"\";\n\t\t\tvar input_id = the_input_id;\n\t\t\tvar ref = the_ref;\n\t\t\tvar label = the_label;\n\t\t\tvar value = the_value;\n\t\t\tvar tx = the_tx;\n\n\t\t\tquery = 'INSERT INTO ec_input_options (';\n\t\t\tquery += 'input_id, ';\n\t\t\tquery += 'ref, ';\n\t\t\tquery += 'label, ';\n\t\t\tquery += 'value)';\n\t\t\tquery += 'VALUES (\"';\n\t\t\tquery += input_id + '\", \"';\n\t\t\tquery += ref + '\", \"';\n\t\t\tquery += label + '\", \"';\n\t\t\tquery += value + '\");';\n\n\t\t\ttx.executeSql(query, [], _commitInputOptionsSQLSuccess, _errorCB);\n\t\t};\n\n\t\t//Transaction to save each options to the db (form multiple option inputs like radio, checkbox, select)\n\t\tvar _commitInputOptionsTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar j;\n\t\t\tvar k;\n\t\t\tvar iLength;\n\t\t\tvar jLength;\n\t\t\tvar kLength;\n\t\t\tvar ref;\n\t\t\tvar input_id;\n\t\t\tvar label;\n\t\t\tvar value;\n\t\t\tvar num;\n\t\t\tvar query = \"\";\n\n\t\t\t//loop the input_options array\n\t\t\tfor ( i = 0, iLength = input_options.length; i < iLength; i++) {\n\n\t\t\t\t//get the input ID based on (input ref AND form num)\n\t\t\t\tref = input_options[i].ref;\n\t\t\t\tnum = input_options[i].num;\n\n\t\t\t\t//loop all the input IDs to find a match\n\t\t\t\tfor ( j = 0, jLength = inputs_IDs.length; j < jLength; j++) {\n\n\t\t\t\t\tif (inputs_IDs[j].ref === ref && inputs_IDs[j].form_num === num) {\n\n\t\t\t\t\t\tinput_id = inputs_IDs[j].id;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t}//loop input_IDs\n\n\t\t\t\t//commit each option (IF ANY: we allow radio, checkbox and dropdown not to have any option)\n\t\t\t\tif (input_options[i].options === undefined) {\n\t\t\t\t\tkLength = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//if we have only 1 option the \"input_options[i].options: will be an object, not an array, so set one option manually\n\t\t\t\t\tif (Object.prototype.toString.call(input_options[i].options) === '[object Array]') {\n\t\t\t\t\t\tkLength = input_options[i].options.length;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//set length to 0 to skip the following loop\n\t\t\t\t\t\tkLength = 0;\n\n\t\t\t\t\t\t//set option properties as first element of input_options[i].options array\n\t\t\t\t\t\tlabel = input_options[i].options.label;\n\t\t\t\t\t\tvalue = input_options[i].options.value;\n\n\t\t\t\t\t\t_commitOneOption(input_id, ref, label, value, tx);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//commit all options (one at a time)\n\t\t\t\tfor ( k = 0; k < kLength; k++) {\n\n\t\t\t\t\tlabel = input_options[i].options[k].label;\n\t\t\t\t\tvalue = input_options[i].options[k].value;\n\n\t\t\t\t\t_commitOneOption(input_id, ref, label, value, tx);\n\n\t\t\t\t}//loop input_options.options\n\n\t\t\t}//loop input_options\n\n\t\t};\n\n\t\tvar _commitInputOptionsSQLSuccess = function(the_tx, the_result) {\n\n\t\t\t//console.log(the_result);\n\t\t\tconsole.log(\"executeSql SUCCESS INPUT OPTIONS\");\n\n\t\t};\n\n\t\tvar _commitInputOptionsSuccessCB = function() {\n\n\t\t\t//reset options length\n\t\t\tinput_options.length = 0;\n\n\t\t\t//Hierarchy structure saved to database correctly\n\t\t\tdeferred.resolve();\n\n\t\t};\n\n\t\tmodule.commitInputOptions = function(the_input_options, the_inputs_ids) {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tinput_options = the_input_options;\n\t\t\tinputs_IDs = the_inputs_ids;\n\n\t\t\tEC.db.transaction(_commitInputOptionsTX, _errorCB, _commitInputOptionsSuccessCB);\n\t\t\t\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Hierarchy));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n *   @module Hierarchy\n *\n */\n\nvar EC = EC || {};\nEC.Hierarchy = EC.Hierarchy || {};\nEC.Hierarchy = ( function(module) {\n        \"use strict\";\n\n        var self;\n        var deferred;\n\n        //track inputs IDs\n        var inputs_IDs = [];\n\n        //we need to keep track of the input option @ref to be linked with\n        // whatever ID it gets after being entered to the the db\n        var input_option_index;\n\n        //store inputs object\n        var inputs;\n\n        var forms_with_media = [];\n        var forms_IDs = [];\n\n        //Transaction to save all the inputs for each form to database\n        var _commitInputsTX = function(tx) {\n\n            var i;\n            var j;\n            var k;\n            var iLength;\n            var jLength;\n            var kLength;\n            var current_form_num;\n            var current_form_id;\n            var input_list;\n            var input_type;\n            var input_ref;\n            var query;\n\n            //loop input array, one element per form . Each element contains an\n            // input list and the @num attribute\n            for ( i = 0, iLength = inputs.length; i < iLength; i++) {\n\n                //get the database ID for the current form\n                current_form_num = inputs[i].num;\n                for ( j = 0, jLength = forms_IDs.length; j < jLength; j++) {\n\n                    if (forms_IDs[j].num === current_form_num) {\n\n                        //exit loop as soon as we get a match\n                        current_form_id = forms_IDs[j].id;\n                        break;\n                    }\n                }\n\n                //loop each input for the current element(form) and commit it\n                kLength = inputs[i].input_list.length;\n                for ( k = 0; k < kLength; k++) {\n\n                    input_type = inputs[i].input_list[k].type;\n                    input_ref = inputs[i].input_list[k].ref;\n\n                    query = 'INSERT INTO ec_inputs (';\n                    query += 'form_id, ';\n                    query += 'label, ';\n                    query += 'default_value, ';\n                    query += 'type, ';\n                    query += 'ref, ';\n                    query += 'position, ';\n                    query += 'is_primary_key, ';\n                    query += 'is_genkey, ';\n                    query += 'regex, ';\n                    query += 'max_range, ';\n                    query += 'min_range, ';\n                    query += 'is_required, ';\n                    query += 'is_title, ';\n                    query += 'has_jump, ';\n                    query += 'jumps, ';\n                    query += 'has_advanced_jump, ';\n                    query += 'datetime_format, ';\n                    query += 'branch_form_name, ';\n                    query += 'has_double_check) ';\n                    query += 'VALUES (';\n                    //parameterized query (webSQL only allows '?' http://www.w3.org/TR/webdatabase/)\n                    //\n                    query += '?,';\n                    //current_form_id\n                    //\n                    query += '?,';\n                    //label\n                    //\n                    query += '?,';\n                    //default_value\n                    //\n                    query += '?,';\n                    //type\n                    //\n                    query += '?,';\n                    //ref\n                    //\n                    query += '?,';\n                    //position\n                    //\n                    query += '?,';\n                    //is_primary_key\n                    //\n                    query += '?,';\n                    //is_gen_key\n                    //\n                    query += '?,';\n                    //regex\n                    //\n                    query += '?,';\n                    //max_range\n                    //\n                    query += '?,';\n                    //min_range\n                    //\n                    query += '?,';\n                    //is_required\n                    //\n                    query += '?,';\n                    //is_title\n                    //\n                    query += '?,';\n                    //has_jump\n                    //\n                    query += '?,';\n                    //jumps\n                    //\n                    query += '?,';\n                    //has_advanced_jump\n                    //\n                    query += '?,';\n                    //datetime_format\n                    //\n                    query += '?,';\n                    //branch_form_name\n                    //\n                    query += '?);';\n                    //has_double_check\n\n                    //keep track of current input @ref\n                    inputs_IDs.push({\n                        ref : input_ref,\n                        form_id : current_form_id,\n                        form_num : current_form_num,\n                        id : \"\"//fill this after INSERT\n                    });\n\n                    tx.executeSql(query, [//\n                    current_form_id, //\n                    inputs[i].input_list[k].label, //\n                    inputs[i].input_list[k].default_value, //\n                    input_type, //\n                    input_ref, //\n                    inputs[i].input_list[k].position, //\n                    inputs[i].input_list[k].is_primary_key, //\n                    inputs[i].input_list[k].is_genkey, //\n                    inputs[i].input_list[k].regex, //\n                    inputs[i].input_list[k].max_range, //\n                    inputs[i].input_list[k].min_range, //\n                    inputs[i].input_list[k].is_required, //\n                    inputs[i].input_list[k].is_title, //\n                    inputs[i].input_list[k].has_jump, //\n                    inputs[i].input_list[k].jumps, //\n                    inputs[i].input_list[k].has_advanced_jump, //\n                    inputs[i].input_list[k].datetime_format, //\n                    inputs[i].input_list[k].branch_form_name, //\n                    inputs[i].input_list[k].has_double_check//\n\n                    ], _commitInputsSQLSuccess, _errorCB);\n\n                }//for each input\n            }// for each form\n\n        };\n\n        /* Callback called each time an input executeSql is successful\n         *\n         * here the input ID (geerated from the query when entering the input) is\n         * linked to its input @ref\n         */\n        var _commitInputsSQLSuccess = function(the_tx, the_result) {\n\n            //link each row ID to its input\n            inputs_IDs[input_option_index].id = the_result.insertId;\n            input_option_index++;\n\n            console.log(\"executeSql SUCCESS HIERARCHY INPUTS\");\n\n        };\n\n        var _commitInputsSuccessCB = function() {\n\n            deferred.resolve(inputs_IDs);\n\n            forms_with_media.length = 0;\n            inputs.length = 0;\n\n        };\n\n        var _errorCB = function(the_tx, the_result) {\n\n            console.log(EC.Utils.TRANSACTION_ERROR);\n            console.log(the_tx);\n            console.log(the_result);\n        };\n\n        module.commitInputs = function(the_inputs_object, the_forms_ids) {\n\n            self = this;\n            deferred = new $.Deferred();\n            inputs = the_inputs_object;\n            forms_IDs = the_forms_ids;\n\n            inputs_IDs = [];\n            forms_with_media = [];\n            input_option_index = 0;\n\n            EC.db.transaction(_commitInputsTX, _errorCB, _commitInputsSuccessCB);\n\n            return deferred.promise();\n\n        };\n\n        return module;\n\n    }(EC.Hierarchy));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device*/\n/*\n *   @module Hierarchy\n *\n */\nvar EC = EC || {};\nEC.Hierarchy = EC.Hierarchy || {};\nEC.Hierarchy = ( function(module) {\"use strict\";\n\n        var self;\n        var project;\n        var deferred;\n\n        //Transaction to save the project object\n        var _commitProjectTX = function(tx) {\n\n            var query = \"\";\n            query += 'INSERT INTO ec_projects ( ';\n            query += 'name, ';\n            query += 'allowDownloadEdits, ';\n            query += 'version, ';\n            query += 'total_hierarchy_forms, ';\n            query += 'total_branch_forms, ';\n            query += 'downloadFromServer, ';\n            query += 'uploadToServer) ';\n            query += 'VALUES (\"';\n            query += project.name + '\", \"';\n            query += project.allowDownloadEdits + '\", \"';\n            query += project.version + '\", \"';\n            query += project.total_hierarchy_forms + '\", \"';\n            query += project.total_branch_forms + '\", \"';\n            query += project.downloadFromServer + '\", \"';\n            query += project.uploadToServer + '\");';\n\n            tx.executeSql(query, [], _commitProjectSQLSuccess, self.errorCB);\n\n        };\n\n        //Callback executed if the project is saved correctly to the db\n        var _commitProjectSQLSuccess = function(the_tx, the_result) {\n\n            //keep track of the last project ID we entered to the database\n            project.insertId = the_result.insertId;\n        };\n\n        var _commitProjectSuccessCB = function() {\n\n            var branch_forms;\n            //commit all the hierarchy forms (main)\n\n            //@bug on iOS: insertID can be undefined, so get the id of the last INSERT project manually\n            if (project.insertId) {\n\n                deferred.resolve(project);\n\n            } else {\n                \n                alert(\"ios\");\n                //oh my..IOS...let's get the ID of the last entered project before doing anything else\n                $.when(EC.Select.getProjectRowId(project.name)).then(function(the_project_id) {\n\n                    project.insertId = the_project_id;\n\n                    deferred.resolve(project);\n\n                });\n            }\n        };\n\n        module.commitProject = function(the_project_object) {\n\n            self = this;\n            project = the_project_object;\n            deferred = new $.Deferred();\n\n            EC.db.transaction(_commitProjectTX, self.errorCB, _commitProjectSuccessCB);\n\n            return deferred.promise();\n\n        };\n\n        return module;\n\n    }(EC.Hierarchy));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\r\n/*global $, jQuery*/\r\n/*\r\n *   @module Hierarchy\r\n *\r\n *  It will create a project hierarchy structure (project, forms, inputs, input_values) to the database\r\n *\r\n each method will accept a single object (that can be a single or an array of objects) to be saved\r\n *\r\n */\r\n\r\nvar EC = EC || {};\r\nEC.Hierarchy = (function (module) {\r\n    'use strict';\r\n\r\n    //callback for a transaction error\r\n    module.errorCB = function (the_tx, the_result) {\r\n        console.log(EC.Utils.TRANSACTION_ERROR);\r\n        console.log(the_tx);\r\n        console.log(the_result);\r\n    };\r\n\r\n    return module;\r\n}(EC.Hierarchy));\r\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/*\n *   @module Structure\n *\n */\nvar EC = EC || {};\nEC.Structure = EC.Structure || {};\nEC.Structure = ( function(module) {\"use strict\";\n\n        var deferred;\n        var project;\n\n        module.commitAll = function() {\n\n            deferred = new $.Deferred();\n\n            $.when(EC.Hierarchy.commitProject(EC.Parse.project)).then(function(the_project) {\n\n                project = the_project;\n\n                //if we have branches, save both hierarchy and branch structure to db\n\n                //commit all branch forms (if any)\n                var branch_forms = EC.Parse.getBranchForms();\n                var hierarchy_forms = EC.Parse.getHierarchyForms();\n                if (branch_forms.length > 0) {\n\n                    //commit both hierarchy and branch forms\n                    $.when(EC.Hierarchy.commitForms(hierarchy_forms, project.insertId), EC.Branch.commitBranchForms(branch_forms, project.insertId)).then(function(hierarchy_forms_IDs, branch_forms_IDs) {\n\n                        var hierarchy_inputs = EC.Parse.inputs;\n                        var branch_inputs = EC.Parse.branch_inputs;\n\n                        $.when(EC.Hierarchy.commitInputs(hierarchy_inputs, hierarchy_forms_IDs), EC.Branch.commitBranchInputs(branch_inputs, branch_forms_IDs)).then(function(hierarchy_inputs_IDs, branch_inputs_IDs) {\n\n                            var branch_options = EC.Parse.branch_options;\n                            var hierarchy_options = EC.Parse.options;\n\n                            //commit hierarchy input options if any\n                            if (hierarchy_options.length > 0) {\n                                $.when(EC.Hierarchy.commitInputOptions(hierarchy_options, hierarchy_inputs_IDs)).then(function() {\n\n                                    //hierarchy option saved, save branch input options if any\n                                    if (branch_options.length > 0) {\n                                        $.when(EC.Branch.commitBranchInputOptions(branch_options, branch_inputs_IDs)).then(function() {\n\n                                            //options saved , redirect to projects list\n                                            console.log(\"models ready\");\n                                            deferred.resolve();\n                                        });\n\n                                    } else {\n\n                                        //no branch options, redirect\n                                        console.log(\"models ready\");\n                                        deferred.resolve();\n                                    }\n\n                                });\n                            } else {\n                                //commit branch input options if any\n                                if (branch_options.length > 0) {\n                                    $.when(EC.Branch.commitBranchInputOptions(branch_options, branch_inputs_IDs)).then(function() {\n\n                                        //options saved\n                                        console.log(\"models ready\");\n                                        deferred.resolve();\n                                    });\n                                } else {\n                                    //no branch options, done\n                                    console.log(\"models ready\");\n                                    deferred.resolve();\n                                }\n                            }\n                        });\n\n                    });\n\n                } else {\n\n                    //commit only hierarchy forms\n                    $.when(EC.Hierarchy.commitForms(hierarchy_forms, project.insertId)).then(function(forms_IDs) {\n                        //commit hierarchy inputs\n                        var inputs = EC.Parse.inputs;\n\n                        $.when(EC.Hierarchy.commitInputs(inputs, forms_IDs)).then(function(inputs_IDs) {\n\n                            var options = EC.Parse.options;\n\n                            //commit input options if any\n                            if (options.length > 0) {\n                                $.when(EC.Hierarchy.commitInputOptions(options, inputs_IDs)).then(function() {\n\n                                    //options saved , done\n                                    console.log(\"models ready\");\n                                    deferred.resolve();\n\n                                });\n                            } else {\n                                //no options, done\n                                console.log(\"models ready\");\n                                deferred.resolve();\n                            }\n\n                        });\n\n                    });\n\n                }\n\n            });\n\n            return deferred.promise();\n\n        };\n\n        return module;\n\n    }(EC.Structure));\n","var EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = (function (module) {\n    'use strict';\n\n    var forms;\n    var project_id;\n    var entries;\n    var branch_data_rows;\n    var branch_form_names;\n    var form_counter;\n    var branch_form_counter;\n    var has_branches;\n    var deferred;\n\n    //get all ec_data rows for this project\t (per each form)\n    var _getAllProjectEntriesTX = function (tx) {\n\n        var i;\n        var iLength = forms.length;\n        var select_query = 'SELECT * FROM ec_data WHERE form_id=?';\n        var branch_select_query;\n        form_counter = 0;\n        branch_form_counter = 0;\n\n        for (i = 0; i < iLength; i++) {\n            tx.executeSql(select_query, [forms[i]._id], _getAllProjectEntriesSQLSuccessCB, EC.Select.errorCB);\n        }\n\n        if (has_branches) {\n            branch_data_rows = [];\n            branch_form_names = [];\n            branch_select_query = 'SELECT * FROM ec_branch_data JOIN ec_branch_forms ON ec_branch_data.form_id=ec_branch_forms._id WHERE ec_branch_forms.project_id=?';\n            tx.executeSql(branch_select_query, [project_id], _getAllProjectBranchEntriesSQLSuccessCB, EC.Select.errorCB);\n        }\n\n    };\n\n    var _getAllProjectEntriesSuccessCB = function () {\n\n        //if we have any branch data, append them to the end of entries array\n        if (branch_data_rows.length > 0) {\n            entries.push({\n                has_branches: true,\n                branch_data_rows: branch_data_rows,\n                branch_form_names: branch_form_names\n            });\n        }\n\n        //return entries to backup controller\n        deferred.resolve(entries.slice(0));\n\n        entries.length = 0;\n        branch_data_rows.length = 0;\n        forms.length = 0;\n    };\n\n    var _getAllProjectEntriesSQLSuccessCB = function (the_tx, the_result) {\n\n        var i;\n        var iLength = the_result.rows.length;\n        var current_data_rows;\n\n        //per each form, save form details and an array with all the entries for that form\n        entries[form_counter] = {\n            form_id: forms[form_counter]._id,\n            form_name: forms[form_counter].name,\n            total_entries: forms[form_counter].entries,\n            total_inputs: forms[form_counter].total_inputs,\n            data_rows: []\n        };\n\n        for (i = 0; i < iLength; i++) {\n\n            current_data_rows = entries[form_counter].data_rows;\n            current_data_rows.push(the_result.rows.item(i));\n\n            //if the entry row just added is a media field, set value to empty string (as media files are not backed up)\n            if (current_data_rows[current_data_rows.length - 1].type === EC.Const.PHOTO || current_data_rows[current_data_rows.length - 1].type === EC.Const.AUDIO || current_data_rows[current_data_rows.length - 1].type === EC.Const.VIDEO) {\n                current_data_rows[current_data_rows.length - 1].value = '';\n            }\n\n        }\n\n        form_counter++;\n\n    };\n\n    var _getAllProjectBranchEntriesSQLSuccessCB = function (the_tx, the_result) {\n\n        var i;\n        var iLength = the_result.rows.length;\n        var current_branch_form_name;\n\n        for (i = 0; i < iLength; i++) {\n\n            branch_data_rows.push(the_result.rows.item(i));\n\n            //cache branch form names: when restoring we will neeed the branch form name and project id to map the rows against the actual branch form id\n            //which will be different from the one we save\n            current_branch_form_name = the_result.rows.item(i).name;\n            //store only unique values\n            if (!EC.Utils.inArray(branch_form_names, current_branch_form_name)) {\n                branch_form_names.push(current_branch_form_name);\n            }\n        }\n\n    };\n\n    /**\n     *\n     * @param {Object} the_forms Fetch all project entries rows\n     */\n    module.getAllProjectEntries = function (the_forms, the_project_id) {\n\n        forms = the_forms;\n        project_id = the_project_id;\n        has_branches = EC.Utils.projectHasBranches();\n        entries = [];\n        branch_data_rows = [];\n        deferred = new $.Deferred();\n\n        EC.db.transaction(_getAllProjectEntriesTX, EC.Select.errorCB, _getAllProjectEntriesSuccessCB);\n\n        return deferred.promise();\n\n    };\n\n    return module;\n\n}(EC.Select));\n","/*jslint vars: true, nomen: true, plusplus: true*/\n/**\n * @module EC\n * @submodule GetData\n */\n\nvar EC = EC || {};\n\nEC.Select = ( function(module) {\n\n\t\tvar project_id;\n\t\tvar allow_download_edits;\n\t\tvar deferred;\n\n\t\tvar _getADEFlagTX = function(tx) {\n\n\t\t\tvar query = 'SELECT allowDownloadEdits FROM ec_projects WHERE _id=?';\n\n\t\t\ttx.executeSql(query, [project_id], _getADEFlagSQLSuccess, EC.Select.errorCB);\n\t\t};\n\n\t\tvar _getADEFlagSQLSuccess = function(the_tx, the_result) {\n\t\t\tallow_download_edits = the_result.rows.item(0).allowDownloadEdits;\n\t\t};\n\n\t\tvar _getADEFlagTXSuccessCB = function() {\n\n\t\t\tif (allow_download_edits === \"false\") {\n\t\t\t\tdeferred.reject();\n\t\t\t} else {\n\t\t\t\tdeferred.resolve();\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * @method getAllowDownloadEdits Fetch the AllowDownloadEdits flag for the selected project and set it in localStorage\n\t\t * @param {int} the_project_id  The project id\n\t\t */\n\t\tmodule.getAllowDownloadEdits = function(the_project_id) {\n\n\t\t\tproject_id = the_project_id;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_getADEFlagTX, EC.Select.errorCB, _getADEFlagTXSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n * @method getBranchChildrenFiles \n * \n * get all the media files for all the branch\n * entries attached to a child entry and return the array with the file details\n * \n * {value: <the_filename>, tyope: <the_media_type>}\n */\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar self;\n\t\tvar deferred;\n\t\tvar entries;\n\t\tvar files;\n\n\t\tvar _getBranchChildrenFilesSQLSuccessCB = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = the_result.rows.length;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\tfiles.push(the_result.rows.item(i));\n\t\t\t}\n\t\t};\n\n\t\tvar _getBranchChildrenFilesTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = entries.length;\n\t\t\tvar query = 'SELECT value, type from ec_branch_data WHERE hierarchy_entry_key_value=? AND (type=? OR type=? OR type=?) AND value <>?';\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\t//get all file names and types\n\t\t\t\ttx.executeSql(query, [entries[i].entry_key, EC.Const.PHOTO, EC.Const.AUDIO, EC.Const.VIDEO, \"\"], _getBranchChildrenFilesSQLSuccessCB, self.errorCB);\n\t\t\t}\n\t\t};\n\n\t\tvar _getBranchChildrenFilesSuccessCB = function() {\n\t\t\tdeferred.resolve(files);\n\t\t};\n\n\t\tmodule.getBranchChildrenFiles = function() {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tentries = EC.Delete.deletion_entries;\n\t\t\tfiles = [];\n\n\t\t\tEC.db.transaction(_getBranchChildrenFilesTX, self.errorCB, _getBranchChildrenFilesSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar self;\n\t\tvar entries = [];\n\t\tvar form_id;\n\t\tvar project_id;\n\t\tvar branch_form_name;\n\t\tvar hierarchy_key_value;\n\t\tvar titles = [];\n\t\tvar full_titles = [];\n\t\tvar branch_primary_keys = [];\n\t\tvar child_counter = 0;\n\t\tvar entry_key;\n\t\tvar offset;\n\t\tvar deferred;\n\n\t\tvar _getBranchEntriesSuccessCB = function() {\n\n\t\t\t/*\n\t\t\t * store primary key values for current branch form\n\t\t\t * it is not possible to have duplicates for the primary key input field within the same form level\n\t\t\t * (using circular data structure)\n\t\t\t */\n\t\t\tvar i;\n\t\t\tvar iLength = entries.length;\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\tbranch_primary_keys.push(entries[i].entry_key);\n\t\t\t}\n\n\t\t\tEC.BranchInputs.setCachedBranchEntryKeys(branch_form_name, branch_primary_keys);\n\n\t\t\tbranch_primary_keys.length = 0;\n\n\t\t\t/*\n\t\t\t * Using each entry, select all the fields for that entry with 'is_title' = true\n\t\t\t * This will build the full title to be displayed per each itme in the listview\n\t\t\t * if no inputs are set as title, default to the value of the primary key\n\t\t\t */\n\n\t\t\tEC.db.transaction(_getEntriesTitlesTX, EC.Select.errorCB, _getEntriesTitlesSuccessCB);\n\n\t\t\t/*\n\t\t\t * Using each entry, count how many child entry there are per each entry\n\t\t\t * The counts will be displayed on the list of entries\n\t\t\t */\n\n\t\t\tconsole.log(EC.Const.TRANSACTION_SUCCESS);\n\n\t\t};\n\n\t\tvar _getEntriesTitlesTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLenght = entries.length;\n\t\t\tvar query;\n\n\t\t\tfor ( i = 0; i < iLenght; i++) {\n\n\t\t\t\tquery = 'SELECT _id, value, entry_key FROM ec_branch_data WHERE form_id IN (SELECT _id FROM ec_branch_forms WHERE name=? AND project_id=?) AND is_title=? AND entry_key=? AND hierarchy_entry_key_value=?';\n\t\t\t\ttx.executeSql(query, [branch_form_name, project_id, 1, entries[i].entry_key, entries[i].hierarchy_entry_key_value], _getEntriesTitlesSQLSuccess, EC.Select.errorCB);\n\n\t\t\t}//for\n\n\t\t};\n\n\t\tvar _getEntriesTitlesSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLenght = the_result.rows.length;\n\n\t\t\t//build object with project data\n\t\t\tfor ( i = 0; i < iLenght; i++) {\n\n\t\t\t\ttitles.push(the_result.rows.item(i));\n\t\t\t}\n\n\t\t};\n\n\t\tvar _getEntriesTitlesSuccessCB = function() {\n\n\t\t\t//Build the titles concatenating all the title fields found per each entry\n\t\t\tvar i;\n\t\t\tvar j;\n\t\t\tvar iLength = entries.length;\n\t\t\tvar jLength = titles.length;\n\t\t\tvar full_title;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\tfull_title = \"\";\n\n\t\t\t\tfor ( j = 0; j < jLength; j++) {\n\n\t\t\t\t\tif (entries[i].entry_key === titles[j].entry_key) {\n\n\t\t\t\t\t\tfull_title += (full_title === \"\") ? titles[j].value : \", \" + titles[j].value;\n\n\t\t\t\t\t}\n\n\t\t\t\t}//for titles\n\n\t\t\t\tfull_titles.push({\n\t\t\t\t\tfull_title : full_title,\n\t\t\t\t\tentry_key : entries[i].entry_key\n\t\t\t\t});\n\n\t\t\t}//for entries\n\n\t\t\tconsole.log(\"branch entries full_titles\");\n\t\t\tconsole.log(full_titles);\n\n\t\t\t//resolve deferred returning full titles\n\t\t\tdeferred.resolve(full_titles.slice(0));\n\n\t\t\t//clear all arrays\n\t\t\tfull_titles.length = 0;\n\t\t\ttitles.length = 0;\n\t\t\tentries.length = 0;\n\n\t\t};\n\n\t\t/*\n\t\t * Get all entries for a form and group them by entry_key:\n\t\t * a form have multiple entries, one per each input, and they all have the same entry_key value)\n\t\t */\n\t\tvar _getBranchEntriesTX = function(tx) {\n\n\t\t\tvar query = \"\";\n\n\t\t\tquery = 'SELECT _id, entry_key, hierarchy_entry_key_value FROM ec_branch_data ';\n\t\t\tquery += 'WHERE form_id IN (SELECT _id FROM ec_branch_forms WHERE name=? AND project_id=?) ';\n\t\t\tquery += 'AND hierarchy_entry_key_value=? ';\n\t\t\tquery += 'GROUP BY entry_key ';\n\t\t\tquery += 'ORDER BY entry_key ';\n\t\t\tquery += 'LIMIT ' + window.localStorage.QUERY_LIMIT + \" OFFSET \" + offset;\n\n\t\t\ttx.executeSql(query, [branch_form_name, project_id, hierarchy_key_value], _getBranchEntriesSQLSuccess, EC.Select.errorCB);\n\t\t\tself.query_error_message = \"EC.Select.getBranchEntries _getBranchEntriesTX\";\n\n\t\t};\n\n\t\tvar _getBranchEntriesSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLenght = the_result.rows.length;\n\n\t\t\t//build object with entries\n\t\t\tfor ( i = 0; i < iLenght; i++) {\n\n\t\t\t\tentries.push(the_result.rows.item(i));\n\n\t\t\t}\n\n\t\t\tconsole.log(entries, true);\n\n\t\t};\n\n\t\tvar _getBranchEntriesTitlesTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLenght = entries.length;\n\t\t\tvar query;\n\n\t\t\tfor ( i = 0; i < iLenght; i++) {\n\n\t\t\t\tquery = 'SELECT _id, value, entry_key FROM ec_data WHERE form_id IN (SELECT _id FROM ec_branch_forms WHERE name=? AND project_id=?) AND is_title=? AND entry_key=? AND hierarchy_entry_key_value=?';\n\t\t\t\ttx.executeSql(query, [branch_form_name, project_id, 1, entries[i].entry_key, entries[i].hierarchy_entry_key_value], _getBranchEntriesTitlesSQLSuccess, EC.Select.errorCB);\n\n\t\t\t}//for\n\n\t\t};\n\n\t\tvar _getBranchEntriesTitlesSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLenght = the_result.rows.length;\n\n\t\t\t//build object with titles\n\t\t\tfor ( i = 0; i < iLenght; i++) {\n\n\t\t\t\ttitles.push(the_result.rows.item(i));\n\t\t\t}\n\n\t\t};\n\n\t\tmodule.getBranchEntries = function(the_project_id, the_branch_form_name, the_hierarchy_entry_key_value, the_offset) {\n\n\t\t\tself = this;\n\t\t\tbranch_form_name = the_branch_form_name;\n\t\t\thierarchy_key_value = the_hierarchy_entry_key_value;\n\t\t\tproject_id = the_project_id;\n\t\t\toffset = the_offset;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_getBranchEntriesTX, EC.Select.errorCB, _getBranchEntriesSuccessCB);\n\n\t\t\t// return promise\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar branch_form_name;\n\t\tvar project_id;\n\t\tvar entry_key;\n\t\tvar entry_keys = [];\n\t\tvar deferred;\n\n\t\tvar _getEntryKeys = function(tx) {\n\n\t\t\t//get all entry key for the specified form\n\t\t\tvar query = 'SELECT DISTINCT entry_key FROM ec_data WHERE form_id IN (SELECT _id FROM ec_branch_forms WHERE name=? AND project_id=?)';\n\n\t\t\ttx.executeSql(query, [branch_form_name, project_id], _getEntryKeysSQLSuccess, EC.Select.errorCB);\n\n\t\t};\n\n\t\tvar _getEntryKeysSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = the_result.rows.length;\n\n\t\t\t//build object with entry keys\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\tentry_keys.push(the_result.rows.item(i).entry_key);\n\t\t\t}\n\n\t\t};\n\n\t\tvar _getEntryKeysSuccessCB = function() {\n\t\t\tdeferred.resolve(entry_keys);\n\t\t};\n\n\t\t//get all entr+key value for the specified form\n\t\tmodule.getBranchEntryKeys = function(the_branch_form_name, the_project_id) {\n\n\t\t\tdeferred = new $.Deferred();\n\t\t\tbranch_form_name = the_branch_form_name;\n\t\t\tproject_id = the_project_id;\n\t\t\tentry_keys.length = 0;\n\n\t\t\tEC.db.transaction(_getEntryKeys, EC.Select.errorCB, _getEntryKeysSuccessCB);\n\t\t\t\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar branch_form_name;\n\t\tvar hierarchy_entry_key_value;\n\t\tvar entry_key;\n\t\tvar project_id;\n\t\tvar values = [];\n\t\tvar deferred;\n\n\t\tvar _getBranchEntryValuesTX = function(tx) {\n\n\t\t\t//get all entry values\n\t\t\tvar query = 'SELECT * FROM ec_branch_data WHERE form_id IN (SELECT _id FROM ec_branch_forms WHERE name=? AND project_id=?) AND entry_key=? AND hierarchy_entry_key_value =? ORDER BY position';\n\n\t\t\ttx.executeSql(query, [branch_form_name, project_id, entry_key, hierarchy_entry_key_value], _getBranchEntryValuesSQLSuccess, EC.Select.errorCB);\n\n\t\t};\n\t\t//_getEntryValues\n\n\t\tvar _getBranchEntryValuesSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar index;\n\t\t\tvar iLenght = the_result.rows.length;\n\t\t\tvar input_id = \"\";\n\t\t\tvar current_input_id;\n\t\t\tvar prev_value = [];\n\t\t\tvar prev_obj;\n\t\t\tvar new_obj;\n\t\t\tvar new_object = {};\n\t\t\tvar string;\n\n\t\t\t//build object with entry values\n\t\t\tfor ( i = 0; i < iLenght; i++) {\n\n\t\t\t\tcurrent_input_id = the_result.rows.item(i).input_id;\n\n\t\t\t\tvalues.push(the_result.rows.item(i));\n\n\t\t\t}\n\n\t\t\tconsole.log(the_tx);\n\t\t\tconsole.log(\"TRANSACTION SELECT BRANCH ENTRY VALUES SUCCESS\");\n\n\t\t};\n\n\t\tvar _getBranchEntryValuesSuccessCB = function(the_tx) {\n\n\t\t\t//Render entry values list\n\t\t\tdeferred.resolve(values.slice(0));\n\t\t\tvalues.length = 0;\n\n\t\t};\n\n\t\tmodule.getBranchEntryValues = function(the_project_id, the_branch_form_name, the_entry_key, the_hierarchy_entry_key_value) {\n\n\t\t\tbranch_form_name = the_branch_form_name;\n\t\t\tentry_key = the_entry_key;\n\t\t\tproject_id = the_project_id;\n\t\t\thierarchy_entry_key_value = the_hierarchy_entry_key_value;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\t//clear values array before requesting new values\n\t\t\tvalues.length = 0;\n\n\t\t\tEC.db.transaction(_getBranchEntryValuesTX, EC.Select.errorCB, _getBranchEntryValuesSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar hierarchy_entry_key;\n\t\tvar deferred;\n\t\tvar files;\n\n\t\tvar _errorCB = function(the_tx, the_error) {\n\t\t\tconsole.log(EC.Const.TRANSACTION_ERROR);\n\t\t\tconsole.log(the_tx);\n\t\t\tconsole.log(the_error);\n\t\t};\n\n\t\tvar _selectBranchFilesSQLSuccessCB = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = the_result.rows.length;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\tfiles.push(the_result.rows.item(i));\n\t\t\t}\n\t\t};\n\n\t\tvar _getBranchFilesTX = function(tx) {\n\n\t\t\tvar select_branch_files_query = 'SELECT value, type from ec_branch_data WHERE hierarchy_entry_key_value=? AND (type=? OR type=? OR type=?) AND value <>?';\n\t\t\t//get all file names and types\n\t\t\ttx.executeSql(select_branch_files_query, [hierarchy_entry_key, EC.Const.PHOTO, EC.Const.AUDIO, EC.Const.VIDEO, \"\"], _selectBranchFilesSQLSuccessCB, _errorCB);\n\t\t};\n\n\t\tvar _getBranchFilesSuccessCB = function() {\n\n\t\t\tconsole.log(\"Branch files: ****************************************\");\n\t\t\tconsole.log(\"Branch files:\" + JSON.stringify(files));\n\n\t\t\tdeferred.resolve(files);\n\t\t};\n\n\t\t//get all the media files for all the branch entries attached to a hierarchy entry\n\t\tmodule.getBranchFiles = function(the_hierarchy_entry_key) {\n\n\t\t\tdeferred = new $.Deferred();\n\t\t\thierarchy_entry_key = the_hierarchy_entry_key;\n\t\t\tfiles = [];\n\n\t\t\tEC.db.transaction(_getBranchFilesTX, _errorCB, _getBranchFilesSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar branch_form_name;\n\t\tvar value;\n\t\tvar input;\n\t\tvar project_id;\n\t\tvar entry_key;\n\t\tvar entry_keys = [];\n\t\tvar branch_form;\n\t\tvar deferred;\n\n\t\tvar _getBranchFormDetailsTX = function(tx) {\n\n\t\t\tvar query = \"SELECT _id, project_id, name,num, key, total_inputs, has_media, is_genkey_hidden, entries FROM ec_branch_forms WHERE name=? AND project_id=?\";\n\n\t\t\ttx.executeSql(query, [branch_form_name, project_id], _getBranchFormDetailsSQLSuccess, EC.Select.errorCB);\n\n\t\t};\n\n\t\tvar _getBranchFormDetailsSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tbranch_form = the_result.rows.item(0);\n\n\t\t};\n\n\t\tvar _getBranchFormDetailsSuccessCB = function() {\n\n\t\t\t//return branch form details\n\t\t\tdeferred.resolve(branch_form);\n\n\t\t};\n\n\t\tmodule.getBranchFormDetails = function(the_input, the_value, the_project_id) {\n\n\t\t\tinput = the_input;\n\t\t\tvalue = the_value;\n\t\t\tbranch_form_name = input.branch_form_name;\n\t\t\tproject_id = the_project_id;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_getBranchFormDetailsTX, EC.Select.errorCB, _getBranchFormDetailsSuccessCB);\n\n\t\t\t// return promise\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar project_id;\n\t\tvar branch_form_names;\n\t\tvar mapped_branch_forms;\n\t\tvar deferred;\n\n\t\tvar _getBranchFormLocalIDsTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = branch_form_names.length;\n\t\t\tvar query = \"SELECT _id, name FROM ec_branch_forms WHERE name=? AND project_id=?\";\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\ttx.executeSql(query, [branch_form_names[i], project_id], _getBranchFormLocalIDsSQLSuccess, EC.Select.errorCB);\n\t\t\t}\n\n\t\t};\n\n\t\tvar _getBranchFormLocalIDsSQLSuccess = function(the_tx, the_result) {\n\t\t\t\n\t\t\t//map form names against _id\n\t\t\t//TODO: is this right? why are we getting the first row only??\n\t\t\tmapped_branch_forms.push({\n\t\t\t\t_id : the_result.rows.item(0)._id,\n\t\t\t\tname : the_result.rows.item(0).name\n\t\t\t});\n\n\t\t};\n\n\t\tvar _getBranchFormLocalIDsSuccessCB = function() {\n\n\t\t\t//return mappped branch forms\n\t\t\tdeferred.resolve(mapped_branch_forms);\n\n\t\t};\n\n\t\tmodule.getBranchFormLocalIDs = function(the_project_id, the_branch_form_names) {\n\n\t\t\tproject_id = the_project_id;\n\t\t\tbranch_form_names = the_branch_form_names;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tmapped_branch_forms = [];\n\n\t\t\tEC.db.transaction(_getBranchFormLocalIDsTX, EC.Select.errorCB, _getBranchFormLocalIDsSuccessCB);\n\n\t\t\t// return promise\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar branch_forms;\n\t\tvar project_id;\n\t\tvar deferred;\n\n\t\tvar _getBranchFormsSuccessCB = function() {\n\t\t\tdeferred.resolve(branch_forms);\n\t\t};\n\n\t\tvar _getBranchFormsSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLenght = the_result.rows.length;\n\n\t\t\t//build object with project data\n\t\t\tfor ( i = 0; i < iLenght; i++) {\n\t\t\t\tbranch_forms.push(the_result.rows.item(i));\n\t\t\t}\n\t\t};\n\n\t\tvar _getBranchFormsTX = function(tx) {\n\t\t\tvar query = 'SELECT _id, name, key, num, has_media, is_genkey_hidden, total_inputs, entries FROM ec_branch_forms WHERE project_id=?';\n\t\t\ttx.executeSql(query, [project_id], _getBranchFormsSQLSuccess, EC.Select.errorCB);\n\t\t};\n\n\t\tmodule.getBranchForms = function(the_project_id) {\n\n\t\t\tproject_id = the_project_id;\n\t\t\tbranch_forms =[];\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_getBranchFormsTX, EC.Select.errorCB, _getBranchFormsSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\t\t\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar branch_inputs = [];\n\t\tvar branch_input_options_ids = [];\n\t\tvar branch_input_options = [];\n\t\tvar has_jumps;\n\t\tvar branch_form_name;\n\t\tvar project_id;\n\t\tvar form_id;\n\t\tvar deferred;\n\n\t\t//callback triggered when all the branch_inputs for a form are fetched correctly. 'branch_inputs' contains all the branch_inputs\n\t\tvar _getBranchInputsSuccessCB = function(tx) {\n\n\t\t\tconsole.log(\"TRANSACTION SELECT INPUTS SUCCESS\");\n\t\t\thas_jumps = false;\n\t\t\tbranch_input_options_ids.length = 0;\n\n\t\t\t//We have all the inputs, need to check if any radio, select(dropdown), checkbox input has input options\n\t\t\tvar i;\n\t\t\tvar iLenght = branch_inputs.length;\n\n\t\t\t//loop inputs looking for type radio, checkbox or dropdown and also to check if the form has some jumps\n\t\t\tfor ( i = 0; i < iLenght; i++) {\n\n\t\t\t\tif (branch_inputs[i].type === \"radio\" || branch_inputs[i].type === \"select\" || branch_inputs[i].type === \"checkbox\") {\n\t\t\t\t\t//list which inputs have input options (the ids)\n\t\t\t\t\tbranch_input_options_ids.push({\n\t\t\t\t\t\t\"id\" : branch_inputs[i]._id\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (branch_inputs[i].has_jump === 1 && !has_jumps) {\n\t\t\t\t\thas_jumps = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//map any option (if any) to the inputs\n\t\t\tif (branch_input_options_ids.length > 0) {\n\t\t\t\t//get input options\n\t\t\t\tEC.db.transaction(_getBranchInputOptionsTX, EC.Select.errorCB, _getBranchInputOptionsSuccessCB);\n\t\t\t}\n\n\t\t\t//no options to map then just render form\n\t\t\telse {\n\t\t\t\tdeferred.resolve(branch_inputs, has_jumps);\n\t\t\t}\n\n\t\t};\n\n\t\tvar _getBranchInputsSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLenght = the_result.rows.length;\n\n\t\t\t//build object with inputs data\n\t\t\tfor ( i = 0; i < iLenght; i++) {\n\t\t\t\tbranch_inputs.push(the_result.rows.item(i));\n\t\t\t}\n\n\t\t\tconsole.log(branch_inputs, true);\n\n\t\t};\n\n\t\tvar _getBranchInputOptionsSuccessCB = function(the_tx) {\n\n\t\t\t//map input options to input\n\t\t\tvar i;\n\t\t\tvar j;\n\t\t\tvar iLength = branch_inputs.length;\n\t\t\tvar jLength = branch_input_options.length;\n\n\t\t\t//console.log(JSON.stringify(input_options));\n\n\t\t\t//build object with inputs data\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\tbranch_inputs[i].options = [];\n\n\t\t\t\tfor ( j = 0; j < jLength; j++) {\n\n\t\t\t\t\tif (branch_inputs[i]._id === branch_input_options[j].input_id) {\n\n\t\t\t\t\t\tbranch_inputs[i].options.push({\n\t\t\t\t\t\t\tjump_to : branch_input_options[j].jump_to,\n\t\t\t\t\t\t\tjump_when : branch_input_options[j].jump_when,\n\t\t\t\t\t\t\tlabel : branch_input_options[j].label,\n\t\t\t\t\t\t\tref : branch_input_options[j].ref,\n\t\t\t\t\t\t\tvalue : branch_input_options[j].value\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}//if\n\n\t\t\t\t}//for\n\n\t\t\t}//for\n\n\t\t\tdeferred.resolve(branch_inputs, has_jumps);\n\n\t\t};\n\t\t//_getInputOptionsSuccessCB\n\n\t\tvar _getBranchInputOptionsTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLenght = branch_input_options_ids.length;\n\t\t\tvar query;\n\n\t\t\t//get all input options per each input\n\t\t\tfor ( i = 0; i < iLenght; i++) {\n\t\t\t\tquery = 'SELECT * FROM ec_branch_input_options WHERE input_id=?';\n\t\t\t\ttx.executeSql(query, [branch_input_options_ids[i].id], _getBranchInputOptionsSQLSuccess, EC.Select.errorCB);\n\t\t\t}\n\n\t\t};\n\n\t\tvar _getBranchInputOptionsSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLenght = the_result.rows.length;\n\n\t\t\t//build object with inputs data\n\t\t\tfor ( i = 0; i < iLenght; i++) {\n\t\t\t\tbranch_input_options.push(the_result.rows.item(i));\n\t\t\t}\n\n\t\t};\n\n\t\tvar _getBranchInputsTX = function(tx) {\n\n\t\t\t//get all branch inputs (using a nested query to get form id in the database)\n\t\t\tvar query = 'SELECT * FROM ec_branch_inputs WHERE form_id IN (SELECT _id FROM ec_branch_forms WHERE name=? AND project_id=?) ORDER BY position';\n\n\t\t\ttx.executeSql(query, [branch_form_name, project_id], _getBranchInputsSQLSuccess, EC.Select.errorCB);\n\n\t\t};\n\n\t\tmodule.getBranchInputs = function(the_branch_form_name, the_project_id) {\n\n\t\t\tdeferred = new $.Deferred();\n\t\t\tproject_id = the_project_id;\n\t\t\tbranch_form_name = the_branch_form_name;\n\n\t\t\t//reset branch arrays\n\t\t\tbranch_inputs.length = 0;\n\t\t\tbranch_input_options_ids.length = 0;\n\t\t\tbranch_input_options.length = 0;\n\n\t\t\t//if the project is using a circular network, get all other keys for the specified form. It can be done async (or use a deferred object: todo)\n\t\t\t$.when(EC.Select.getBranchEntryKeys(branch_form_name, project_id)).then(function(branch_entry_keys) {\n\n\t\t\t\tvar cached_keys;\n\t\t\t\tvar form_level_keys;\n\n\t\t\t\t//merge keys with those already in localStorage (if we are using circular network and form level key uniqueness) avoiding duplicates\n\t\t\t\ttry {\n\t\t\t\t\tcached_keys = JSON.parse(window.localStorage.branch_primary_keys);\n\t\t\t\t} catch(error) {\n\t\t\t\t\tcached_keys = [];\n\t\t\t\t}\n\t\t\t\tform_level_keys = cached_keys.concat(branch_entry_keys).unique();\n\t\t\t\twindow.localStorage.branch_primary_keys = JSON.stringify(form_level_keys);\n\n\t\t\t\tEC.db.transaction(_getBranchInputsTX, EC.Select.errorCB, _getBranchInputsSuccessCB);\n\n\t\t\t});\n\n\t\t\treturn deferred.promise();\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar project_id;\n\t\tvar mapped_branch_inputs;\n\t\tvar deferred;\n\n\t\tvar _getBranchInputsLocalIDsTX = function(tx) {\n\n\t\t\tvar query = \"SELECT ec_branch_inputs._id, ec_branch_inputs.ref FROM ec_branch_inputs JOIN ec_branch_forms ON ec_branch_forms._id=ec_branch_inputs.form_id WHERE ec_branch_forms.project_id=?\";\n\n\t\t\ttx.executeSql(query, [project_id], _getBranchInputsLocalIDsSQLSuccess, EC.Select.errorCB);\n\n\t\t};\n\n\t\tvar _getBranchInputsLocalIDsSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = the_result.rows.length;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\t//map form names against _id\n\t\t\t\tmapped_branch_inputs.push({\n\t\t\t\t\t_id : the_result.rows.item(i)._id,\n\t\t\t\t\tref : the_result.rows.item(i).ref\n\t\t\t\t});\n\t\t\t}\n\n\t\t};\n\n\t\tvar _getBranchInputsLocalIDsSuccessCB = function() {\n\n\t\t\t//return mappped branch forms\n\t\t\tdeferred.resolve(mapped_branch_inputs);\n\n\t\t};\n\n\t\tmodule.getBranchInputsLocalIDs = function(the_project_id) {\n\n\t\t\tproject_id = the_project_id;\n\n\t\t\tdeferred = new $.Deferred();\n\t\t\tmapped_branch_inputs = [];\n\n\t\t\tEC.db.transaction(_getBranchInputsLocalIDsTX, EC.Select.errorCB, _getBranchInputsLocalIDsSuccessCB);\n\n\t\t\t// return promise\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true, stupid: true*/\n/*global $, jQuery*/\n\n/* @module getBranchSyncedFiles\n * Get all the synced branch files linked to all the synced entries for a form\n *\n * @param {Array} the_hierarchy_entry_keys contains all the entry keys for synced\n * entries of a form\n */\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar self;\n\t\tvar hierarchy_entry_keys;\n\t\tvar deferred;\n\t\tvar files;\n\n\t\tvar _getBranchSyncedFilesSuccessCB = function() {\n\t\t\tdeferred.resolve(files);\n\t\t};\n\n\t\tvar _getBranchSyncedFilesSQLSuccessCB = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = the_result.rows.length;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\tfiles.push(the_result.rows.item(i));\n\t\t\t}\n\t\t};\n\n\t\tvar _getBranchSyncedFilesTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = hierarchy_entry_keys.length;\n\t\t\tvar query = 'SELECT value, type from ec_branch_data WHERE hierarchy_entry_key_value=? AND is_data_synced=? AND is_media_synced=? AND (type=? OR type=? OR type=?) AND value <>?';\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\t//get file names and types\n\t\t\t\ttx.executeSql(query, [hierarchy_entry_keys[i], 1, 1, EC.Const.PHOTO, EC.Const.AUDIO, EC.Const.VIDEO, \"\"], _getBranchSyncedFilesSQLSuccessCB, self.errorCB);\n\t\t\t}\n\n\t\t};\n\n\t\tmodule.getBranchSyncedFiles = function(the_hierarchy_entry_keys) {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\thierarchy_entry_keys = the_hierarchy_entry_keys;\n\t\t\tfiles = [];\n\n\t\t\tEC.db.transaction(_getBranchSyncedFilesTX, self.errorCB, _getBranchSyncedFilesSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar form_id;\n\t\tvar parents = [];\n\t\tvar parent_counter = 0;\n\t\tvar children_counter = 0;\n\t\tvar children_offset;\n\t\tvar nested_children_counter = 0;\n\t\tvar offset = 0;\n\t\tvar prev_parent_children;\n\t\tvar parent_offset;\n\t\tvar form_total_inputs;\n\t\tvar parent_form_total_entries;\n\t\tvar form_total_entries;\n\t\tvar is_loading_more;\n\t\tvar query_limit;\n\t\tvar self;\n\t\tvar new_request;\n\n\t\tvar _getChildEntriesParentsTX = function(tx) {\n\n\t\t\t//get all the parents one at a time\n\t\t\tvar query = \"\";\n\t\t\tquery += 'SELECT DISTINCT parent FROM ec_data WHERE form_id=? ORDER BY parent ';\n\t\t\tquery += 'LIMIT ' + 1 + ' ';\n\t\t\tquery += 'OFFSET ' + (parent_offset);\n\n\t\t\ttx.executeSql(query, [form_id], _getChildEntriesParentsSQLSuccess, EC.Select.errorCB);\n\t\t};\n\n\t\tvar _getChildEntriesParentsSuccessCB = function(the_tx) {\n\n\t\t};\n\n\t\tvar _getChildEntriesParentsSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = the_result.rows.length;\n\t\t\tvar parent;\n\n\t\t\t//if we have a parent to get children for\n\t\t\tif (iLength > 0) {\n\t\t\t\tparent = the_result.rows.item(0).parent;\n\t\t\t\tparents.push(the_result.rows.item(0));\n\n\t\t\t\t//get children per each parent\n\t\t\t\tEC.db.transaction(_getAllChildrenTX, EC.Select.errorCB, _getAllChildrenSuccessCB);\n\t\t\t} else {\n\n\t\t\t\t//no more parents found, display entries\n\t\t\t\tif (new_request) {\n\n\t\t\t\t\tEC.Entries.appendMoreChildEntries(parents);\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//are we loading more children? (user tapped \"show more\")\n\t\t\t\t\tif (is_loading_more) {\n\t\t\t\t\t\tEC.Entries.appendMoreChildEntries(parents);\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//render children on screen\n\t\t\t\t\t\tEC.Entries.renderChildEntriesList(parents);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar _getAllChildrenTX = function(tx) {\n\n\t\t\t//select all entries aside from the one skipped (by jumps)\n\t\t\tvar parent = parents[parent_counter].parent;\n\t\t\tvar query = 'SELECT form_id, parent, label, value,  entry_key, is_title, type FROM ec_data WHERE parent=? AND value<>?';\n\n\t\t\t//if new_request is true, we need to request the maximum number of children according to the pagination settings\n\t\t\tif (new_request) {\n\t\t\t\tquery += 'LIMIT ' + ((window.localStorage.QUERY_LIMIT) * form_total_inputs) + ' ';\n\t\t\t\tnew_request = false;\n\n\t\t\t} else {\n\n\t\t\t\t//new_request is false, so is it not a user request but recursion. Since we have got children from a previous parent, we need to request less entries\n\t\t\t\tquery += 'LIMIT ' + ((window.localStorage.QUERY_LIMIT - prev_parent_children) * form_total_inputs) + ' ';\n\n\t\t\t}\n\n\t\t\t//if children offset is 0, request children starting from first row\n\t\t\tif (children_offset === 0) {\n\t\t\t\tquery += 'OFFSET 0';\n\t\t\t} else {\n\n\t\t\t\t//we have an offset, so load all the children AFTER the offset.\n\t\t\t\t//If we have any previous children already loaded, the offset needs to be exactly that, usually less then the pagination.\n\t\t\t\t//That happen when we loaded children for more parents, so we loaded less then the pagination limit for the last parent children\n\t\t\t\tif (prev_parent_children === 0) {\n\t\t\t\t\tquery += 'OFFSET ' + children_offset * form_total_inputs;\n\t\t\t\t} else {\n\t\t\t\t\tquery += 'OFFSET ' + prev_parent_children * form_total_inputs;\n\t\t\t\t\tprev_parent_children = 0;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttx.executeSql(query, [parent, EC.Const.SKIPPED], _getAllChildrenSQLSuccessCB, EC.Select.errorCB);\n\n\t\t};\n\n\t\tvar _getAllChildrenSQLSuccessCB = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = the_result.rows.length;\n\t\t\tvar child_full_title = \"\";\n\n\t\t\t//check if we have any entries\n\t\t\tif (iLength > 0) {\n\n\t\t\t\t//get first row and entry key\n\t\t\t\tvar row = the_result.rows.item(0);\n\t\t\t\tvar entry_key = row.entry_key;\n\n\t\t\t\t//build title (avoiding empty fields so we do not end up with \"my_title, , , , ,\")\n\t\t\t\tif (row.is_title === 1 && row.value !== \"\") {\n\t\t\t\t\tchild_full_title += (child_full_title === \"\") ? row.value : ', ' + row.value;\n\t\t\t\t}\n\n\t\t\t\tparents[parent_counter].children = [];\n\t\t\t\tchildren_counter = 0;\n\n\t\t\t\t//loop all the other rows past the first one\n\t\t\t\tfor ( i = 1; i < iLength; i++) {\n\n\t\t\t\t\trow = the_result.rows.item(i);\n\n\t\t\t\t\t//if entry key is matching, build title only\n\t\t\t\t\tif (row.entry_key === entry_key) {\n\n\t\t\t\t\t\t//build title (avoiding empty fields so we do not end up with \"my_title, , , , ,\")\n\t\t\t\t\t\tif (row.is_title === 1 && row.value !== \"\") {\n\t\t\t\t\t\t\tchild_full_title += (child_full_title === \"\") ? row.value : ', ' + row.value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//different entry key i.e another entry\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t//if no title yet, default to value of primary key\n\t\t\t\t\t\tif (child_full_title === \"\") {\n\t\t\t\t\t\t\tchild_full_title = entry_key;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//add child\n\t\t\t\t\t\tparents[parent_counter].children[children_counter] = {\n\t\t\t\t\t\t\tfull_title : child_full_title,\n\t\t\t\t\t\t\tentry_key : entry_key\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tentry_key = row.entry_key;\n\t\t\t\t\t\tchildren_counter++;\n\t\t\t\t\t\tchild_full_title = \"\";\n\n\t\t\t\t\t\t//reset title\n\t\t\t\t\t\tif (row.is_title === 1 && row.value !== \"\") {\n\t\t\t\t\t\t\tchild_full_title += (child_full_title === \"\") ? row.value : ', ' + row.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//if after looping all the rows title is still empty, default to value of the primary key\n\t\t\t\tif (child_full_title === \"\") {\n\t\t\t\t\tchild_full_title = entry_key;\n\t\t\t\t}\n\n\t\t\t\t//add child\n\t\t\t\tparents[parent_counter].children[children_counter] = {\n\t\t\t\t\tfull_title : child_full_title,\n\t\t\t\t\tentry_key : entry_key\n\t\t\t\t};\n\n\t\t\t\tchild_full_title = \"\";\n\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t * All children fetched correctly, get nested children count\n\t\t */\n\t\tvar _getAllChildrenSuccessCB = function() {\n\n\t\t\tvar i;\n\t\t\tvar iLength = parents.length;\n\n\t\t\tEC.db.transaction(_getNestedChildrenCountTX, EC.Select.errorCB, _getNestedChildrenCountSuccessCB);\n\t\t};\n\n\t\tvar _getNestedChildrenCountSuccessCB = function() {\n\n\t\t\tvar query_limit = window.localStorage.QUERY_LIMIT;\n\n\t\t\tnested_children_counter = 0;\n\t\t\tchildren_counter = 0;\n\n\t\t\t//are we loading more for the same parent? (user tapped \"Show More\" button)\n\t\t\tif (is_loading_more) {\n\n\t\t\t\t//if the total of children for the current parent is less then the items per page settings, get the next parent and its children\n\t\t\t\tif (parents[parent_counter].children.length < (query_limit - prev_parent_children)) {\n\n\t\t\t\t\t//update counters before getting new parent\n\t\t\t\t\tprev_parent_children = parents[parent_counter].children.length;\n\t\t\t\t\tparent_counter++;\n\t\t\t\t\tparent_offset++;\n\t\t\t\t\tchildren_offset = 0;\n\n\t\t\t\t\t//get next parent first\n\t\t\t\t\tEC.db.transaction(_getChildEntriesParentsTX, EC.Select.errorCB, _getChildEntriesParentsSuccessCB);\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//cache the last parent children total\n\t\t\t\t\tprev_parent_children = parents[parent_counter].children.length;\n\n\t\t\t\t\t//append children to list\n\t\t\t\t\tEC.Entries.appendMoreChildEntries(parents);\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar j;\n\t\t\t\tvar jLength = parents.length;\n\t\t\t\tvar total_children_loaded = 0;\n\n\t\t\t\t//calculate total of children loaded recursively for each parent\n\t\t\t\tfor ( j = 0; j < jLength; j++) {\n\t\t\t\t\ttotal_children_loaded += parents[j].children.length;\n\t\t\t\t}\n\n\t\t\t\t//it the total of children is less then the pagination limit, get next parent and its children\n\t\t\t\tif (total_children_loaded < query_limit) {\n\n\t\t\t\t\t//get next parent and its children\n\t\t\t\t\tself.getNextParentChildEntries(total_children_loaded);\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//cache last parent total of children\n\t\t\t\t\tprev_parent_children = parents[parent_counter].children.length;\n\n\t\t\t\t\t//render list of children\n\t\t\t\t\tEC.Entries.renderChildEntriesList(parents);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar _getNestedChildrenCountTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = parents[parent_counter].children.length;\n\t\t\tvar query;\n\t\t\tvar parent_path;\n\t\t\tvar form_tree = EC.Utils.getParentAndChildForms(form_id);\n\t\t\tvar child_form_id = form_tree.child;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\t//build root path (parent|entry_key)\n\t\t\t\tparent_path = parents[parent_counter].parent + EC.Const.ENTRY_ROOT_PATH_SEPARATOR + parents[parent_counter].children[i].entry_key;\n\n\t\t\t\tquery = 'SELECT entry_key FROM ec_data WHERE parent=? AND form_id=? GROUP BY entry_key';\n\n\t\t\t\ttx.executeSql(query, [parent_path, child_form_id], _getNestedChildrenCountSQLSuccessCB, EC.Select.errorCB);\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar _getNestedChildrenCountSQLSuccessCB = function(the_tx, the_result) {\n\n\t\t\t//store total of nested children\n\t\t\tparents[parent_counter].children[nested_children_counter].nested_children_count = the_result.rows.length;\n\t\t\tnested_children_counter++;\n\n\t\t};\n\n\t\tmodule.getChildEntries = function(the_child_form_id, the_parent_offset, the_children_offset) {\n\n\t\t\tform_id = the_child_form_id;\n\t\t\tparent_offset = the_parent_offset;\n\t\t\tchildren_offset = the_children_offset;\n\t\t\tform_total_entries = EC.Utils.getFormByID(form_id).entries;\n\t\t\tform_total_inputs = EC.Utils.getFormByID(form_id).total_inputs;\n\t\t\tparent_form_total_entries = 0;\n\t\t\tis_loading_more = false;\n\t\t\tprev_parent_children = 0;\n\t\t\tparents.length = 0;\n\t\t\tparent_counter = 0;\n\t\t\tself = this;\n\n\t\t\t//get all parents first\n\t\t\tEC.db.transaction(_getChildEntriesParentsTX, EC.Select.errorCB, _getChildEntriesParentsSuccessCB);\n\n\t\t};\n\n\t\tmodule.getNextParentChildEntries = function(the_total_of_children_loaded) {\n\n\t\t\t//get total of children already loaded\n\t\t\tprev_parent_children = the_total_of_children_loaded;\n\n\t\t\t//increase parent counter\n\t\t\tparent_offset++;\n\t\t\tparent_counter++;\n\n\t\t\t//get all parents first\n\t\t\tEC.db.transaction(_getChildEntriesParentsTX, EC.Select.errorCB, _getChildEntriesParentsSuccessCB);\n\n\t\t};\n\n\t\tmodule.getMoreChildEntries = function(the_child_form_id, the_children_offset) {\n\n\t\t\tform_id = the_child_form_id;\n\t\t\tchildren_offset = the_children_offset;\n\t\t\tis_loading_more = true;\n\t\t\tquery_limit = window.localStorage.QUERY_LIMIT;\n\n\t\t\t//set a flag so we know we are dealing with a new user request aaction (tapping \"show more\" on the entries list)\n\t\t\tnew_request = true;\n\n\t\t\t//save last parent and set it as first elements of parents aray.\n\t\t\t//When tapping for more entries, we need to fetch for the last parent first\n\t\t\tvar last_parent = parents[parents.length - 1];\n\t\t\tparents.length = 0;\n\t\t\tparents.push(last_parent);\n\n\t\t\t//reset children count to 0, as we need to remove previous children already listed in the DOM\n\t\t\tparents[0].children.length = 0;\n\n\t\t\tparent_counter = 0;\n\n\t\t\tconsole.log(parents);\n\n\t\t\t//get more entries for the same parent\n\t\t\tEC.db.transaction(_getAllChildrenTX, EC.Select.errorCB, _getAllChildrenSuccessCB);\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\n/*\n * Select  all the entries we are going to delete and cache them\n *\n * We need the total amount of entries deleted to update the entries counter per\n * each form, also we need to delete any children based on the entry key of the\n * selected entry\n */\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar self;\n\t\tvar deferred;\n\t\tvar parent_key;\n\t\tvar child_entries;\n\t\tvar child_counters;\n\t\tvar parent_entries;\n\n\t\tvar _getChildEntriesForDeletionSQLSuccessCB = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = the_result.rows.length;\n\t\t\t\n\t\t\t//get all child entries\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\tchild_entries.push(the_result.rows.item(i));\n\t\t\t}\n\t\t\t\n\t\t\t//get totalt of entries deleted from a specific form\n\t\t\tif (iLength > 0) {\n\t\t\t\tchild_counters = {\n\t\t\t\t\tform_id : child_entries[0].form_id,\n\t\t\t\t\tamount : child_entries.length\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\tvar _getChildEntriesForDeletionTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = parent_entries.length;\n\t\t\tvar query = \"SELECT form_id, parent, entry_key, COUNT(*) as count FROM ec_data WHERE parent=? GROUP BY entry_key\";\n\n\t\t\t//We will loop using all the 'parent' values as we might have more than one child\n\t\t\t// to delete\n\n\t\t\t/* per each entry, get parent key building up full path to the root\n\t\t\t * like <parent_key>|<child_key> etc.\n\t\t\t * parent key is \"\" when the entry is a top level entry (top level form), because\n\t\t\t * it cannot have any parent\n\t\t\t */\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\tif (parent_entries[i].parent === \"\") {\n\t\t\t\t\tparent_key = parent_entries[i].entry_key;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tparent_key = parent_entries[i].parent + EC.Const.ENTRY_ROOT_PATH_SEPARATOR + parent_entries[i].entry_key;\n\t\t\t\t}\n\n\t\t\t\ttx.executeSql(query, [parent_key], _getChildEntriesForDeletionSQLSuccessCB, self.errorCB);\n\t\t\t}\n\n\t\t};\n\n\t\tvar _getChildEntriesForDeletionSuccessCB = function() {\n\t\t\tdeferred.resolve(child_entries, child_counters);\n\t\t};\n\n\t\tmodule.getChildEntriesForDeletion = function() {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tparent_entries = EC.Delete.deletion_entries;\n\t\t\tchild_entries = [];\n\t\t\tchild_counters = {};\n\n\t\t\tEC.db.transaction(_getChildEntriesForDeletionTX, self.errorCB, _getChildEntriesForDeletionSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar entries = [];\n\t\tvar input;\n\t\tvar form_id;\n\t\tvar branch_form_name;\n\t\tvar entry_key;\n\t\tvar count;\n\t\tvar deferred;\n\t\tvar hierarchy_key_value;\n\t\tvar project_id;\n\n\t\t/*\n\t\t * Get all entries for a form and group them by entry_key:\n\t\t * a form have multiple entries, one per each input, and they all have the same entry_key value)\n\t\t */\n\t\tvar _getCountBranchEntriesTX = function(tx) {\n\n\t\t\tvar query;\n\n\t\t\tquery = 'SELECT COUNT(DISTINCT entry_key) as count FROM ec_branch_data WHERE form_id IN (SELECT _id FROM ec_branch_forms WHERE name=? AND project_id=?) AND hierarchy_entry_key_value=?';\n\n\t\t\ttx.executeSql(query, [branch_form_name, project_id, hierarchy_key_value], _getBranchEntriesSQLSuccess, EC.Select.errorCB);\n\n\t\t};\n\n\t\tvar _getBranchEntriesSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tif (the_result.rows.length > 0) {\n\t\t\t\tcount = (the_result.rows.item(0).count);\n\t\t\t} else {\n\t\t\t\tcount = 0;\n\t\t\t}\n\n\t\t};\n\n\t\tvar _getCountBranchEntriesSuccessCB = function() {\n\n\t\t\t//resolve deferred returning total of entries\n\t\t\tdeferred.resolve(count, input);\n\n\t\t};\n\n\t\tmodule.getCountBranchEntries = function(the_input, the_hierarchy_key_value, the_project_id) {\n\n\t\t\tinput = the_input;\n\t\t\tbranch_form_name = the_input.branch_form_name;\n\t\t\thierarchy_key_value = the_hierarchy_key_value;\n\t\t\tproject_id = the_project_id;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_getCountBranchEntriesTX, EC.Select.errorCB, _getCountBranchEntriesSuccessCB);\n\n\t\t\t// return promise\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar entries = [];\n\t\tvar form_id;\n\t\tvar parent;\n\t\tvar titles = [];\n\t\tvar full_titles = [];\n\t\tvar primary_keys = [];\n\t\tvar child_counter = 0;\n\t\tvar entry_key;\n\t\tvar offset;\n\t\tvar deferred;\n\n\t\tvar _getEntriesSuccessCB = function() {\n\n\t\t\t/*\n\t\t\t * store primary key values for current form\n\t\t\t * it is not possible to have duplicates for the primary key input field within the same form level\n\t\t\t * (using circular data structure)\n\t\t\t */\n\t\t\tvar i;\n\t\t\tvar iLength = entries.length;\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\tprimary_keys.push(entries[i].entry_key);\n\t\t\t}\n\n\t\t\twindow.localStorage.primary_keys = JSON.stringify(primary_keys);\n\t\t\tprimary_keys.length = 0;\n\n\t\t\t/*\n\t\t\t * Using each entry, select all the fields for that entry with 'is_title' = true\n\t\t\t * This will build the full title to be displayed per each itme in the listview\n\t\t\t * if no inputs are set as title, default to the value of the primary key\n\t\t\t */\n\n\t\t\tEC.db.transaction(_getEntriesTitlesTX, EC.Select.errorCB, _getEntriesTitlesSuccessCB);\n\n\t\t\t/*\n\t\t\t * Using each entry, count how many child entry there are per each entry\n\t\t\t * The counts will be displayed on the list of entries\n\t\t\t */\n\n\t\t\tconsole.log(EC.Const.TRANSACTION_SUCCESS);\n\n\t\t};\n\n\t\tvar _getEntriesTitlesSuccessCB = function() {\n\n\t\t\t//Build the titles concatenating all the title fields found per each entry\n\t\t\tvar i;\n\t\t\tvar j;\n\t\t\tvar iLength = entries.length;\n\t\t\tvar jLength = titles.length;\n\t\t\tvar full_title;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\tfull_title = \"\";\n\n\t\t\t\tfor ( j = 0; j < jLength; j++) {\n\n\t\t\t\t\tif (entries[i].entry_key === titles[j].entry_key) {\n\t\t\t\t\t\tfull_title += (full_title === \"\") ? titles[j].value : \", \" + titles[j].value;\n\t\t\t\t\t}\n\n\t\t\t\t}//for titles\n\n\t\t\t\tfull_titles.push({\n\t\t\t\t\tfull_title : full_title,\n\t\t\t\t\tentry_key : entries[i].entry_key\n\t\t\t\t});\n\n\t\t\t}//for entries\n\n\t\t\t// console.log(\"full_titles\");\n\t\t\t// console.log(full_titles);\n\n\t\t\t//get the count of child entries (if any)\n\t\t\t_getChildrenCount();\n\n\t\t};\n\n\t\t/*\n\t\t * Get all entries for a form and group them by entry_key:\n\t\t *\n\t\t * a form have multiple entries, one per each input, and they all have the same entry_key value)\n\t\t */\n\t\tvar _getEntriesTX = function(tx) {\n\t\t\t\n\t\t\t\n\t\t\t//TODO: fix ordering of entries\n\t\t\tvar query = 'SELECT _id, entry_key, parent FROM ec_data WHERE form_id=? AND parent=? GROUP BY entry_key ORDER BY _id LIMIT ' + window.localStorage.QUERY_LIMIT + \" OFFSET \" + offset;\n\n\t\t\ttx.executeSql(query, [form_id, parent], _getEntriesSQLSuccess, EC.Select.errorCB);\n\n\t\t};\n\n\t\tvar _getEntriesSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLenght = the_result.rows.length;\n\n\t\t\t//build object with entries\n\t\t\tfor ( i = 0; i < iLenght; i++) {\n\n\t\t\t\tentries.push(the_result.rows.item(i));\n\n\t\t\t}\n\n\t\t\tconsole.log(entries, true);\n\n\t\t};\n\n\t\tvar _getEntriesTitlesTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLenght = entries.length;\n\t\t\tvar query;\n\n\t\t\t//select all the rows to build the title (aside from skipped values as in the case of jumps)\n\t\t\tfor ( i = 0; i < iLenght; i++) {\n\t\t\t\tquery = 'SELECT _id, value, entry_key FROM ec_data WHERE form_id=? AND is_title=? AND entry_key=? AND parent=? AND value<>?';\n\t\t\t\ttx.executeSql(query, [form_id, 1, entries[i].entry_key, entries[i].parent, EC.Const.SKIPPED], _getEntriesTitlesSQLSuccess, EC.Select.errorCB);\n\t\t\t}//for\n\n\t\t};\n\n\t\tvar _getEntriesTitlesSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLenght = the_result.rows.length;\n\n\t\t\t//build object with project data\n\t\t\tfor ( i = 0; i < iLenght; i++) {\n\n\t\t\t\ttitles.push(the_result.rows.item(i));\n\t\t\t}\n\n\t\t};\n\n\t\tfunction _getChildrenCountTX(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = entries.length;\n\t\t\tvar parent;\n\t\t\tvar parent_path;\n\t\t\tvar breadcrumb_trail;\n\t\t\tvar query;\n\n\t\t\t//get breadcrumbs to convert to parent path\n\t\t\tbreadcrumb_trail = JSON.parse(window.localStorage.breadcrumbs);\n\t\t\tparent_path = (breadcrumb_trail[0] === \"\") ? breadcrumb_trail.join(EC.Const.ENTRY_ROOT_PATH_SEPARATOR).substring(1) : breadcrumb_trail.join(EC.Const.ENTRY_ROOT_PATH_SEPARATOR);\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\tparent = (parent_path === \"\") ? entries[i].entry_key : parent_path + EC.Const.ENTRY_ROOT_PATH_SEPARATOR + entries[i].entry_key;\n\n\t\t\t\tquery = 'SELECT parent FROM ec_data WHERE parent=? GROUP BY entry_key';\n\n\t\t\t\t// console.log(query);\n\n\t\t\t\ttx.executeSql(query, [parent], _getChildrenCountSQLSuccessCB, EC.Select.errorCB);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction _getChildrenCountSuccessCB() {\n\n\t\t\t//offset is 0 resolve to entries list\n\t\t\tif (offset === 0) {\n\t\t\t\tdeferred.resolve(full_titles.slice(0));\n\t\t\t} else {\n\t\t\t\t//if offset is not 0, we are loading more entries to be appended to the entries list\n\t\t\t\tEC.Entries.appendMoreEntries(full_titles.slice(0));\n\t\t\t}\n\n\t\t\t//clear all arrays\n\t\t\tfull_titles.length = 0;\n\t\t\ttitles.length = 0;\n\t\t\tentries.length = 0;\n\t\t\tchild_counter = 0;\n\n\t\t\tconsole.log(EC.Const.TRANSACTION_SUCCESS);\n\n\t\t}\n\n\t\tfunction _getChildrenCountSQLSuccessCB(the_tx, the_result) {\n\n\t\t\t//Add total of children to its parent\n\t\t\tfull_titles[child_counter].children = the_result.rows.length;\n\n\t\t\tchild_counter++;\n\n\t\t}\n\n\t\t// Get the children for a parent form\n\t\tvar _getChildrenCount = function() {\n\n\t\t\tif (entries.length > 0) {\n\n\t\t\t\t//get the count of children per each parent\n\t\t\t\tEC.db.transaction(_getChildrenCountTX, EC.Select.errorCB, _getChildrenCountSuccessCB);\n\n\t\t\t} else {\n\n\t\t\t\t//no child entries to fetch yet, render list of entries directly\n\t\t\t\t//Call Entries controller to render entries list (if offset is 0)\n\t\t\t\tif (offset === 0) {\n\t\t\t\t\tEC.Entries.renderList(full_titles.slice(0));\n\t\t\t\t} else {\n\t\t\t\t\t//if offset is not 0, we are loading more entries to be appended to the entries list\n\t\t\t\t\tEC.Entries.appendMoreEntries(full_titles.slice(0));\n\t\t\t\t}\n\n\t\t\t\t//clear all arrays\n\t\t\t\tfull_titles.length = 0;\n\t\t\t\ttitles.length = 0;\n\t\t\t\tentries.length = 0;\n\t\t\t\tchild_counter = 0;\n\n\t\t\t\tconsole.log(EC.Const.TRANSACTION_SUCCESS);\n\n\t\t\t}\n\n\t\t};\n\n\t\tmodule.getEntries = function(the_form_id, the_parent_key, the_offset) {\n\n\t\t\tform_id = the_form_id;\n\t\t\tparent = the_parent_key;\n\t\t\toffset = the_offset;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_getEntriesTX, EC.Select.errorCB, _getEntriesSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\n/*\n * Get all the entry keys for a single form, using form ID\n *\n * We use DISTICT to have a single occurrence of the netry key, as all the rows\n * belonging to a form entry can have the same\n */\n\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar self;\n\t\tvar form_id;\n\t\tvar entry_key;\n\t\tvar entry_keys;\n\t\tvar deferred;\n\n\t\tvar _getEntryKeys = function(tx) {\n\n\t\t\t//get all entry key for the specified form\n\t\t\tvar query = 'SELECT DISTINCT entry_key FROM ec_data WHERE form_id=?';\n\n\t\t\ttx.executeSql(query, [form_id], _getEntryKeysSQLSuccess, self.errorCB);\n\t\t};\n\n\t\tvar _getEntryKeysSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = the_result.rows.length;\n\n\t\t\t//build object with entry keys\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\tentry_keys.push(the_result.rows.item(i).entry_key);\n\t\t\t}\n\t\t};\n\n\t\tvar _getEntryKeysSuccessCB = function() {\n\t\t\tdeferred.resolve(entry_keys);\n\t\t};\n\n\t\t//get all entry keys for the specified form\n\t\tmodule.getEntryKeys = function(the_form_id) {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tform_id = the_form_id;\n\t\t\tentry_keys = [];\n\t\t\tEC.db.transaction(_getEntryKeys, self.errorCB, _getEntryKeysSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar form_id;\n\t\tvar entry_key;\n\t\tvar parent_path;\n\t\tvar values = [];\n\t\tvar branches = [];\n\t\tvar deferred;\n\n\t\tvar _getEntryValues = function(tx) {\n\n\t\t\t//get all entry values\n\t\t\tvar query = 'SELECT * FROM ec_data WHERE form_id=? AND entry_key=? AND parent=? ORDER BY position';\n\n\t\t\ttx.executeSql(query, [form_id, entry_key, parent_path], _getEntryValuesSQLSuccess, EC.Select.errorCB);\n\n\t\t};\n\t\t//_getEntryValues\n\n\t\tvar _getEntryValuesSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar index;\n\t\t\tvar iLenght = the_result.rows.length;\n\t\t\tvar input_id = \"\";\n\t\t\tvar current_input_id;\n\t\t\tvar prev_value = [];\n\t\t\tvar prev_obj;\n\t\t\tvar new_obj;\n\t\t\tvar new_object = {};\n\t\t\tvar string;\n\n\t\t\t//build object with entry values\n\t\t\tfor ( i = 0; i < iLenght; i++) {\n\n\t\t\t\tcurrent_input_id = the_result.rows.item(i).input_id;\n\n\t\t\t\tvalues.push(the_result.rows.item(i));\n\n\t\t\t\t//keep track of branches, if any\n\t\t\t\tif (the_result.rows.item(i).type === EC.Const.BRANCH) {\n\t\t\t\t\tbranches.push(the_result.rows.item(i));\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.log(the_tx);\n\t\t\tconsole.log(\"TRANSACTION SELECT ENTRY VALUES SUCCESS\");\n\n\t\t};\n\t\t//_getEntryValuesSQLSuccess\n\n\t\tvar _getEntryValuesSuccessCB = function(the_tx) {\n\n\t\t\t\n\t\t\t\n\t\t\tdeferred.resolve(values.slice(0));\n\n\t\t\t//clear values array\n\t\t\tvalues.length = 0;\n\t\t\tconsole.log(EC.Const.TRANSACTION_SUCCESS);\n\t\t};\n\n\t\tmodule.getEntryValues = function(the_form_id, the_entry_key, the_parent_path) {\n\n\t\t\tform_id = the_form_id;\n\t\t\tentry_key = the_entry_key;\n\t\t\tparent_path = the_parent_path;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_getEntryValues, EC.Select.errorCB, _getEntryValuesSuccessCB);\n\t\t\t\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar forms;\n\t\tvar project_id;\n\t\tvar has_branches;\n\t\tvar total_synced_rows;\n\t\tvar total_entries_rows;\n\t\tvar total_media_files;\n\t\tvar total_branch_media_files;\n\t\tvar total_all_synced_rows;\n\t\tvar button_states = {};\n\t\tvar deferred;\n\n\t\t//callback for a forms select transaction success\n\t\tvar _getFormsSuccessCB = function() {\n\n\t\t\t//get info about this project data to enable/ disable context menu buttons\n\t\t\ttotal_synced_rows = 0;\n\t\t\ttotal_entries_rows = 0;\n\t\t\ttotal_media_files = 0;\n\t\t\ttotal_all_synced_rows = 0;\n\t\t\ttotal_branch_media_files = 0;\n\t\t\thas_branches = EC.Utils.projectHasBranches();\n\t\t\tEC.db.transaction(_getDataInfoTX, EC.Select.errorCB, _getDataInfoSuccessCB);\n\n\t\t};\n\n\t\tvar _getDataInfoTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = forms.length;\n\t\t\tvar has_data_synced_query = 'SELECT COUNT(*) AS total_synced_rows FROM ec_data WHERE form_id=? AND is_data_synced=?';\n\t\t\tvar has_entries_query = 'SELECT COUNT(*) AS total_entries_rows FROM ec_data WHERE form_id=?';\n\t\t\tvar has_media_query = 'SELECT COUNT(*) AS total_media_files FROM ec_data WHERE form_id=? AND (type=? OR type=? OR type=?) AND value<>?';\n\n\t\t\t/* all synced: is_data_synced must be 1, there are some edge case where\n\t\t\t * is_media_synced must be 1 before deleting, or the entry is of type media but\n\t\t\t * no file has been saved\n\t\t\t * \n\t\t\t * To simplify things, we enable the button when at least one row has is_data_synced=1 and we handle edge cases upon deletion (see EC.Select.getSyncedEntryKeys())\n\t\t\t */\n\t\t\tvar has_all_synced_query = 'SELECT COUNT(*) AS total_all_synced_rows FROM ec_data WHERE form_id=? AND is_data_synced=?';\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\ttx.executeSql(has_data_synced_query, [forms[i]._id, 1], _onDataSyncedSQLSuccess, EC.Select.errorCB);\n\t\t\t\ttx.executeSql(has_entries_query, [forms[i]._id], _onHasEntriesSQLSuccess, EC.Select.errorCB);\n\t\t\t\ttx.executeSql(has_media_query, [forms[i]._id, EC.Const.PHOTO, EC.Const.AUDIO, EC.Const.VIDEO, \"\"], _onHasMediaSQLSuccess, EC.Select.errorCB);\n\t\t\t\ttx.executeSql(has_all_synced_query, [forms[i]._id, 1], _onHasAllSyncedSQLSuccess, EC.Select.errorCB);\n\t\t\t}\n\n\t\t};\n\n\t\tvar _onDataSyncedSQLSuccess = function(the_tx, the_result) {\n\t\t\ttotal_synced_rows += parseInt(the_result.rows.item(0).total_synced_rows, 10);\n\t\t};\n\n\t\tvar _onHasEntriesSQLSuccess = function(the_tx, the_result) {\n\t\t\ttotal_entries_rows += parseInt(the_result.rows.item(0).total_entries_rows, 10);\n\t\t};\n\n\t\tvar _onHasMediaSQLSuccess = function(the_tx, the_result) {\n\t\t\ttotal_media_files += parseInt(the_result.rows.item(0).total_media_files, 10);\n\t\t};\n\n\t\tvar _onHasAllSyncedSQLSuccess = function(the_tx, the_result) {\n\t\t\ttotal_all_synced_rows += parseInt(the_result.rows.item(0).total_all_synced_rows, 10);\n\t\t};\n\n\t\tvar _getDataInfoSuccessCB = function() {\n\n\t\t\tvar i;\n\t\t\tvar iLength;\n\t\t\tvar branch_form_with_media_ids = [];\n\n\t\t\tconsole.log(\"Data info collected\");\n\n\t\t\tbutton_states.unsync_all_data = (total_synced_rows > 0) ? 1 : 0;\n\t\t\tbutton_states.delete_all_entries = (total_entries_rows > 0) ? 1 : 0;\n\t\t\tbutton_states.delete_media_files = (total_media_files > 0) ? 1 : 0;\n\t\t\tbutton_states.delete_synced_entries = (total_all_synced_rows > 0) ? 1 : 0;\n\n\t\t\t//any branches? check for media files then\n\t\t\tif (has_branches) {\n\n\t\t\t\t//get all branch forms\n\t\t\t\t$.when(EC.Select.getBranchForms(project_id)).then(function(the_branch_forms) {\n\n\t\t\t\t\t//look up for branch forms with media\n\t\t\t\t\tiLength = the_branch_forms.length;\n\t\t\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\t\t\tif (parseInt(the_branch_forms[i].has_media, 10) === 1) {\n\t\t\t\t\t\t\tbranch_form_with_media_ids.push(the_branch_forms[i]._id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//look up if there is at least 1 branch media file\n\t\t\t\t\tif (branch_form_with_media_ids.length > 0) {\n\n\t\t\t\t\t\t$.when(EC.Select.hasBranchMediaFiles(branch_form_with_media_ids)).then(function(is_media_found) {\n\t\t\t\t\t\t\tbutton_states.delete_media_files = (is_media_found) ? 1 : 0;\n\t\t\t\t\t\t\tdeferred.resolve(forms.slice(0), button_states);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdeferred.resolve(forms.slice(0), button_states);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdeferred.resolve(forms.slice(0), button_states);\n\t\t\t}\n\n\t\t};\n\n\t\tvar _getFormsTX = function(tx) {\n\n\t\t\tvar query = 'SELECT _id, name, key, num, has_media, has_branches, is_genkey_hidden, total_inputs, entries FROM ec_forms WHERE project_id=?';\n\t\t\ttx.executeSql(query, [project_id], _getFormsSQLSuccess, EC.Select.errorCB);\n\t\t};\n\n\t\tvar _getFormsSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLenght = the_result.rows.length;\n\n\t\t\t//build object with project data\n\t\t\tfor ( i = 0; i < iLenght; i++) {\n\t\t\t\tforms.push(the_result.rows.item(i));\n\t\t\t}\n\n\t\t\tconsole.log(the_tx);\n\t\t\tconsole.log(\"TRANSACTION SELECT FORMS SUCCESS\");\n\n\t\t};\n\n\t\tmodule.getForms = function(the_project_id) {\n\n\t\t\tproject_id = the_project_id;\n\t\t\tforms = [];\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_getFormsTX, EC.Select.errorCB, _getFormsSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\t\t//getForms\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar parent_form_name;\n\t\tvar immediate_parent_key_value;\n\t\tvar full_parent_path;\n\t\tvar form_id;\n\t\tvar deferred;\n\n\t\tvar _errorCB = function(the_tx, the_result) {\n\t\t\tconsole.log(the_tx);\n\t\t\tconsole.log(the_result);\n\t\t};\n\n\t\tvar _getFullParentPathSQLSuccess = function(the_tx, the_result) {\n\n\t\t\t//result will be null if no parent is found\n\t\t\tif (the_result.rows.item(0)) {\n\t\t\t\tfull_parent_path = (the_result.rows.item(0).parent);\n\t\t\t}\n\n\t\t};\n\n\t\tvar _getFullParentPathSuccessCB = function() {\n\n\t\t\t//if we have the parent entry for the current entry resolve otherwise reject the promise\n\t\t\tif (full_parent_path !== null) {\n\t\t\t\tdeferred.resolve(full_parent_path);\n\t\t\t} else {\n\t\t\t\tdeferred.reject();\n\t\t\t}\n\n\t\t};\n\n\t\tvar _getFullParentPathTX = function(tx) {\n\n\t\t\t//a parent entry consists of multiple\n\t\t\tvar query = 'SELECT parent FROM ec_data WHERE form_id=? AND entry_key=? LIMIT 1';\n\t\t\ttx.executeSql(query, [form_id, immediate_parent_key_value], _getFullParentPathSQLSuccess, _errorCB);\n\n\t\t};\n\n\t\t/* The new hierarchy foreign key constraint feature a parent key like key|key|key...\n\t\t * therefore when downloading remote entries, we need to get the full parent path looking up the parent table on the device.\n\t\t * If no parent entry is found, the user will be prompted to download from the immediate parent table to keep the referential integrity in the database\n\t\t */\n\t\tmodule.getFullParentPath = function(the_form_id, the_immediate_parent_key_value) {\n\n\t\t\tform_id = the_form_id;\n\t\t\timmediate_parent_key_value = the_immediate_parent_key_value;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tfull_parent_path = null;\n\n\t\t\tEC.db.transaction(_getFullParentPathTX, _errorCB, _getFullParentPathSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n * Get all the media files for a single hierarchy entry passing form ID and entry\n * key\n */\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar self;\n\t\tvar form;\n\t\tvar deferred;\n\t\tvar files;\n\t\tvar entries;\n\n\t\tvar _getHierarchyChildrenFilesSQLSuccessCB = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = the_result.rows.length;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\tfiles.push(the_result.rows.item(i));\n\t\t\t}\n\t\t};\n\n\t\tvar _getHierarchyChildrenFilesTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = entries.length;\n\t\t\tvar query = 'SELECT value, type from ec_data WHERE form_id=? AND entry_key=? AND (type=? OR type=? OR type=?) AND value <>?';\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\t//get all file names and types\n\t\t\t\ttx.executeSql(query, [form._id, entries[i].entry_key, EC.Const.PHOTO, EC.Const.AUDIO, EC.Const.VIDEO, \"\"], _getHierarchyChildrenFilesSQLSuccessCB, self.errorCB);\n\t\t\t}\n\n\t\t};\n\n\t\tvar _getHierarchyChildrenFilesSuccessCB = function() {\n\n\t\t\tconsole.log(\"Hierarchy files: ****************************************\");\n\t\t\tconsole.log(\"files:\" + JSON.stringify(files));\n\n\t\t\tdeferred.resolve(files);\n\t\t};\n\n\t\tmodule.getHierarchyChildrenFiles = function(the_form) {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tform = the_form;\n\t\t\tfiles = [];\n\t\t\tentries = EC.Delete.deletion_entries;\n\n\t\t\tEC.db.transaction(_getHierarchyChildrenFilesTX, self.errorCB, _getHierarchyChildrenFilesSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\n/*\n * @method getHierarchyEntriesForDeletion\n *\n * Select and count the rows we are going to delete to be able to update the\n * entries counters later, the ones we use to show the entries total per each form\n * on the form list page\n * This is mainly done for performance reason, as querying COUNT per each form\n * each time the form list view is called was a bit heavy\n * Doing this way we have a column \"entries_total\" per each form and we keep that\n * value updated accordingly\n *\n * This method also caches details about the entries we are going to delete later,\n * this is mainly to have a reference for any branches or media files  attached\n * to these entries which need to be deleted as well\n * \n * on resolve(), entries and counters objects are returned\n */\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar self;\n\t\tvar deferred;\n\t\tvar entry_key;\n\t\tvar entries;\n\t\tvar counters;\n\n\t\tvar _getHierarchyEntriesForDeletionSQLSuccessCB = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = the_result.rows.length;\n\n\t\t\t//cache entries\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\tentries.push(the_result.rows.item(i));\n\t\t\t}\n\n\t\t\t//update counters\n\t\t\tcounters.push({\n\t\t\t\tform_id : entries[0].form_id,\n\t\t\t\tamount : entries.length\n\t\t\t});\n\t\t};\n\n\t\tvar _getHierarchyEntriesForDeletionTX = function(tx) {\n\n\t\t\tvar query = \"SELECT form_id, parent, entry_key, COUNT(*) as count FROM ec_data WHERE entry_key=? GROUP BY form_id\";\n\n\t\t\ttx.executeSql(query, [entry_key], _getHierarchyEntriesForDeletionSQLSuccessCB, EC.Delete.errorCB);\n\t\t};\n\n\t\tvar _getHierarchyEntriesForDeletionSuccessCB = function() {\n\t\t\t\n\t\t\t//return entries details and counters\n\t\t\tdeferred.resolve(entries, counters);\n\t\t};\n\n\t\tmodule.getHierarchyEntriesForDeletion = function(the_entry_key) {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tentry_key = the_entry_key;\n\t\t\tentries = [];\n\t\t\tcounters = [];\n\n\t\t\tEC.db.transaction(_getHierarchyEntriesForDeletionTX, EC.Delete.errorCB, _getHierarchyEntriesForDeletionSuccessCB);\n\n\t\t\treturn deferred.promise();\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n * Get all the media files for a single hierarchy entry passing form ID and entry key\n */\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar self;\n\t\tvar form;\n\t\tvar deferred;\n\t\tvar files;\n\t\tvar entry_key;\n\t\t\n\t\tvar _selectHierarchyFilesSQLSuccessCB = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = the_result.rows.length;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\tfiles.push(the_result.rows.item(i));\n\t\t\t}\n\t\t};\n\n\t\tvar _getHierarchyFilesTX = function(tx) {\n\n\t\t\tvar query = 'SELECT value, type from ec_data WHERE form_id=? AND entry_key=? AND (type=? OR type=? OR type=?) AND value <>?';\n\n\t\t\t//get all file names and types\n\t\t\ttx.executeSql(query, [form._id, entry_key, EC.Const.PHOTO, EC.Const.AUDIO, EC.Const.VIDEO, \"\"], _selectHierarchyFilesSQLSuccessCB, self.errorCB);\n\t\t};\n\t\t\n\t\tvar _getHierarchyFilesSuccessCB = function(){\n\t\t\tdeferred.resolve(files);\n\t\t};\n\t\t\n\t\tmodule.getHierarchyFiles = function(the_form, the_entry_key) {\n\t\t\t\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tform = the_form;\n\t\t\tentry_key = the_entry_key;\n\t\t\tfiles =[];\n\n\t\t\tEC.db.transaction(_getHierarchyFilesTX, self.errorCB, _getHierarchyFilesSuccessCB);\n\t\t\t\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true, stupid: true*/\n/*global $, jQuery*/\n/*\n * Get all the synced media files for a hierarchy form\n * \n * files are synced when is_data_synced=? AND is_media_synced=? are both 1\n * \n */\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar self;\n\t\tvar form_id;\n\t\tvar deferred;\n\t\tvar files;\n\n\t\tvar _getHierarchySyncedFilesSuccessCB = function() {\n\t\t\tdeferred.resolve(files);\n\t\t};\n\n\t\tvar _getHierarchySyncedFilesSQLSuccessCB = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = the_result.rows.length;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\tfiles.push(the_result.rows.item(i));\n\t\t\t}\n\t\t};\n\n\t\tvar _getHierarchySyncedFilesTX = function(tx) {\n\n\t\t\tvar query = \"SELECT value, type from ec_data WHERE form_id=? AND is_data_synced=? AND is_media_synced=? AND (type=? OR type=? OR type=?) AND value<>?\";\n\n\t\t\ttx.executeSql(query, [form_id, 1, 1, EC.Const.PHOTO, EC.Const.AUDIO, EC.Const.VIDEO, \"\"], _getHierarchySyncedFilesSQLSuccessCB, self.errorCB);\n\t\t};\n\n\t\tmodule.getHierarchySyncedFiles = function(the_form_id) {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tform_id = the_form_id;\n\t\t\tfiles = [];\n\n\t\t\tEC.db.transaction(_getHierarchySyncedFilesTX, self.errorCB, _getHierarchySyncedFilesSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = (function (module) {\n    'use strict';\n\n    var form_id;\n    var inputs = [];\n    var input_options_ids = [];\n    var input_options = [];\n    var has_jumps;\n    var has_location;\n    var deferred;\n\n    //callback triggered when all the inputs for a form are fetched correctly. 'inputs' contains all the inputs\n    var _getInputsSuccessCB = function (tx) {\n\n        console.log('TRANSACTION SELECT INPUTS SUCCESS');\n        has_jumps = has_location = false;\n\n        input_options_ids.length = 0;\n\n        //We have all the inputs, need to check if any radio, select(dropdown), checkbox input has input options\n        var i;\n        var iLenght = inputs.length;\n\n        //loop inputs looking for type radio, checkbox or dropdown and also to check if the form has some jumps\n        for (i = 0; i < iLenght; i++) {\n\n            if (inputs[i].type === EC.Const.RADIO || inputs[i].type === EC.Const.DROPDOWN || inputs[i].type === EC.Const.CHECKBOX) {\n\n                //list which inputs have input options (the ids)\n                input_options_ids.push({\n                    id: inputs[i]._id\n                });\n\n            }\n            //do we have a location input?\n            if (inputs[i].type === EC.Const.LOCATION) {\n                //this flag will be used to start watchPosition geolocation when adding an entry\n                has_location = true;\n            }\n\n\n            if (inputs[i].has_jump === 1 && !has_jumps) {\n                has_jumps = true;\n            }\n        }\n\n        //map any option (if any) to the inputs\n        if (input_options_ids.length > 0) {\n\n            //console.log(JSON.stringify(input_options_ids));\n\n            //get input options\n            EC.db.transaction(_getInputOptionsTX, EC.Select.errorCB, _getInputOptionsSuccessCB);\n\n        }\n        //no options to map then just render form\n        else {\n            //resolve query\n            deferred.resolve(inputs, has_jumps, has_location);\n        }\n    };\n\n    var _getInputsSQLSuccess = function (the_tx, the_result) {\n\n        var i;\n        var iLenght = the_result.rows.length;\n\n        //build object with inputs data\n        for (i = 0; i < iLenght; i++) {\n            inputs.push(the_result.rows.item(i));\n        }\n    };\n\n    var _getInputOptionsSuccessCB = function (the_tx) {\n\n        //map input options to input\n        var i;\n        var j;\n        var iLength = inputs.length;\n        var jLength = input_options.length;\n\n        //build object with inputs data\n        for (i = 0; i < iLength; i++) {\n\n            inputs[i].options = [];\n\n            for (j = 0; j < jLength; j++) {\n\n                if (inputs[i]._id === input_options[j].input_id) {\n\n                    inputs[i].options.push({\n                        label: input_options[j].label,\n                        ref: input_options[j].ref,\n                        value: input_options[j].value\n                    });\n\n                }//if\n\n            }//for\n\n        }//for\n\n        //resolve query\n        deferred.resolve(inputs, has_jumps, has_location);\n    };\n    //_getInputOptionsSuccessCB\n\n    var _getInputOptionsTX = function (tx) {\n\n        var i;\n        var iLenght = input_options_ids.length;\n        var query;\n\n        //get all input options per each input\n        for (i = 0; i < iLenght; i++) {\n            query = 'SELECT * FROM ec_input_options WHERE input_id=?';\n            tx.executeSql(query, [input_options_ids[i].id], _getInputOptionsSQLSuccess, EC.Select.errorCB);\n        }\n\n    };\n\n    var _getInputOptionsSQLSuccess = function (the_tx, the_result) {\n\n        var i;\n        var iLenght = the_result.rows.length;\n\n        //build object with inputs data\n        for (i = 0; i < iLenght; i++) {\n            input_options.push(the_result.rows.item(i));\n        }\n\n    };\n\n    var _getInputsTX = function (tx) {\n\n        var query = 'SELECT * FROM ec_inputs WHERE form_id=? ORDER BY position';\n        tx.executeSql(query, [form_id], _getInputsSQLSuccess, EC.Select.errorCB);\n    };\n\n    module.getInputs = function (the_form_id) {\n\n        deferred = new $.Deferred();\n        form_id = the_form_id;\n\n        inputs.length = 0;\n        input_options_ids.length = 0;\n        input_options.length = 0;\n\n        //if the project is using a circular network, get all other keys for the specified form to avoid entering the same primary key value for a form of the same hierarchy level\n        $.when(EC.Select.getEntryKeys(form_id)).then(function (entry_keys) {\n\n            var cached_keys;\n            var form_level_keys;\n\n            //merge keys with those already in localStorage (if we are using circular network and form level key uniqueness) avoiding duplicates\n            try {\n                cached_keys = JSON.parse(window.localStorage.primary_keys);\n            } catch (error) {\n                cached_keys = [];\n            }\n            form_level_keys = cached_keys.concat(entry_keys).unique();\n            window.localStorage.primary_keys = JSON.stringify(form_level_keys);\n\n            EC.db.transaction(_getInputsTX, EC.Select.errorCB, _getInputsSuccessCB);\n\n        });\n\n        return deferred.promise();\n\n    };\n\n    return module;\n\n}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar forms;\n\t\tvar input_ids = [];\n\t\tvar deferred;\n\n\t\tmodule.getLocalInputIDs = function(the_forms) {\n\n\t\t\tforms = the_forms;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_getInputsIDsTX, EC.Select.errorCB, _getInputsIDsSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\tvar _getInputsIDsTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = forms.length;\n\t\t\tvar query = 'SELECT _id, ref FROM ec_inputs WHERE form_id=?';\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\ttx.executeSql(query, [forms[i]._id], _getInputsIDsSQLSuccess, EC.Select.errorCB);\n\t\t\t}\n\n\t\t};\n\t\tvar _getInputsIDsSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = the_result.rows.length;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\tinput_ids.push(the_result.rows.item(i));\n\t\t\t}\n\n\t\t};\n\n\t\tvar _getInputsIDsSuccessCB = function() {\n\t\t\tdeferred.resolve(input_ids);\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar project_name;\n\t\tvar project_id;\n\t\tvar deferred;\n\n\t\tvar _getProjectRowIdSuccessCB = function() {\n\t\t\tdeferred.resolve(project_id);\n\t\t};\n\n\t\tvar _getProjectRowIdSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tproject_id = the_result.rows.item(0)._id;\n\n\t\t};\n\n\t\tvar _getProjectRowIdTX = function(tx) {\n\n\t\t\tvar query = 'SELECT _id FROM ec_projects WHERE name=?';\n\t\t\ttx.executeSql(query, [project_name], _getProjectRowIdSQLSuccess, EC.Select.errorCB);\n\t\t};\n\n\t\tmodule.getProjectRowId = function(the_project_name) {\n\n\t\t\tdeferred = new $.Deferred();\n\t\t\tproject_name = the_project_name;\n\n\t\t\tEC.db.transaction(_getProjectRowIdTX, EC.Select.errorCB, _getProjectRowIdSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar projects = [];\n\t\tvar deferred;\n\n\t\tvar _getProjectsSuccessCB = function() {\n\t\t\tconsole.log(EC.Const.TRANSACTION_SUCCESS);\n\t\t};\n\n\t\tvar _getProjectsTX = function(tx) {\n\n\t\t\tvar query = 'SELECT _id, name, total_hierarchy_forms, total_branch_forms FROM ec_projects ORDER BY name';\n\t\t\ttx.executeSql(query, [], _getProjectsSQLSuccess, EC.Select.errorCB);\n\t\t};\n\n\t\tvar _getProjectsSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLenght = the_result.rows.length;\n\n\t\t\t//build object with project data\n\t\t\tfor ( i = 0; i < iLenght; i++) {\n\t\t\t\tprojects.push(the_result.rows.item(i));\n\t\t\t}\n\n\t\t\tdeferred.resolve(projects);\n\t\t};\n\n\t\tmodule.getProjects = function() {\n\n\t\t\tdeferred = new $.Deferred();\n\t\t\t//clear projects array\n\t\t\tprojects.length = 0;\n\n\t\t\tEC.db.transaction(_getProjectsTX, EC.Select.errorCB, _getProjectsSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true, stupid : true*/\n/*global $, jQuery*/\n\n/*\n * Get all the synced entry keys for a single form, using form ID\n *\n * We use DISTICT to have a single occurrence of the entry key, as many rows can\n * have the same entry key.\n *\n * A row is fully synced when:\n *\n * is_data_synced= 1 but the row is not a media type (audio, photo, video),\n * is_data_synced is set to 1 after successfully uploading to the server\n *\n * is_data_synced = 1 and is_media_synced= 1 and the row is of type media (audio,\n * photo, video), this means the file was uploaded successfully\n *\n * is_data_synced = 1, is_media_synced is still 0, the type is media (audio,\n * photo, video) but the value is empty: this means the entry is data synced but\n * there is not any file to upload, therefore the entry can be safely deleted, as\n * the user decided not to enter any media when requested\n * TODO: check this better\n */\n\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar self;\n\t\tvar form_id;\n\t\tvar entry_key;\n\t\tvar entry_keys;\n\t\tvar deferred;\n\t\t\n\t\tvar _errorCB = function(the_result, the_error){\n\t\t\tconsole.log(the_result);\n\t\t\tconsole.log(the_error);\n\t\t};\n\n\t\tvar _getSyncedEntryKeysTX = function(tx) {\n\n\t\t\tvar query = 'SELECT DISTINCT entry_key FROM ec_data WHERE form_id=?';\n\t\t\tquery += ' AND ((is_data_synced=? AND type NOT IN (\"audio\", \"photo\", \"video\"))';\n\t\t\tquery += ' OR (is_data_synced=? AND is_media_synced=? AND type IN (\"audio\", \"photo\", \"video\"))';\n\t\t\tquery += ' OR (is_data_synced=? AND is_media_synced=? AND type IN (\"audio\", \"photo\", \"video\") AND value=?))';\n\n\t\t\ttx.executeSql(query, [form_id, 1, 1, 1, 1, 0, \"\"], _getSyncedEntryKeysSQLSuccess, _errorCB);\n\t\t};\n\n\t\tvar _getSyncedEntryKeysSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = the_result.rows.length;\n\n\t\t\t//build object with entry keys\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\tentry_keys.push(the_result.rows.item(i).entry_key);\n\t\t\t}\n\t\t};\n\n\t\tvar _getSyncedEntryKeysSuccessCB = function() {\n\t\t\tdeferred.resolve(entry_keys);\n\t\t};\n\n\t\t//get all entry keys for the specified form\n\t\tmodule.getSyncedEntryKeys = function(the_form_id) {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tform_id = the_form_id;\n\t\t\tentry_keys = [];\n\t\t\tEC.db.transaction(_getSyncedEntryKeysTX, self.errorCB, _getSyncedEntryKeysSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar branch_forms_ids;\n\t\tvar total_branch_media_files;\n\t\tvar project_id;\n\t\tvar deferred;\n\n\t\tvar _getBranchMediaFileSuccessCB = function() {\n\t\t\tdeferred.resolve(total_branch_media_files > 0 ? true : false);\t\n\t\t};\n\n\t\tvar _getBranchMediaFileSQLSuccess = function(the_tx, the_result) {\n\t\t\ttotal_branch_media_files += parseInt(the_result.rows.item(0).total_branch_media_files, 10);\n\t\t};\n\n\t\tvar _getBranchMediaFileTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = branch_forms_ids.length;\n\t\t\tvar query = 'SELECT COUNT(*) AS total_branch_media_files FROM ec_branch_data WHERE form_id=? AND (type=? OR type=? OR type=?) AND value<>?';\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\ttx.executeSql(query, [branch_forms_ids[i], EC.Const.PHOTO, EC.Const.AUDIO, EC.Const.VIDEO, \"\"], _getBranchMediaFileSQLSuccess, EC.Select.errorCB);\n\t\t\t}\n\n\t\t};\n\n\t\tmodule.hasBranchMediaFiles = function(the_branch_forms_ids) {\n\n\t\t\tbranch_forms_ids = the_branch_forms_ids;\n\t\t\ttotal_branch_media_files = 0;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_getBranchMediaFileTX, EC.Select.errorCB, _getBranchMediaFileSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = (function (module) {\n    'use strict';\n\n    //callback for a transaction error\n    module.errorCB = function (the_result, the_error) {\n        console.log(EC.Const.TRANSACTION_ERROR);\n        console.log('%c' + the_error.message, 'color: red');\n        console.log('%c' + the_result, 'color: red');\n    };\n\n    return module;\n\n}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar project_id;\n\t\tvar branch_forms;\n\t\tvar deferred;\n\n\t\tvar _getBranchFormsTX = function(tx) {\n\n\t\t\tvar query = \"SELECT _id, name, num, key, total_inputs, has_media, is_genkey_hidden, entries FROM ec_branch_forms WHERE project_id=?\";\n\n\t\t\ttx.executeSql(query, [project_id], _getBranchFormsSQLSuccess, EC.Select.errorCB);\n\n\t\t};\n\n\t\tvar _getBranchFormsSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = the_result.rows.length;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\tbranch_forms.push(the_result.rows.item(i));\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar _getBranchFormsSuccessCB = function() {\n\n\t\t\tdeferred.resolve(branch_forms);\n\n\t\t};\n\n\t\tmodule.getBranchForms = function(the_project_id) {\n\n\t\t\tproject_id = the_project_id;\n\t\t\tbranch_forms = [];\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_getBranchFormsTX, EC.Select.errorCB, _getBranchFormsSuccessCB);\n\n\t\t\t// return promise (with the branch_forms)\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar project_id;\n\t\tvar deferred;\n\t\tvar media_type;\n\t\tvar audio;\n\n\t\tvar _getOneBranchAudioFileTX = function(tx) {\n\n\t\t\tvar query = \"SELECT _id, value, type FROM ec_branch_data WHERE form_id IN (SELECT _id FROM ec_branch_forms WHERE project_id=? AND has_media=?) AND type=? AND is_data_synced=? AND is_media_synced=? AND value<>? LIMIT 1\";\n\n\t\t\ttx.executeSql(query, [project_id, 1, EC.Const.AUDIO, 1, 0, \"\"], getOneBranchAudioFileSQLSuccess, EC.Select.errorCB);\n\n\t\t};\n\n\t\tvar getOneBranchAudioFileSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tif (the_result.rows.length > 0) {\n\t\t\t\taudio = the_result.rows.item(0);\n\t\t\t}\n\n\t\t};\n\n\t\tvar _getOneBranchAudioFileSuccessCB = function() {\n\n\t\t\tif (audio) {\n\t\t\t\tdeferred.resolve(audio);\n\t\t\t} else {\n\t\t\t\tdeferred.reject();\n\t\t\t}\n\n\t\t};\n\t\t\n\t\t/* Get an audio file to upload, data needs to be synced and media unsynced\n\t\t */\n\t\tmodule.getOneBranchAudioFile = function(the_project_id) {\n\n\t\t\tproject_id = the_project_id;\n\t\t\tdeferred = new $.Deferred();\n\t\t\taudio =null;\n\n\t\t\tEC.db.transaction(_getOneBranchAudioFileTX, EC.Select.errorCB, _getOneBranchAudioFileSuccessCB);\n\n\t\t\t// return promise to update ui when entry has/has not been found\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = (function (module) {\n    'use strict';\n\n    var branch_form_name;\n    var branch_form;\n    var upload_branch_forms;\n    var project_id;\n    var hierarchy_entry_key_value;\n    var branch_entry_values;\n    var branch_entry_key;\n    var branch_entry;\n    var deferred;\n    var self;\n\n    /**\n     *  @method _getOneEntryKeyTX Execute a query to get a single branch entry_key based on hierarchy_entry_key_value and NOT synced\n     */\n    var _getOneEntryKeyTX = function (tx) {\n\n        var query = '';\n\n        //select a single entry key\n        query += 'SELECT DISTINCT entry_key FROM ec_branch_data WHERE hierarchy_entry_key_value=? AND is_data_synced=? AND form_id IN (SELECT _id from ec_branch_forms WHERE name=? AND project_id=?) LIMIT 1';\n\n        tx.executeSql(query, [hierarchy_entry_key_value, 0, branch_form_name, project_id], _getOneEntryKeySQLSuccess, EC.Select.errorCB);\n\n    };\n\n    /**\n     *  _getOneEntryKeySQLSuccess : SQL success callback, the result will be always 1 single element containing 1 branch entry_key (or none)\n     */\n    var _getOneEntryKeySQLSuccess = function (the_tx, the_result) {\n\n        var iLength = the_result.rows.length;\n\n        //if a entry_key is found\n        if (iLength > 0) {\n\n            branch_entry_key = the_result.rows.item(0).entry_key;\n            branch_entry_values = [];\n\n            //get all the values for the branche entry key found\n            EC.db.transaction(_getOneBranchEntryTX, EC.Select.errorCB, _getOneBranchEntrySuccessCB);\n        } else {\n\n            //no unsynced branch entries for the current branch form, try next one (if any)\n            if (EC.Upload.branch_forms.length > 0) {\n\n                EC.Upload.current_branch_form = EC.Upload.branch_forms.shift();\n\n                self.getOneBranchEntry(project_id, EC.Upload.current_branch_form.name, false);\n\n            } else {\n\n                /* NO more unsynced branch entries: show feedback\n                 * check which action we were perfomorming, as the notification feedback has to be displayed only after an upload\n                 */\n\n                EC.Upload.action = (EC.Upload.action === EC.Const.BRANCH_RECURSION) ? EC.Upload.action = EC.Const.STOP_BRANCH_UPLOAD : EC.Const.START_BRANCH_UPLOAD;\n                EC.Upload.renderUploadViewFeedback(true);\n\n            }\n\n        }\n\n    };\n\n    /**\n     * _getOneBranchEntryTX : Select all the rows for a single branch entry key, not synced and belonging to the main entry_key specified\n     * to enforce uniqueness, we are also adding the form_id as we might have clashes across project, so let's avoid them\n     */\n    var _getOneBranchEntryTX = function (tx) {\n\n        var query = '';\n        query += 'SELECT _id, hierarchy_entry_key_ref, hierarchy_entry_key_value, ref, value, entry_key, type, created_on FROM ec_branch_data WHERE form_id IN ';\n        query += '(SELECT _id from ec_branch_forms WHERE name=? AND project_id=?) ';\n        query += 'AND is_data_synced=? AND hierarchy_entry_key_value=? AND entry_key=?';\n\n        tx.executeSql(query, [branch_form_name, project_id, 0, hierarchy_entry_key_value, branch_entry_key], _getOneBranchEntrySQLSuccess, EC.Select.errorCB);\n    };\n\n    /**\n     *  _getOneBranchEntrySQLSuccess SQL success callback, collecting all the values for a single branch entry to an array\n     */\n    var _getOneBranchEntrySQLSuccess = function (the_tx, the_result) {\n\n        var i;\n        var result = the_result;\n        var iLength = result.rows.length;\n        var ref;\n        var new_ref = '';\n        var location_ref = '';\n        var location_obj = {};\n        var location_string;\n        var parent_ref;\n        var path;\n        var values_counter = 0;\n\n        //build first branch entry\n        branch_entry = {\n            created_on: result.rows.item(0).created_on,\n            entry_key: result.rows.item(0).entry_key,\n            hierarchy_entry_key_ref: result.rows.item(0).hierarchy_entry_key_ref,\n            hierarchy_entry_key_value: result.rows.item(0).hierarchy_entry_key_value,\n            values: [{}]\n        };\n\n        console.log(result.rows.item(0));\n\n        //add all values for this entry\n        i = 0;\n        values_counter = 0;\n        //using a separate index for the entry values as each location value will be splitted into 4 components\n        while (i < iLength) {\n\n            //set empty object\n            branch_entry.values[values_counter] = {};\n\n            switch (result.rows.item(i).type) {\n\n                //TODO: add branc type;\n\n                case EC.Const.LOCATION:\n\n                    //split the location values to different parts (as expected on server)\n                    location_string = result.rows.item(i).value.replace('\\n', '').replace('\\r', '');\n\n                    //no location saved, so fill in with empty values\n                    if (location_string === '') {\n\n                        branch_entry.values[values_counter].ref = result.rows.item(i).ref + '_lat';\n                        branch_entry.values[values_counter].value = '';\n                        branch_entry.values[values_counter]._id = result.rows.item(i)._id;\n                        branch_entry.values[values_counter].type = result.rows.item(i).type;\n\n                        branch_entry.values[values_counter + 1] = {};\n                        branch_entry.values[values_counter + 1].ref = result.rows.item(i).ref + '_lon';\n                        branch_entry.values[values_counter + 1].value = '';\n                        branch_entry.values[values_counter + 1]._id = '';\n                        branch_entry.values[values_counter + 1].type = result.rows.item(i).type;\n\n                        branch_entry.values[values_counter + 2] = {};\n                        branch_entry.values[values_counter + 2].ref = result.rows.item(i).ref + '_acc';\n                        branch_entry.values[values_counter + 2].value = '';\n                        branch_entry.values[values_counter + 2]._id = '';\n                        branch_entry.values[values_counter + 2].type = result.rows.item(i).type;\n\n                        branch_entry.values[values_counter + 3] = {};\n                        branch_entry.values[values_counter + 3].ref = result.rows.item(i).ref + '_alt';\n                        branch_entry.values[values_counter + 3].value = '';\n                        branch_entry.values[values_counter + 3]._id = '';\n                        branch_entry.values[values_counter + 3].type = result.rows.item(i).type;\n\n                        branch_entry.values[values_counter + 4] = {};\n                        branch_entry.values[values_counter + 4].ref = result.rows.item(i).ref + '_bearing';\n                        branch_entry.values[values_counter + 4].value = '';\n                        branch_entry.values[values_counter + 4]._id = '';\n                        branch_entry.values[values_counter + 4].type = result.rows.item(i).type;\n                    } else {\n\n                        //get location object\n                        location_obj = EC.Utils.parseLocationString(location_string);\n\n                        branch_entry.values[values_counter].ref = result.rows.item(i).ref + '_lat';\n                        branch_entry.values[values_counter].value = location_obj.latitude;\n                        branch_entry.values[values_counter]._id = result.rows.item(i)._id;\n                        branch_entry.values[values_counter].type = result.rows.item(i).type;\n\n                        branch_entry.values[values_counter + 1] = {};\n                        branch_entry.values[values_counter + 1].ref = result.rows.item(i).ref + '_lon';\n                        branch_entry.values[values_counter + 1].value = location_obj.longitude;\n                        branch_entry.values[values_counter + 1]._id = '';\n                        branch_entry.values[values_counter + 1].type = result.rows.item(i).type;\n\n                        branch_entry.values[values_counter + 2] = {};\n                        branch_entry.values[values_counter + 2].ref = result.rows.item(i).ref + '_acc';\n                        branch_entry.values[values_counter + 2].value = location_obj.accuracy;\n                        branch_entry.values[values_counter + 2]._id = '';\n                        branch_entry.values[values_counter + 2].type = result.rows.item(i).type;\n\n                        branch_entry.values[values_counter + 3] = {};\n                        branch_entry.values[values_counter + 3].ref = result.rows.item(i).ref + '_alt';\n                        branch_entry.values[values_counter + 3].value = location_obj.altitude;\n                        branch_entry.values[values_counter + 3]._id = '';\n                        branch_entry.values[values_counter + 3].type = result.rows.item(i).type;\n\n                        branch_entry.values[values_counter + 4] = {};\n\n                        //heading on the server is called bearing\n                        branch_entry.values[values_counter + 4].ref = result.rows.item(i).ref + '_bearing';\n                        branch_entry.values[values_counter + 4].value = location_obj.heading;\n                        branch_entry.values[values_counter + 4]._id = '';\n                        branch_entry.values[values_counter + 4].type = result.rows.item(i).type;\n\n                    }\n\n                    //increase values_counter as we split the location value into 4 components\n                    values_counter += 4;\n\n                    break;\n\n                default:\n\n                    branch_entry.values[values_counter].ref = result.rows.item(i).ref;\n                    branch_entry.values[values_counter].value = result.rows.item(i).value;\n                    branch_entry.values[values_counter]._id = result.rows.item(i)._id;\n                    branch_entry.values[values_counter].type = result.rows.item(i).type;\n\n            }//switch\n\n            //increase counter for next value\n            values_counter++;\n            i++;\n\n        }//for\n\n    };\n\n    /**\n     * _getOneBranchEntrySuccessCB All values for a single branch entry collected, upload them\n     */\n    var _getOneBranchEntrySuccessCB = function () {\n\n        var branch_forms;\n\n        console.log('One branch entry');\n        console.log(branch_entry);\n\n        switch (EC.Upload.action) {\n\n            case EC.Const.START_BRANCH_UPLOAD:\n                if (branch_entry) {\n                    deferred.resolve(branch_entry);\n                } else {\n                    deferred.reject();\n                }\n                break;\n\n            case EC.Const.BRANCH_RECURSION:\n\n                //Upload entry\n                if (branch_entry) {\n\n                    EC.Upload.current_branch_entry = branch_entry;\n\n                    //if ($.isEmptyObject(EC.Upload.current_branch_form)) {\n                    //\n                    //}\n\n                    EC.Upload.prepareOneBranchEntry(EC.Upload.current_branch_form.name, EC.Upload.current_branch_entry);\n\n                } else {\n\n                    //TODO: no entry to upload, show upload success??\n                    EC.Upload.action = (EC.Upload.action === EC.Const.BRANCH_RECURSION) ? EC.Upload.action = EC.Const.STOP_BRANCH_UPLOAD : EC.Const.START_BRANCH_UPLOAD;\n                    EC.Upload.renderUploadViewFeedback(true);\n\n                }\n                break;\n\n        }\n\n    };\n\n    /**\n     * _getOneEntryKeySuccessCB\n     */\n    var _getOneEntryKeySuccessCB = function () {\n\n        console.log(JSON.stringify(branch_entry_key));\n\n    };\n\n    var _getOneHierarchyEntryKeyValueTX = function (tx) {\n\n        var query = 'SELECT DISTINCT hierarchy_entry_key_value FROM ec_branch_data WHERE is_data_synced=? AND form_id IN (SELECT _id from ec_branch_forms WHERE name=? AND project_id=?) LIMIT 1';\n\n        tx.executeSql(query, [0, branch_form_name, project_id], _getOneHierarchyEntryKeyValueSQLSuccess, EC.Select.errorCB);\n\n    };\n\n    var _getOneHierarchyEntryKeyValueSQLSuccess = function (the_tx, the_result) {\n\n        if (the_result.rows.length > 0) {\n            hierarchy_entry_key_value = the_result.rows.item(0).hierarchy_entry_key_value;\n        }\n\n    };\n\n    var _getOneHierarchyEntryKeyValueSuccessCB = function () {\n\n        if (hierarchy_entry_key_value) {\n\n            //TODO: get entry key\n\n            //get a single branch entry key\n            EC.db.transaction(_getOneEntryKeyTX, EC.Select.errorCB, _getOneEntryKeySuccessCB);\n\n        } else {\n\n            //no branch entries for this form, try with next one if any\n            if (EC.Upload.branch_forms.length > 0) {\n\n                EC.Upload.current_branch_form = EC.Upload.branch_forms.shift();\n                self.getOneBranchEntry(project_id, EC.Upload.current_branch_form.name);\n\n            } else {\n\n                /* NO more branch entries:\n                 */\n\n                if (EC.Upload.action === EC.Const.BRANCH_RECURSION) {\n                    EC.Upload.action = EC.Const.STOP_BRANCH_UPLOAD;\n                    EC.Upload.renderUploadViewFeedback(true);\n                }\n\n                if (EC.Upload.action === EC.Const.START_BRANCH_UPLOAD) {\n\n                    //deferred rejected?\n                    deferred.reject();\n\n                }\n\n            }\n\n        }\n\n    };\n\n    /**\n     * @method getOneBranchEntry Trigger a transaction to get 1 single branch entry key\n     * @param {Object} the_branch_form_name\n     * @param {Object} the_project_id\n     * @param {Object} the_hierarchy_entry_key_value\n     */\n    module.getOneBranchEntry = function (the_project_id, the_branch_form_name, is_called_from_view) {\n\n        self = this;\n        project_id = the_project_id;\n        branch_form_name = the_branch_form_name;\n        branch_entry = {};\n\n        /*\n         * if we are calling this method from  the upload view, bind a deferred object to resolve to that call\n         * This happens when the user loads the upload view and the first forms in the db do not have any entry to sync:\n         * the getOneBranchEntry is then called recursively until an entry is found but WITHOUT overriding the deferred object\n         */\n        if (is_called_from_view) {\n            deferred = new $.Deferred();\n        }\n\n        //get a single hierarchy_entry_key_value\n        EC.db.transaction(_getOneHierarchyEntryKeyValueTX, EC.Select.errorCB, _getOneHierarchyEntryKeyValueSuccessCB);\n\n        // return promise to update ui when entry has/has not been found\n        if (is_called_from_view) {\n            return deferred.promise();\n        }\n\n    };\n\n    return module;\n\n}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar project_id;\n\t\tvar deferred;\n\t\tvar media_type;\n\t\tvar file;\n\n\t\tvar _getOneBranchMediaFileTX = function(tx) {\n\n\t\t\tvar query = \"SELECT _id, value, type FROM ec_branch_data WHERE form_id IN (SELECT _id FROM ec_branch_forms WHERE project_id=? AND has_media=?) AND type=? AND is_data_synced=? AND is_media_synced=? AND value<>? LIMIT 1\";\n\n\t\t\ttx.executeSql(query, [project_id, 1, media_type, 1, 0, \"\"], getOneBranchMediaFileSQLSuccess, EC.Select.errorCB);\n\n\t\t};\n\n\t\tvar getOneBranchMediaFileSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tfile = the_result.rows.item(0);\n\n\t\t};\n\n\t\tvar _getOneBranchMediaFileSuccessCB = function() {\n\n\t\t\tif (file) {\n\t\t\t\tdeferred.resolve(file);\n\t\t\t} else {\n\t\t\t\tdeferred.reject();\n\t\t\t}\n\n\t\t};\n\n\t\tmodule.getOneBranchMediaFile = function(the_project_id, the_type) {\n\n\t\t\tproject_id = the_project_id;\n\t\t\tmedia_type = the_type;\n\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_getOneBranchMediaFileTX, EC.Select.errorCB, _getOneBranchMediaFileSuccessCB);\n\n\t\t\t// return promise to update ui when entry has/has not been found\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar project_id;\n\t\tvar forms = [];\n\t\tvar hierarchy_image;\n\t\tvar hierarchy_audio;\n\t\tvar hierarchy_video;\n\t\tvar branch_images = [];\n\t\tvar branch_audios = [];\n\t\tvar branch_videos = [];\n\t\tvar image;\n\t\tvar audio;\n\t\tvar video;\n\t\tvar deferred;\n\n\t\tvar _getOneHierarchyMediaPerTypeTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = forms.length;\n\t\t\tvar photo = EC.Const.PHOTO;\n\t\t\tvar audio = EC.Const.AUDIO;\n\t\t\tvar video = EC.Const.VIDEO;\n\n\t\t\t// branch_images.length = 0;\n\t\t\t// branch_audios.length = 0;\n\t\t\t// branch_videos.length = 0;\n\n\t\t\tvar hierarchy_query = 'SELECT _id, value, type FROM ec_data WHERE form_id IN (SELECT _id FROM ec_forms WHERE project_id=? AND has_media=?) AND type=? AND is_data_synced=? AND is_media_synced=? AND value<>? LIMIT 1';\n\n\t\t\t//var branch_query = 'SELECT _id, value, type FROM ec_branch_data WHERE form_id IN (SELECT _id FROM ec_branch_forms WHERE project_id=? AND has_media=?) AND (type=? OR type=? OR type=?) AND is_data_synced=? AND is_media_synced=? AND value<>? LIMIT 1';\n\n\t\t\ttx.executeSql(hierarchy_query, [project_id, 1, photo, 1, 0, \"\"], _getOneImageSQLSuccess, EC.Select.errorCB);\n\t\t\ttx.executeSql(hierarchy_query, [project_id, 1, audio, 1, 0, \"\"], _getOneAudioSQLSuccess, EC.Select.errorCB);\n\t\t\ttx.executeSql(hierarchy_query, [project_id, 1, video, 1, 0, \"\"], _getOneVideoSQLSuccess, EC.Select.errorCB);\n\n\t\t\t//tx.executeSql(branch_query, [project_id, 1, photo, video, audio, 1, 0, \"\"], _getBranchMediaSQLSuccess, EC.Select.errorCB);\n\n\t\t\tEC.Select.query_error_message = \"EC.SelectgetOneHierarchyMediaPerType() _getOneHierarchyMediaPerTypeTX\";\n\t\t};\n\n\t\tvar _getOneImageSQLSuccess = function(the_tx, the_result) {\n\n\t\t\t//check if have a row\n\t\t\tif (the_result.rows.length > 0) {\n\n\t\t\t\timage = the_result.rows.item(0);\n\n\t\t\t} else {\n\n\t\t\t\t//TODO: no hierarchy images found, try branches??\n\t\t\t}\n\n\t\t};\n\t\tvar _getOneAudioSQLSuccess = function(the_tx, the_result) {\n\n\t\t\t//check if have a row\n\t\t\tif (the_result.rows.length > 0) {\n\n\t\t\t\taudio = the_result.rows.item(0);\n\n\t\t\t} else {\n\n\t\t\t\t//TODO: no hierarchy audio found, try branches??\n\t\t\t}\n\n\t\t};\n\t\tvar _getOneVideoSQLSuccess = function(the_tx, the_result) {\n\n\t\t\t//check if have a row\n\t\t\tif (the_result.rows.length > 0) {\n\n\t\t\t\tvideo = the_result.rows.item(0);\n\n\t\t\t} else {\n\n\t\t\t\t//TODO: no hierarchy video found, try branches??\n\t\t\t}\n\n\t\t};\n\n\t\tvar _getOneHierarchyMediaPerTypeSuccessCB = function() {\n\n\t\t\t//resolve object with only files from hierarchy entries (if any)\n\t\t\tdeferred.resolve(image, audio, video);\n\n\t\t};\n\n\t\tmodule.getOneHierarchyMediaPerType = function(the_project_id) {\n\n\t\t\tproject_id = the_project_id;\n\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_getOneHierarchyMediaPerTypeTX, EC.Select.errorCB, _getOneHierarchyMediaPerTypeSuccessCB);\n\n\t\t\t// return promise to update ui when entry has/has not been found\n\t\t\treturn deferred.promise();\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar project_id;\n\t\tvar deferred;\n\t\tvar image;\n\n\t\tvar _getOneBranchPhotoFileTX = function(tx) {\n\n\t\t\tvar query = \"SELECT * FROM ec_branch_data WHERE form_id IN (SELECT _id FROM ec_branch_forms WHERE project_id=? AND has_media=?) AND type=? AND is_data_synced=? AND is_media_synced=? AND value<>? LIMIT 1\";\n\n\t\t\ttx.executeSql(query, [project_id, 1, EC.Const.PHOTO, 1, 0, \"\"], getOneBranchPhotoFileSQLSuccess, EC.Select.errorCB);\n\n\t\t};\n\n\t\tvar getOneBranchPhotoFileSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tif (the_result.rows.length > 0) {\n\t\t\t\timage = the_result.rows.item(0);\n\t\t\t}\n\n\t\t};\n\n\t\tvar _getOneBranchPhotoFileSuccessCB = function() {\n\n\t\t\tif (image) {\n\t\t\t\tconsole.log(image);\n\t\t\t\tdeferred.resolve(image);\n\t\t\t} else {\n\t\t\t\tdeferred.reject();\n\t\t\t}\n\n\t\t};\n\n\t\tmodule.getOneBranchPhotoFile = function(the_project_id) {\n\n\t\t\tproject_id = the_project_id;\n\t\t\timage = null;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_getOneBranchPhotoFileTX, EC.Select.errorCB, _getOneBranchPhotoFileSuccessCB);\n\n\t\t\t// return promise to update ui when entry has/has not been found\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar project_id;\n\t\tvar deferred;\n\t\tvar media_type;\n\t\tvar video;\n\n\t\tvar _getOneBranchVideoFileTX = function(tx) {\n\n\t\t\tvar query = \"SELECT _id, value, type FROM ec_branch_data WHERE form_id IN (SELECT _id FROM ec_branch_forms WHERE project_id=? AND has_media=?) AND type=? AND is_data_synced=? AND is_media_synced=? AND value<>? LIMIT 1\";\n\n\t\t\ttx.executeSql(query, [project_id, 1, EC.Const.VIDEO, 1, 0, \"\"], getOneBranchVideoFileSQLSuccess, EC.Select.errorCB);\n\n\t\t};\n\n\t\tvar getOneBranchVideoFileSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tif (the_result.rows.length > 0) {\n\t\t\t\tvideo = the_result.rows.item(0);\n\t\t\t}\n\n\t\t};\n\n\t\tvar _getOneBranchVideoFileSuccessCB = function() {\n\n\t\t\tif (video) {\n\t\t\t\tdeferred.resolve(video);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdeferred.reject();\n\t\t\t}\n\n\t\t};\n\t\t\n\t\t/* Get a video file to upload, data needs to be synced and media unsynced\n\t\t */\n\t\tmodule.getOneBranchVideoFile = function(the_project_id, the_type) {\n\n\t\t\tproject_id = the_project_id;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tvideo = null;\n\n\t\t\tEC.db.transaction(_getOneBranchVideoFileTX, EC.Select.errorCB, _getOneBranchVideoFileSuccessCB);\n\n\t\t\t// return promise to update ui when entry has/has not been found\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = (function (module) {\n    'use strict';\n\n    var self;\n    var project_id;\n    var form;\n    var entry;\n    var entry_key;\n    var deferred;\n    var hierarchy_entry_values;\n    var all_data_synced_on_start = false;\n\n    /**\n     * @method _getParentRef\n     * @param {String} the_child_form_name\n     *\n     * Passing a form name, get the parent ref and its value. It will be used to link the child to its parent on the server\n     *\n     * When passing the top form, false is returned which means no parent for the current form\n     */\n    var _getParentRef = function (the_form_name) {\n\n        var i;\n        var name = the_form_name;\n        var forms = JSON.parse(window.localStorage.forms);\n        var iLength = forms.length;\n\n        //check children only (skip first element, the top form)\n        for (i = 1; i < iLength; i++) {\n\n            if (forms[i].name === name) {\n\n                return forms[i - 1].key;\n            }\n\n        }\n\n        return false;\n\n    };\n\n    /**\n     *  @method _getOneEntryKeyTX Execute a query to get a single entry_key  NOT synced\n     */\n    var _getOneEntryKeyTX = function (tx) {\n\n        //select a single entry key\n        var query = 'SELECT DISTINCT entry_key FROM ec_data WHERE form_id=? AND is_data_synced=? LIMIT 1';\n\n        tx.executeSql(query, [form._id, 0], _getOneEntryKeySQLSuccess, EC.Select.errorCB);\n\n    };\n\n    var _getOneEntryKeySQLSuccess = function (the_tx, the_result) {\n\n        var iLength = the_result.rows.length;\n        var project_id = parseInt(window.localStorage.project_id, 10);\n\n        //if a entry_key is found\n        if (iLength > 0) {\n\n            //get all rows for this entry key\n            entry_key = the_result.rows.item(0).entry_key;\n            hierarchy_entry_values = [];\n\n            //get all the values for the hierarchy entry key found\n            EC.db.transaction(_getOneHierarchyEntryTX, EC.Select.errorCB, _getOneHierarchyEntrySuccessCB);\n\n        } else {\n\n            //no entries for this form  to upload, try next form (child) if any\n            if (EC.Upload.hierarchy_forms.length > 0) {\n\n                EC.Upload.current_form = EC.Upload.hierarchy_forms.shift();\n                self.getOneHierarchyEntry(EC.Upload.current_form);\n\n            } else {\n\n                /*No entries for any form: Hierarchy upload completed\n                 */\n\n                //if the project has NOT branches, all done, shoe feedback to user\n                if (!EC.Upload.has_branches) {\n\n                    if (EC.Upload.action === EC.Const.HIERARCHY_RECURSION) {\n                        EC.Upload.action = EC.Const.STOP_HIERARCHY_UPLOAD;\n                        EC.Upload.renderUploadViewFeedback(true);\n                    }\n\n                }\n\n                /* If triggered by the upload view, reject the deferred object triggered on the upload view by EC.Select.getOneHierarchyEntry();\n                 * as no hierarchy entries found. The fail callback will be handled by looking for branches (if any)\n                 * */\n                if (EC.Upload.action === EC.Const.START_HIERARCHY_UPLOAD) {\n                    deferred.reject();\n                }\n\n                //if it is a recursive call, it means we uploaded all the hierarchy entries and we have to upload all the branch entries\n                if (EC.Upload.action === EC.Const.HIERARCHY_RECURSION) {\n\n                    //switch to branch recursion to upload branch entries\n                    EC.Upload.action = EC.Const.BRANCH_RECURSION;\n\n                    //get branch forms for this project BEFORE tryng to look for a branch entry\n                    $.when(EC.Select.getBranchForms(project_id)).then(function (the_branch_forms) {\n\n                        EC.Upload.branch_forms = the_branch_forms;\n                        EC.Upload.current_branch_form = EC.Upload.branch_forms.shift();\n                        //get branch entry WITHOUT creating a deferred object, as we are uploading branch entries automatically, without binding to upload view buttons\n                        EC.Select.getOneBranchEntry(project_id, EC.Upload.current_branch_form.name, false);\n                    });\n                }\n\n            }\n        }\n\n    };\n\n    var _getOneHierarchyEntryTX = function (tx) {\n\n        var query = 'SELECT _id, entry_key, parent, value, type, ref, created_on FROM ec_data WHERE entry_key=? AND form_id=? AND is_data_synced=?';\n\n        tx.executeSql(query, [entry_key, form._id, 0], _getOneHierarchyEntrySQLSuccess, EC.Select.errorCB);\n\n        EC.Select.query_error_message = 'EC.Select.getOneHierarchyEntry _getOneHierarchyEntryTX';\n\n    };\n\n    var _getOneHierarchyEntrySQLSuccess = function (the_tx, the_result) {\n\n        var i;\n        var result = the_result;\n        var iLength = result.rows.length;\n        var ref;\n        var new_ref = '';\n        var location_ref = '';\n        var location_obj = {};\n        var location_string;\n        var parent_ref;\n        var path;\n        var values_counter = 0;\n\n        //build first entry\n        entry = {\n            created_on: result.rows.item(0).created_on,\n            entry_key: result.rows.item(0).entry_key,\n            values: [{}]\n        };\n\n        //if it is a child form, add parent @ref and its value as a parent obj\n        parent_ref = _getParentRef(form.name);\n\n        //if it is a child form, store parent ref\n        if (parent_ref) {\n\n            //get immediate parent value\n            entry.parent_ref = parent_ref;\n            path = (result.rows.item(0).parent).split(EC.Const.ENTRY_ROOT_PATH_SEPARATOR);\n            entry.parent_key_value = path[path.length - 1];\n        }\n\n        //add all values for this entry\n        i = 0;\n        values_counter = 0;\n        //using a separate index for the entry values as each location value will be splitted into 4 components\n        while (i < iLength) {\n\n            //set empty object\n            entry.values[values_counter] = {};\n\n            switch (result.rows.item(i).type) {\n\n                //TODO: add branc type;\n\n                case EC.Const.LOCATION:\n\n                    //split the location values to different parts (as expected on server)\n                    location_string = result.rows.item(i).value.replace('\\n', '').replace('\\r', '');\n\n                    //no location saved, so fill in with empty values\n                    if (location_string === '') {\n\n                        entry.values[values_counter].ref = result.rows.item(i).ref + '_lat';\n                        entry.values[values_counter].value = '';\n                        entry.values[values_counter]._id = result.rows.item(i)._id;\n                        entry.values[values_counter].type = result.rows.item(i).type;\n\n                        entry.values[values_counter + 1] = {};\n                        entry.values[values_counter + 1].ref = result.rows.item(i).ref + '_lon';\n                        entry.values[values_counter + 1].value = '';\n                        entry.values[values_counter + 1]._id = '';\n                        entry.values[values_counter + 1].type = result.rows.item(i).type;\n\n                        entry.values[values_counter + 2] = {};\n                        entry.values[values_counter + 2].ref = result.rows.item(i).ref + '_acc';\n                        entry.values[values_counter + 2].value = '';\n                        entry.values[values_counter + 2]._id = '';\n                        entry.values[values_counter + 2].type = result.rows.item(i).type;\n\n                        entry.values[values_counter + 3] = {};\n                        entry.values[values_counter + 3].ref = result.rows.item(i).ref + '_alt';\n                        entry.values[values_counter + 3].value = '';\n                        entry.values[values_counter + 3]._id = '';\n                        entry.values[values_counter + 3].type = result.rows.item(i).type;\n\n                        entry.values[values_counter + 4] = {};\n                        entry.values[values_counter + 4].ref = result.rows.item(i).ref + '_bearing';\n                        entry.values[values_counter + 4].value = '';\n                        entry.values[values_counter + 4]._id = '';\n                        entry.values[values_counter + 4].type = result.rows.item(i).type;\n                    } else {\n\n                        //get location object\n                        location_obj = EC.Utils.parseLocationString(location_string);\n\n                        entry.values[values_counter].ref = result.rows.item(i).ref + '_lat';\n                        entry.values[values_counter].value = location_obj.latitude;\n                        entry.values[values_counter]._id = result.rows.item(i)._id;\n                        entry.values[values_counter].type = result.rows.item(i).type;\n\n                        entry.values[values_counter + 1] = {};\n                        entry.values[values_counter + 1].ref = result.rows.item(i).ref + '_lon';\n                        entry.values[values_counter + 1].value = location_obj.longitude;\n                        entry.values[values_counter + 1]._id = '';\n                        entry.values[values_counter + 1].type = result.rows.item(i).type;\n\n                        entry.values[values_counter + 2] = {};\n                        entry.values[values_counter + 2].ref = result.rows.item(i).ref + '_acc';\n                        entry.values[values_counter + 2].value = location_obj.accuracy;\n                        entry.values[values_counter + 2]._id = '';\n                        entry.values[values_counter + 2].type = result.rows.item(i).type;\n\n                        entry.values[values_counter + 3] = {};\n                        entry.values[values_counter + 3].ref = result.rows.item(i).ref + '_alt';\n                        entry.values[values_counter + 3].value = location_obj.altitude;\n                        entry.values[values_counter + 3]._id = '';\n                        entry.values[values_counter + 3].type = result.rows.item(i).type;\n\n                        //heading on the server is called bearing\n                        entry.values[values_counter + 4] = {};\n                        entry.values[values_counter + 4].ref = result.rows.item(i).ref + '_bearing';\n                        entry.values[values_counter + 4].value = location_obj.heading;\n                        entry.values[values_counter + 4]._id = '';\n                        entry.values[values_counter + 4].type = result.rows.item(i).type;\n\n                    }\n\n                    //increase values_counter as we split the location value into 4 components\n                    values_counter += 4;\n\n                    break;\n\n                default:\n\n                    entry.values[values_counter].ref = result.rows.item(i).ref;\n\n                    //set skipped values as empty strings\n                    if (result.rows.item(i).value === EC.Const.SKIPPED) {\n                        entry.values[values_counter].value = '';\n                    } else {\n                        entry.values[values_counter].value = result.rows.item(i).value;\n                    }\n\n                    entry.values[values_counter]._id = result.rows.item(i)._id;\n                    entry.values[values_counter].type = result.rows.item(i).type;\n\n            }//switch\n\n            //increase counter for next value\n            values_counter++;\n            i++;\n\n        }//for\n\n    };\n\n    var _getOneHierarchyEntrySuccessCB = function () {\n\n        console.log('One entry');\n        console.log(entry);\n\n        switch (EC.Upload.action) {\n\n            case EC.Const.START_HIERARCHY_UPLOAD:\n                if (entry) {\n                    deferred.resolve(entry);\n                } else {\n                    deferred.reject();\n                }\n                break;\n\n            case EC.Const.HIERARCHY_RECURSION:\n\n                //Upload entry\n                if (entry) {\n                    EC.Upload.current_entry = entry;\n                    EC.Upload.prepareOneHierarchyEntry(EC.Upload.current_form.name, EC.Upload.current_entry);\n                } else {\n                    //TODO: no entry to upload, show upload success??\n                    console.log('no entry to upload');\n                }\n                break;\n        }\n    };\n\n    var _getOneEntryKeySuccessCB = function () {\n\n    };\n\n    module.getOneHierarchyEntry = function (the_form, is_called_from_view) {\n\n        self = this;\n        form = the_form;\n        entry = {};\n\n        if (is_called_from_view) {\n            deferred = new $.Deferred();\n        }\n\n        EC.db.transaction(_getOneEntryKeyTX, EC.Select.errorCB, _getOneEntryKeySuccessCB);\n\n        if (is_called_from_view) {\n            // return promise to update ui when entry has/has not been found\n            return deferred.promise();\n        }\n\n    };\n\n    return module;\n\n}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar project_id;\n\t\tvar deferred;\n\t\tvar media_type;\n\t\tvar file;\n\n\t\tvar _getOneHierarchyMediaFileTX = function(tx) {\n\n\t\t\tvar query = \"SELECT _id, value, type FROM ec_data WHERE form_id IN (SELECT _id FROM ec_forms WHERE project_id=? AND has_media=?) AND type=? AND is_data_synced=? AND is_media_synced=? AND value<>? LIMIT 1\";\n\n\t\t\ttx.executeSql(query, [project_id, 1, media_type, 1, 0, \"\"], getOneHierarchyMediaFileSQLSuccess, EC.Select.errorCB);\n\n\t\t};\n\n\t\tvar getOneHierarchyMediaFileSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tfile = the_result.rows.item(0);\n\n\t\t};\n\n\t\tvar _getOneHierarchyMediaFileSuccessCB = function() {\n\n\t\t\tif (file) {\n\t\t\t\tdeferred.resolve(file);\n\t\t\t} else {\n\t\t\t\tconsole.log(\"reject video upload\");\n\t\t\t\tdeferred.reject();\n\t\t\t}\n\n\t\t};\n\n\t\tmodule.getOneHierarchyMediaFile = function(the_project_id, the_type) {\n\n\t\t\tproject_id = the_project_id;\n\t\t\tmedia_type = the_type;\n\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_getOneHierarchyMediaFileTX, EC.Select.errorCB, _getOneHierarchyMediaFileSuccessCB);\n\n\t\t\t// return promise to update ui when entry has/has not been found\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar project_id;\n\t\tvar forms = [];\n\t\tvar hierarchy_image;\n\t\tvar hierarchy_audio;\n\t\tvar hierarchy_video;\n\t\tvar branch_images = [];\n\t\tvar branch_audios = [];\n\t\tvar branch_videos = [];\n\t\tvar image;\n\t\tvar audio;\n\t\tvar video;\n\t\tvar deferred;\n\n\t\tvar _getOneHierarchyMediaPerTypeTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = forms.length;\n\t\t\tvar hierarchy_query = 'SELECT _id, value, type FROM ec_data WHERE form_id IN (SELECT _id FROM ec_forms WHERE project_id=? AND has_media=?) AND type=? AND is_data_synced=? AND is_media_synced=? AND value<>? LIMIT 1';\n\n\t\t\ttx.executeSql(hierarchy_query, [project_id, 1, EC.Const.PHOTO, 1, 0, \"\"], _getOneImageSQLSuccess, EC.Select.errorCB);\n\t\t\ttx.executeSql(hierarchy_query, [project_id, 1, EC.Const.AUDIO, 1, 0, \"\"], _getOneAudioSQLSuccess, EC.Select.errorCB);\n\t\t\ttx.executeSql(hierarchy_query, [project_id, 1, EC.Const.VIDEO, 1, 0, \"\"], _getOneVideoSQLSuccess, EC.Select.errorCB);\n\n\t\t\tEC.Select.query_error_message = \"EC.SelectgetOneHierarchyMediaPerType() _getOneHierarchyMediaPerTypeTX\";\n\t\t};\n\n\t\tvar _getOneImageSQLSuccess = function(the_tx, the_result) {\n\n\t\t\t//check if have a row\n\t\t\tif (the_result.rows.length > 0) {\n\t\t\t\thierarchy_image = the_result.rows.item(0);\n\t\t\t} else {\n\t\t\t\t//TODO: no hierarchy images found, try branches??\n\t\t\t}\n\n\t\t};\n\n\t\tvar _getOneAudioSQLSuccess = function(the_tx, the_result) {\n\n\t\t\t//check if have a row\n\t\t\tif (the_result.rows.length > 0) {\n\t\t\t\thierarchy_audio = the_result.rows.item(0);\n\t\t\t} else {\n\t\t\t\t//TODO: no hierarchy audio found, try branches??\n\t\t\t}\n\t\t};\n\n\t\tvar _getOneVideoSQLSuccess = function(the_tx, the_result) {\n\n\t\t\t//check if have a row\n\t\t\tif (the_result.rows.length > 0) {\n\t\t\t\thierarchy_video = the_result.rows.item(0);\n\t\t\t} else {\n\t\t\t\t//TODO: no hierarchy video found, try branches??\n\t\t\t}\n\t\t};\n\n\t\tvar _getOneHierarchyMediaPerTypeSuccessCB = function() {\n\t\t\t//resolve object with only files from hierarchy entries (if any)\n\t\t\tdeferred.resolve(hierarchy_image, hierarchy_audio, hierarchy_video);\n\t\t};\n\n\t\tmodule.getOneHierarchyMediaPerType = function(the_project_id) {\n\n\t\t\tproject_id = the_project_id;\n\t\t\thierarchy_image = null;\n\t\t\thierarchy_audio = null;\n\t\t\thierarchy_video = null;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_getOneHierarchyMediaPerTypeTX, EC.Select.errorCB, _getOneHierarchyMediaPerTypeSuccessCB);\n\n\t\t\t// return promise to update ui when entry has/has not been found\n\t\t\treturn deferred.promise();\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Select = EC.Select || {};\nEC.Select = ( function(module) {\"use strict\";\n\n\t\tvar project_id;\n\t\tvar deferred;\n\t\tvar upload_URL;\n\n\t\tvar _getProjectURLTX = function(tx) {\n\n\t\t\tvar query = \"SELECT uploadToServer FROM ec_projects WHERE _id=?\";\n\n\t\t\ttx.executeSql(query, [project_id], getProjectURLSQLSuccess, EC.Select.errorCB);\n\n\t\t};\n\n\t\tvar getProjectURLSQLSuccess = function(the_tx, the_result) {\n\n\t\t\tvar result = the_result;\n\t\t\tupload_URL = result.rows.item(0).uploadToServer;\n\n\t\t};\n\n\t\tvar _getProjectURLSuccessCB = function() {\n\n\t\t\tEC.Upload.setUploadURL(upload_URL);\n\t\t\tdeferred.resolve(upload_URL);\n\n\t\t};\n\n\t\tmodule.getUploadURL = function(the_project_id) {\n\n\t\t\tproject_id = the_project_id;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_getProjectURLTX, EC.Select.errorCB, _getProjectURLSuccessCB);\n\n\t\t\t// return promise when upload url is found\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Select));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.Update = EC.Update || {};\nEC.Update = ( function(module) {\"use strict\";\n\n\t\tvar self;\n\t\tvar form_values;\n\t\tvar form_id;\n\t\tvar deferred;\n\n\t\tvar _insertFormValuesTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar query;\n\t\t\tvar obj;\n\t\t\tvar iLength = form_values.length;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\tquery = \"\";\n\t\t\t\tobj = form_values[i];\n\n\t\t\t\t//convert array to csv value (for checkboxes when multiple values are selected)\n\t\t\t\tif (Object.prototype.toString.call(obj.value) === '[object Array]') {\n\t\t\t\t\tobj.value = obj.value.join(', ');\n\t\t\t\t}\n\n\t\t\t\tquery = 'UPDATE ec_branch_data SET value=? WHERE _id=?';\n\n\t\t\t\ttx.executeSql(query, [obj.value, obj._id], _insertFormValuesSQLSuccessCB, _errorCB);\n\n\t\t\t}\n\t\t};\n\n\t\tvar _insertFormValuesSQLSuccessCB = function(the_tx, the_result) {\n\t\t};\n\n\t\tvar _insertFormValuesSuccessCB = function() {\n\t\t\tdeferred.resolve();\n\t\t};\n\n\t\tvar _errorCB = function(the_tx, the_result) {\n\t\t\tconsole.log(the_result);\n\t\t\tconsole.log(\"Error updating branch data\");\n\t\t\tdeferred.reject();\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t * @param {Object} the_form_values: the values to update\n\t\t */\n\t\tmodule.commitBranchForm = function(the_form_values) {\n\n\t\t\tform_values = the_form_values;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_insertFormValuesTX, _errorCB, _insertFormValuesSuccessCB);\n\n\t\t\treturn deferred.promise();\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Update));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Update = EC.Update || {};\nEC.Update = ( function(module) {\"use strict\";\n\n\t\tvar rows_deleted = [];\n\t\tvar deleted_entries = [];\n\t\tvar forms;\n\t\tvar self;\n\t\tvar deferred;\n\n\t\t//return the total of deleted entries (total of rows / number of inputs )\n\t\tvar _getDeletedTotal = function(the_form_id, the_rows_deleted, the_forms) {\n\n\t\t\tvar i;\n\t\t\tvar form_id = the_form_id;\n\t\t\tvar rows_deleted = the_rows_deleted;\n\t\t\tvar forms = the_forms;\n\t\t\tvar iLength = forms.length;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\tif (rows_deleted[i].form_id === form_id) {\n\t\t\t\t\treturn (rows_deleted[i].total_deleted / forms[i].total_inputs);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar _updateEntriesCountSuccessCB = function() {\n\t\t\tdeferred.resolve();\n\t\t};\n\n\t\tvar _updateEntriesCountTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = forms.length;\n\t\t\tvar total_deleted;\n\t\t\tvar query = \"\";\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\t//get total of entries deleted\n\t\t\t\ttotal_deleted = _getDeletedTotal(forms[i]._id, rows_deleted, forms);\n\t\t\t\tdeleted_entries.push(total_deleted);\n\t\t\t\tquery = 'UPDATE ec_forms SET entries = entries - ' + total_deleted + ' WHERE _id=?';\n\n\t\t\t\ttx.executeSql(query, [forms[i]._id], _onUpdateEntriesCountSQLSuccess, EC.Update.errorCB);\n\t\t\t}\n\n\t\t\t//store how many entries were deleted per each fomr in localStorage\n\t\t\twindow.localStorage.deleted_entries = JSON.stringify(deleted_entries);\n\n\t\t};\n\n\t\tvar _onUpdateEntriesCountSQLSuccess = function(the_tx, the_result) {\n\t\t\tconsole.log(the_result);\n\t\t};\n\n\t\tmodule.countSyncedDeleted = function(the_rows_deleted, the_forms) {\n\n\t\t\tself = this;\n\t\t\trows_deleted = the_rows_deleted;\n\t\t\tforms = the_forms;\n\t\t\tdeleted_entries.length = 0;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_updateEntriesCountTX, EC.Update.errorCB, _updateEntriesCountSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Update));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.Update = EC.Update || {};\nEC.Update = ( function(module) {\"use strict\";\n\n\t\tvar forms;\n\t\tvar project_id;\n\t\tvar has_branches;\n\t\tvar deferred;\n\n\t\tvar _emptyMediaValuesTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = forms.length;\n\t\t\tvar query = \"UPDATE ec_data SET value=? WHERE form_id=? AND (type=? OR type=? OR type=?)\";\n\t\t\tvar branch_query = \"\";\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\ttx.executeSql(query, [\"\", forms[i]._id, EC.Const.PHOTO, EC.Const.AUDIO, EC.Const.VIDEO], _emptyMediaValuesSQLSuccessCB, _emptyMediaValuesErrorCB);\n\n\t\t\t}//for\n\n\t\t\tif (has_branches) {\n\n\t\t\t\t//apparently SQLite does not support JOIN in UPDATE, so JOIN on SELECT\n\t\t\t\tbranch_query = \"UPDATE ec_branch_data SET value=? WHERE form_id IN (SELECT form_id FROM ec_branch_data JOIN ec_branch_forms WHERE ec_branch_data.form_id = ec_branch_forms._id AND ec_branch_forms.project_id=?) AND (type=? OR type=? OR type=?)\";\n\n\t\t\t\ttx.executeSql(branch_query, [\"\", project_id, EC.Const.PHOTO, EC.Const.AUDIO, EC.Const.VIDEO], _emptyBranchMediaValuesSQLSuccessCB, _emptyMediaValuesErrorCB);\n\t\t\t}\n\n\t\t};\n\n\t\tvar _emptyMediaValuesSQLSuccessCB = function(the_tx, the_result) {\n\t\t\tconsole.log(the_result);\n\t\t};\n\n\t\tvar _emptyBranchMediaValuesSQLSuccessCB = function(the_tx, the_result) {\n\t\t\tconsole.log(the_result);\n\t\t};\n\n\t\tvar _emptyMediaValuesSuccessCB = function() {\n\t\t\tdeferred.resolve();\n\t\t};\n\n\t\tvar _emptyMediaValuesErrorCB = function(the_tx, the_error) {\n\t\t\tconsole.log(EC.Const.TRANSACTION_ERROR);\n\t\t\tconsole.log(the_tx, the_error);\n\t\t\tdeferred.reject();\n\t\t};\n\n\t\tmodule.emptyMediaValues = function(the_hierarchy_forms, the_project_id) {\n\n\t\t\tforms = the_hierarchy_forms;\n\t\t\tproject_id = the_project_id;\n\t\t\thas_branches = EC.Utils.projectHasBranches();\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_emptyMediaValuesTX, _emptyMediaValuesErrorCB, _emptyMediaValuesSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Update));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true, stupid: true*/\n/*global $, jQuery*/\n\n/*\n * Set a single row is_media_synced value to 1 to indicate file has been synced to the server \n */\n\nvar EC = EC || {};\nEC.Update = EC.Update || {};\nEC.Update = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar row_id;\n\t\tvar is_branch_file;\n\t\tvar deferred;\n\n\t\tvar _flagOneFileAsSyncedTX = function(tx) {\n\n\t\t\tvar table = (is_branch_file) ? \"ec_branch_data\" : \"ec_data\";\n\t\t\tvar query = 'UPDATE ' + table + ' SET is_media_synced=? WHERE _id=?';\n\n\t\t\ttx.executeSql(query, [1, row_id], null, EC.Update.errorCB);\n\t\t};\n\n\t\tvar _flagOneFileAsSyncedSuccessCB = function() {\n\t\t\tdeferred.resolve();\n\t\t};\n\n\t\t//flag a single media row as synced on the local DB (for photo, video, audio)\n\t\tmodule.flagOneFileAsSynced = function(the_row_id, the_is_branch_file_flag) {\n\n\t\t\trow_id = the_row_id;\n\t\t\tis_branch_file = the_is_branch_file_flag;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_flagOneFileAsSyncedTX, EC.Update.errorCB, _flagOneFileAsSyncedSuccessCB);\n\n\t\t\treturn deferred.promise();\n\t\t};\n\n\t\treturn module;\n\t}(EC.Update));\n","var EC = EC || {};\nEC.Update = EC.Update || {};\nEC.Update = (function (module) {\n    'use strict';\n    //callback for a transaction error\n    module.errorCB = function (the_error) {\n        console.log(EC.Const.TRANSACTION_ERROR);\n        console.log('%c' + the_error.message, 'color: red');\n    };\n    return module;\n}(EC.Update));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true, stupid: true*/\n/*global $, jQuery*/\n\n/* @method setBranchEntryAsSynced\n * Set all the rows of a branch entry to synced, setting is_data_synced to 1\n * \n * @param {Array } the_branch_rows_to_sync\n * all the rows of a branch entry\n */\n\nvar EC = EC || {};\nEC.Update = EC.Update || {};\nEC.Update = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar branch_rows_to_sync;\n\t\tvar deferred;\n\t\tvar self;\n\n\t\tvar _updateDataSyncedFlagTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = branch_rows_to_sync.length;\n\t\t\tvar query;\n\t\t\tvar branch_form_name;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\tquery = 'UPDATE ec_branch_data SET is_data_synced=? WHERE _id=?';\n\t\t\t\ttx.executeSql(query, [1, branch_rows_to_sync[i]._id], null, self.errorCB);\n\t\t\t}\n\t\t};\n\n\t\tvar _updateDataSyncedFlagSuccessCB = function() {\n\t\t\tdeferred.resolve();\n\t\t};\n\n\t\tmodule.setBranchEntryAsSynced = function(the_branch_rows_to_sync) {\n\n\t\t\tself = this;\n\t\t\tbranch_rows_to_sync = the_branch_rows_to_sync;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_updateDataSyncedFlagTX, self.errorCB, _updateDataSyncedFlagSuccessCB);\n\n\t\t\treturn deferred.promise();\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Update));\n","/*jslint vars: true, nomen: true, plusplus: true*/\nvar EC = EC || {};\nEC.Update = EC.Update || {};\n\nEC.Update = ( function(module) {\n\n\t\tvar cached_branch_entry_keys = [];\n\t\tvar main_form_key_value;\n\t\tvar project_id;\n\t\tvar deferred;\n\n\t\tvar _updateStoredFlagTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar j;\n\t\t\tvar iLength;\n\t\t\tvar jLength;\n\t\t\tvar query;\n\t\t\tvar branch_form_name;\n\n\t\t\tiLength = cached_branch_entry_keys.length;\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\tbranch_form_name = cached_branch_entry_keys[i].branch_form_name;\n\t\t\t\tjLength = cached_branch_entry_keys[i].primary_keys.length;\n\n\t\t\t\tfor ( j = 0; j < jLength; j++) {\n\t\t\t\t\tquery = 'UPDATE ec_branch_data SET is_stored=? WHERE form_id IN (SELECT _id from ec_branch_forms WHERE name=? AND project_id=?) AND hierarchy_entry_key_value=? AND entry_key=?';\n\t\t\t\t\ttx.executeSql(query, [1, branch_form_name, project_id, main_form_key_value, cached_branch_entry_keys[i].primary_keys[j]], _updateStoredFlagSQLSuccess, _errorCB);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar _updateStoredFlagSuccessCB = function() {\n\t\t\tconsole.log(\"UPDATE BRANCH STORED FLAG  SUCCESS\");\n\t\t\t\n\t\t\t//All good, show positive feedback to user after insertion of new antry\n\t\t\tdeferred.resolve(main_form_key_value);\n\n\t\t};\n\n\t\tvar _updateStoredFlagSQLSuccess = function() {\n\t\t\tconsole.log(\"UPDATE BRANCH STORED FLAG SQL SUCCESS\");\n\t\t};\n\n\t\tvar _errorCB = function(the_tx, the_result) {\n\t\t\tconsole.log(the_result);\n\t\t\tdeferred.reject();\n\t\t};\n\n\t\t/*\n\t\t */\n\t\tmodule.setCachedBranchesAsStored = function(the_cached_branch_entry_keys, the_main_form_key_value, the_project_id) {\n\n\t\t\tcached_branch_entry_keys = the_cached_branch_entry_keys;\n\t\t\tmain_form_key_value = the_main_form_key_value;\n\t\t\tproject_id = the_project_id;\n\t\t\tdeferred = $.Deferred();\n\n\t\t\tEC.db.transaction(_updateStoredFlagTX, _errorCB, _updateStoredFlagSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Update));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true, stupid: true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Update = EC.Update || {};\nEC.Update = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar rows_to_sync;\n\t\tvar deferred;\n\t\tvar self;\n\n\t\tvar _updateDataSyncedFlagTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = rows_to_sync.length;\n\t\t\tvar query;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\t/* If the row is NOT a media entry, set both is_data_synced AND is_media_synced\n\t\t\t\t * to 1\n\t\t\t\t *\n\t\t\t\t * If the row is a media entry, i.e. of type audio, photo or video, AND its value\n\t\t\t\t * is NOT an empty string, it means there is a file to upload so set\n\t\t\t\t * _is_data_synced to 1 but keep is_media_sync to 0, as we need to upload and\n\t\t\t\t * sync files separately.\n\t\t\t\t */\n\n\t\t\t\tquery = 'UPDATE ec_data SET is_data_synced=? WHERE _id=?';\n\t\t\t\ttx.executeSql(query, [1, rows_to_sync[i]._id], null, self.errorCB);\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar _updateDataSyncedFlagSuccessCB = function() {\n\t\t\tdeferred.resolve();\n\t\t};\n\n\t\tmodule.setHierarchyEntryAsSynced = function(the_hierarchy_rows_to_sync) {\n\n\t\t\tself = this;\n\t\t\trows_to_sync = the_hierarchy_rows_to_sync;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_updateDataSyncedFlagTX, self.errorCB, _updateDataSyncedFlagSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Update));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Update = EC.Update || {};\nEC.Update = ( function(module) {\"use strict\";\n\n\t\tvar forms = [];\n\t\tvar deferred;\n\t\tvar has_branches;\n\t\tvar project_id;\n\n\t\tvar _unsyncAllEntriesTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = forms.length;\n\t\t\tvar branch_query;\n\n\t\t\tvar query = 'UPDATE ec_data SET is_data_synced=? WHERE form_id=?';\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\ttx.executeSql(query, [0, forms[i]._id], _unsyncAllEntriesSQLSuccess, _unsyncAllEntriesErrorCB);\n\t\t\t}\n\n\t\t\tif (has_branches) {\n\t\t\t\tvar branch_query = 'UPDATE ec_branch_data SET is_data_synced=? WHERE form_id IN (SELECT form_id FROM ec_branch_data JOIN ec_branch_forms WHERE ec_branch_data.form_id = ec_branch_forms._id AND ec_branch_forms.project_id=?)';\n\t\t\t\ttx.executeSql(branch_query, [0, project_id], _unsyncAllBranchEntriesSQLSuccess, _unsyncAllEntriesErrorCB);\n\t\t\t}\n\n\t\t};\n\n\t\tvar _unsyncAllEntriesSQLSuccess = function(the_tx, the_result) {\n\t\t\tconsole.log(\"Hierarchy entries \");\n\t\t\tconsole.log(the_result);\n\t\t};\n\n\t\tvar _unsyncAllBranchEntriesSQLSuccess = function(the_tx, the_result) {\n\t\t\tconsole.log(\"Branch entries \");\n\t\t\tconsole.log(the_result);\n\t\t};\n\n\t\tvar _unsyncAllEntriesSuccessCB = function() {\n\t\t\tdeferred.resolve();\n\t\t};\n\n\t\tvar _unsyncAllBrachEntriesSuccessCB = function() {\n\t\t\tdeferred.resolve();\n\t\t};\n\n\t\tvar _unsyncAllEntriesErrorCB = function(the_tx, the_result) {\n\t\t\tconsole.log(the_result);\n\t\t\tdeferred.reject();\n\t\t};\n\n\t\tmodule.unsyncAllEntries = function(the_forms, the_project_id) {\n\n\t\t\tforms = the_forms;\n\t\t\tproject_id = the_project_id;\n\t\t\thas_branches = EC.Utils.projectHasBranches();\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_unsyncAllEntriesTX, _unsyncAllEntriesErrorCB, _unsyncAllEntriesSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Update));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Update = EC.Update || {};\nEC.Update = ( function(module) {\"use strict\";\n\n\t\tvar rows_to_unsync;\n\t\tvar self;\n\t\tvar has_branches;\n\t\tvar branch_form_names;\n\t\tvar project_id;\n\t\tvar entry_key;\n\t\tvar deferred;\n\n\t\tvar _unsyncOneHierarchyEntryTX = function(tx) {\n\n\t\t\tvar update_query = 'UPDATE ec_data SET is_data_synced=? WHERE _id=?';\n\t\t\tvar i;\n\t\t\tvar iLength = rows_to_unsync.length;\n\n\t\t\t//unsync all rows\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\t//if we have branches, cache branch form names (if any, as the has_braches flag is at project level and we might not have branches for this hierarchy form)\n\t\t\t\tif (has_branches) {\n\n\t\t\t\t\tif (rows_to_unsync[i].type === EC.Const.BRANCH) {\n\n\t\t\t\t\t\tbranch_form_names.push(rows_to_unsync[i].value.branch_form_name);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttx.executeSql(update_query, [0, rows_to_unsync[i]._id], _unsyncOneHierarchyEntrySQLSuccess, _unsyncOneHierarchyEntryErrorCB);\n\t\t\t}\n\n\t\t};\n\n\t\tvar _unsyncOneHierarchyEntrySQLSuccess = function(the_tx, the_result) {\n\n\t\t\tconsole.log(the_result, false);\n\n\t\t};\n\n\t\tvar _unsyncOneHierarchyEntrySuccessCB = function() {\n\n\t\t\trows_to_unsync.length = 0;\n\n\t\t\t//TODO:unsync any branches for this hierarchy entry\n\t\t\tif (has_branches && branch_form_names.length > 0) {\n\t\t\t\tEC.db.transaction(_unsyncBranchEntriesTX, _unsyncOneHierarchyEntryErrorCB, _unsyncBranchEntriesSuccessCB);\n\t\t\t} else {\n\n\t\t\t\tdeferred.resolve();\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar _unsyncBranchEntriesTX = function(tx) {\n\n\t\t\tvar update_query = 'UPDATE ec_branch_data SET is_data_synced=? WHERE form_id IN (SELECT _id FROM ec_branch_forms WHERE name=? AND project_id=?) AND hierarchy_entry_key_value=?';\n\t\t\tvar i;\n\t\t\tvar iLength = branch_form_names.length;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\ttx.executeSql(update_query, [0, branch_form_names[i], project_id, entry_key], _unsyncBranchEntriesSQLSuccess, _unsyncOneHierarchyEntryErrorCB);\n\t\t\t}\n\n\t\t};\n\n\t\tvar _unsyncBranchEntriesSQLSuccess = function(the_tx, the_result) {\n\t\t};\n\n\t\tvar _unsyncBranchEntriesSuccessCB = function() {\n\t\t\tdeferred.resolve();\n\t\t};\n\n\t\tvar _unsyncOneHierarchyEntryErrorCB = function() {\n\t\t\tdeferred.reject();\n\t\t};\n\n\t\tmodule.unsyncOneHierarchyEntry = function(the_rows, the_entry_key, the_project_id) {\n\n\t\t\tself = this;\n\t\t\thas_branches = EC.Utils.projectHasBranches();\n\t\t\trows_to_unsync = the_rows;\n\t\t\tentry_key = the_entry_key;\n\t\t\tproject_id = the_project_id;\n\t\t\tbranch_form_names = [];\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_unsyncOneHierarchyEntryTX, _unsyncOneHierarchyEntryErrorCB, _unsyncOneHierarchyEntrySuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Update));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Update = EC.Update || {};\nEC.Update = ( function(module) {\n\t\t\"use strict\";\n\t\t\n\t\tvar self;\n\t\tvar form_id;\n\t\tvar deferred;\n\n\t\tmodule.updateCountersOnEntriesDownload = function(the_form_id) {\n\t\t\t\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tform_id = the_form_id;\n\t\t\n\t\t\tEC.db.transaction(_updateCountersOnEntriesDownloadTX, self.errorCB, _updateCountersOnEntriesDownloadCB);\n\n\t\t\treturn deferred.promise();\n\t\t};\n\n\t\tvar _updateCountersOnEntriesDownloadTX = function(tx) {\n\n\t\t\tvar query = 'UPDATE ec_forms SET entries = entries + ' + 1 + ' WHERE _id=?';\n\n\t\t\ttx.executeSql(query, [form_id], null, self.errorCB);\n\t\t};\n\n\t\tvar _updateCountersOnEntriesDownloadCB = function() {\n\t\t\tdeferred.resolve();\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Update));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Update = EC.Update || {};\nEC.Update = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar self;\n\t\tvar form_id;\n\t\tvar amount;\n\t\tvar forms_data_left;\n\t\tvar forms_data_restored = [];\n\t\tvar deferred;\n\t\tvar old_forms;\n\t\tvar current_form;\n\n\t\tmodule.updateCountersOnEntriesRestore = function(the_form_id, the_amount, the_forms_data_left) {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tform_id = the_form_id;\n\t\t\tamount = the_amount;\n\t\t\tforms_data_left = the_forms_data_left;\n\t\t\told_forms = JSON.parse(window.localStorage.forms);\n\t\t\tcurrent_form = old_forms.shift();\n\n\t\t\tforms_data_restored.push({\n\t\t\t\t_id : form_id,\n\t\t\t\tentries : amount,\n\t\t\t\thas_media : current_form.has_media,\n\t\t\t\tnum : current_form.num,\n\t\t\t\ttotal_inputs : current_form.total_inputs,\n\t\t\t\tname : current_form.name,\n\t\t\t\tis_active : current_form.is_active,\n\t\t\t\tkey : current_form.key\n\n\t\t\t});\n\n\t\t\twindow.localStorage.forms = JSON.stringify(old_forms);\n\n\t\t\tEC.db.transaction(_updateCountersOnEntriesRestoreTX, EC.Update.errorCB, _updateCountersOnEntriesRestoreSuccessCB);\n\n\t\t\treturn deferred.promise();\n\t\t};\n\n\t\tvar _updateCountersOnEntriesRestoreTX = function(tx) {\n\n\t\t\tvar query = 'UPDATE ec_forms SET entries = entries + ' + amount + ' WHERE _id=?';\n\n\t\t\ttx.executeSql(query, [form_id], null, EC.Update.errorCB);\n\t\t};\n\n\t\tvar _updateCountersOnEntriesRestoreSuccessCB = function() {\n\n\t\t\t//if we have nested forms, enter the next form data recursively\n\t\t\tif (forms_data_left.length > 0) {\n\t\t\t\tdeferred.reject(forms_data_left);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//restore successful, update forms in localStorage\n\t\t\t\twindow.localStorage.forms = JSON.stringify(forms_data_restored);\n\n\t\t\t\tforms_data_restored.length = 0;\n\t\t\t\t//reset total of entries\n\t\t\t\tamount = 0;\n\n\t\t\t\tdeferred.resolve();\n\t\t\t}\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Update));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.Update = EC.Update || {};\nEC.Update = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar self;\n\t\tvar form_id;\n\t\tvar entry_key;\n\n\t\tvar deferred;\n\n\t\tvar _updateCountersOnSingleBranchEntryInsertionTX = function(tx) {\n\n\t\t\tvar query = 'UPDATE ec_branch_forms SET entries = entries + ' + 1 + ' WHERE _id=?';\n\t\t\ttx.executeSql(query, [form_id], null, self.errorCB);\n\t\t};\n\n\t\tvar _updateCountersOnSingleBranchEntryInsertionSuccessCB = function() {\n\t\t\tdeferred.resolve(true, entry_key);\n\t\t};\n\n\t\tmodule.updateCountersOnSingleBranchEntryInsertion = function(the_entry_key, the_form_id) {\n\n\t\t\tself = this;\n\t\t\tentry_key = the_entry_key;\n\t\t\tform_id = the_form_id;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_updateCountersOnSingleBranchEntryInsertionTX, self.errorCB, _updateCountersOnSingleBranchEntryInsertionSuccessCB);\n\n\t\t\treturn deferred.promise();\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Update));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\n/* @method updateCountersOnSingleEntryDeletion\n *\n * This method recursively updates the entries counters per each form after a\n * single entry deletion (ec_form table)\n *\n * @param {the_counters} array of objects like:\n *\n * { amount: 3,\n *   form_id : 39\n * }\n *\n * where amount is the total of entries deleted for the form, identified by\n * form_id\n *\n */\n\nvar EC = EC || {};\nEC.Update = EC.Update || {};\nEC.Update = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar self;\n\t\tvar form;\n\t\tvar counters;\n\t\tvar row_id;\n\t\tvar amount;\n\t\tvar forms_data_left;\n\t\tvar deferred;\n\n\t\tvar _updateCountersOnSingleEntryDeletionSuccessCB = function() {\n\t\t\t\n\t\t\t//any more forms to update?\n\t\t\tif (counters.length > 0) {\n\n\t\t\t\tform = counters.shift();\n\n\t\t\t\t_doUpdate();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdeferred.resolve();\n\t\t\t}\n\n\t\t};\n\n\t\tvar _updateCountersOnSingleEntryDeletionTX = function(tx) {\n\n\t\t\tvar query = 'UPDATE ec_forms SET entries = entries + ' + amount + ' WHERE _id=?';\n\n\t\t\ttx.executeSql(query, [form.form_id], null, self.errorCB);\n\t\t};\n\n\t\tfunction _doUpdate() {\n\t\t\t\n\t\t\t//amount will be removed\n\t\t\tamount = -form.amount;\n\n\t\t\t//update forms in localStorage with the new total entries values\n\t\t\t//TODO, maybe not needed\n\t\t\tconsole.log(\"localstorage forms maybe need to be updated here\");\n\n\t\t\tEC.db.transaction(_updateCountersOnSingleEntryDeletionTX, self.errorCB, _updateCountersOnSingleEntryDeletionSuccessCB);\n\t\t}\n\n\n\t\tmodule.updateCountersOnSingleEntryDeletion = function(the_counters) {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tcounters = the_counters;\n\t\t\tform = counters.shift();\n\t\t\tamount = 0;\n\n\t\t\t_doUpdate();\n\n\t\t\treturn deferred.promise();\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Update));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\n/*\n * @method updateCountersOnSingleEntryInsertion\n * Update the total of entries for a\n * hierarchy form, after entering entries.\n * It also updates the total of branch\n * entries linked to a hierarchy entry if any\n *\n * @param {the_entry_key} the value of the primary key for the form (entry) just\n * entered\n * @param {the_form_id} the _id of the form in the database\n */\nvar EC = EC || {};\nEC.Update = EC.Update || {};\nEC.Update = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar self;\n\t\tvar form_id;\n\t\tvar entry_key;\n\t\tvar amount;\n\t\tvar deferred;\n\n\t\tmodule.updateCountersOnSingleEntryInsertion = function(the_entry_key, the_form_id) {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tentry_key = the_entry_key;\n\t\t\tform_id = the_form_id;\n\n\t\t\t//update entries counter for the appropriate form\n\t\t\tEC.Utils.updateFormsObj(form_id);\n\n\t\t\tEC.db.transaction(_updateCountersOnSingleEntryInsertionTX, self.errorCB, _updateCountersOnSingleEntryInsertionSuccessCB);\n\n\t\t\treturn deferred.promise();\n\t\t};\n\n\t\tvar _updateCountersOnSingleEntryInsertionTX = function(tx) {\n\n\t\t\tvar query = 'UPDATE ec_forms SET entries = entries + ' + 1 + ' WHERE _id=?';\n\n\t\t\ttx.executeSql(query, [form_id], null, self.errorCB);\n\t\t};\n\n\t\tvar _updateCountersOnSingleEntryInsertionSuccessCB = function() {\n\n\t\t\tvar project_id;\n\t\t\tvar cached_branch_entry_keys;\n\t\t\tvar branch_to_store;\n\t\t\tvar i;\n\t\t\tvar iLength;\n\n\t\t\t/* Hierarchy entry counter updated.\n\t\t\t *\n\t\t\t * If there are any branches set their rows \"is_stored\" flag to 1\n\t\t\t */\n\t\t\ttry {\n\t\t\t\tcached_branch_entry_keys = JSON.parse(window.localStorage.cached_branch_entry_keys);\n\n\t\t\t\tiLength = cached_branch_entry_keys.length;\n\t\t\t\tbranch_to_store = false;\n\n\t\t\t\t//do we have any branch form cached?\n\t\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\t\tif (cached_branch_entry_keys[i].primary_keys.length > 0) {\n\n\t\t\t\t\t\tbranch_to_store = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (branch_to_store) {\n\n\t\t\t\t\tproject_id = window.localStorage.project_id;\n\t\t\t\t\t$.when(EC.Update.setCachedBranchesAsStored(cached_branch_entry_keys, entry_key, project_id)).then(function(entry_key) {\n\t\t\t\t\t\tdeferred.resolve(entry_key);\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t//no branches\n\t\t\t\t\tdeferred.resolve(entry_key);\n\t\t\t\t}\n\t\t\t} catch(error) {\n\n\t\t\t\t//no branches to save, show positive feedback to user after insertion of new\n\t\t\t\t// entry\n\t\t\t\tdeferred.resolve(entry_key);\n\t\t\t}\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Update));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true, stupid: true*/\n/*global $, jQuery*/\n\n/* @method updateCountersOnSyncedEntriesDeletion\n * Update the total of entries locally stored for each form after deleteing all the synced entries for a project\n * \n * @param {Array} the_counters\n * \n * array of objects containing the amount of entries deleted per each form:\n * {form_id: <the_form_id>, amount: <the_amount>}\n */\nvar EC = EC || {};\nEC.Update = EC.Update || {};\nEC.Update = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar self;\n\t\tvar deferred;\n\t\tvar counters;\n\t\tvar deleted_entries;\n\n\t\tvar _updateCountersOnSyncedEntriesDeletionSuccessCB = function() {\n\t\t\tdeferred.resolve();\n\t\t};\n\n\t\tvar _updateCountersOnSyncedEntriesDeletionTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = counters.length;\n\t\t\tvar query;\n\t\t\t\n\t\t\t//loop and do a transaction per each form\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\tquery = 'UPDATE ec_forms SET entries = entries - ' + counters[i].amount + ' WHERE _id=?';\n\t\t\t\t\n\t\t\t\tdeleted_entries.push(counters[i].amount);\n\n\t\t\t\ttx.executeSql(query, [counters[i].form_id], null, self.errorCB);\n\t\t\t}\n\n\t\t\t//store how many entries were deleted per each form (to update counters in the dom after deletion)\n\t\t\twindow.localStorage.deleted_entries = JSON.stringify(deleted_entries);\n\n\t\t};\n\n\t\tmodule.updateCountersOnSyncedEntriesDeletion = function(the_counters) {\n\n\t\t\tself = this;\n\t\t\tcounters = the_counters;\n\t\t\tdeleted_entries =[];\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_updateCountersOnSyncedEntriesDeletionTX, self.errorCB, _updateCountersOnSyncedEntriesDeletionSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Update));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\n/**\n * Update a hierarchy entry in database; each value is a row in the table ec_data like:\n *\n * \"input_id\": 15,\n \"form_id\": 1,\n \"position\": 4,\n \"parent\": \"Imperial College\",\n \"value\": \"Mirko is great\",\n \"is_title\": 0,\n \"entry_key\": \"Biology\",\n \"type\": \"textarea\",\n \"is_synced\": 0\n *\n */\n\nvar EC = EC || {};\nEC.Update = EC.Update || {};\nEC.Update = ( function(module) {\"use strict\";\n\n\t\tvar self;\n\t\tvar form_values;\n\t\tvar form_id;\n\t\tvar deferred;\n\n\t\tvar _updateHierarchyEntryValuesSQLSuccessCB = function() {\n\t\t\tconsole.log(\"FORM VALUE EDITED SQL QUERY SUCCESS\");\n\t\t};\n\n\t\tvar _updateHierarchyEntryValuesTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = form_values.length;\n\t\t\tvar query = 'UPDATE ec_data SET value=? WHERE _id=?';\n\t\t\tvar obj;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\tobj = form_values[i];\n\t\t\t\t//convert array to csv value (for checkboxes when multiple values are selected)\n\t\t\t\tif (Object.prototype.toString.call(obj.value) === '[object Array]') {\n\t\t\t\t\tobj.value = obj.value.join(', ');\n\t\t\t\t}\n\t\t\t\ttx.executeSql(query, [obj.value, obj._id], _updateHierarchyEntryValuesSQLSuccessCB, _errorCB);\n\t\t\t}\n\t\t};\n\n\t\tvar _updateHierarchyEntryValuesSuccessCB = function() {\n\t\t\tconsole.log(\"FORM VALUES UPDATED SUCCESSFULLY\");\n\t\t\tdeferred.resolve();\n\t\t};\n\n\t\tvar _errorCB = function(the_tx, the_result) {\n\t\t\tconsole.log(the_result);\n\t\t\tdeferred.reject();\n\t\t};\n\n\t\tmodule.updateHierarchyEntryValues = function(the_form_values) {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tform_values = the_form_values;\n\t\t\tform_id = form_values[0].form_id;\n\n\t\t\tEC.db.transaction(_updateHierarchyEntryValuesTX, _errorCB, _updateHierarchyEntryValuesSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Update));\n","/*jslint vars: true, nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/**\n * @module EC\n * @submodule SetData\n */\n\nvar EC = EC || {};\nEC.Create = EC.Create || {};\nEC.Create = ( function(module) {\"use strict\";\n\n\t\tvar remote_entry;\n\t\tvar updated_entries_counter;\n\t\tvar local_entries_keys = [];\n\t\tvar inputs = [];\n\t\tvar project_id;\n\t\tvar form_id;\n\t\tvar entry_key_ref;\n\t\tvar full_parent_path;\n\t\tvar self;\n\t\tvar deferred;\n\t\tvar immediate_parent_key_value;\n\n\t\tvar _errorCB = function(the_tx, the_result) {\n\t\t\tconsole.log(the_tx);\n\t\t\tconsole.log(the_result);\n\t\t};\n\n\t\t/**\n\t\t * parseLocation() Convert a location json object to a single string concatenating the location components values\n\t\t */\n\t\tfunction _parseLocationObjToString(the_location_obj) {\n\n\t\t\tvar location_obj = the_location_obj;\n\t\t\tvar latitude = (location_obj.latitude === \"N/A\") ? \"\" : location_obj.latitude;\n\t\t\tvar longitude = (location_obj.longitude === \"N/A\") ? \"\" : location_obj.longitude;\n\t\t\tvar altitude = (location_obj.altitude === \"N/A\") ? \"\" : location_obj.altitude;\n\t\t\tvar accuracy = (location_obj.accuracy === \"N/A\") ? \"\" : location_obj.accuracy;\n\t\t\tvar bearing = (location_obj.bearing === \"N/A\") ? \"\" : location_obj.bearing;\n\n\t\t\treturn (//\n\t\t\t\t'Latitude: ' + latitude + ',\\n' + //\n\t\t\t\t'Longitude: ' + longitude + ',\\n' + //\n\t\t\t\t'Altitude: ' + altitude + ',\\n' + //\n\t\t\t\t'Accuracy: ' + accuracy + ',\\n' + //\n\t\t\t\t'Altitude Accuracy: ' + \" \" + ',\\n' + //\n\t\t\t\t'Heading: ' + bearing + '\\n');\n\t\t\t//\n\t\t}\n\n\t\t//get all primary key for local entries and all the inputs for the project\n\t\tvar _getFormLocalDataTX = function(tx) {\n\n\t\t\tvar query_entry_key = \"SELECT DISTINCT entry_key FROM ec_data WHERE form_id=?\";\n\t\t\tvar query_inputs = 'SELECT * FROM ec_inputs WHERE form_id=? ORDER BY position';\n\n\t\t\ttx.executeSql(query_entry_key, [form_id], _getFormPrimaryKeysSQLSuccessCB, self.errorCB);\n\t\t\ttx.executeSql(query_inputs, [form_id], _getFormInputsSQLSuccessCB, self.errorCB);\n\n\t\t};\n\n\t\t//fill in array with all the inputs for this form\n\t\tvar _getFormInputsSQLSuccessCB = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = the_result.rows.length;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\tinputs.push(the_result.rows.item(i));\n\t\t\t}\n\n\t\t\twindow.localStorage.dre_inputs = JSON.stringify(inputs);\n\n\t\t};\n\n\t\t//fill in array with all the local entry keys\n\t\tvar _getFormPrimaryKeysSQLSuccessCB = function(the_tx, the_result) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = the_result.rows.length;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\tlocal_entries_keys.push(the_result.rows.item(i).entry_key);\n\t\t\t}\n\n\t\t\twindow.localStorage.dre_local_entries_keys = JSON.stringify(local_entries_keys);\n\n\t\t};\n\n\t\t//insert all the values for a single entry\n\t\tfunction _insertEntryValues(the_inputs, the_tx, the_immediate_parent_key_value, the_current_remote_entry, the_current_remote_entry_key, the_current_remote_timestamp) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = the_inputs.length;\n\t\t\tvar query;\n\t\t\tvar ref;\n\t\t\tvar obj;\n\t\t\tvar location_obj;\n\t\t\tvar latitude;\n\t\t\tvar longitude;\n\t\t\tvar altitude;\n\t\t\tvar accuracy;\n\t\t\tvar bearing;\n\t\t\tvar tx = the_tx;\n\t\t\tvar immediate_parent_key_value = the_immediate_parent_key_value;\n\t\t\tvar current_remote_entry = the_current_remote_entry;\n\t\t\tvar current_remote_entry_key = the_current_remote_entry_key;\n\t\t\tvar current_remote_timestamp = the_current_remote_timestamp;\n\t\t\tvar remote_ref_value;\n\t\t\tvar remote_ref_value_location;\n\n\t\t\t//loop all the input fields\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\tref = inputs[i].ref;\n\n\t\t\t\t//per each ref, check if the remote entry has a value\n\t\t\t\tif (current_remote_entry.hasOwnProperty(ref)) {\n\n\t\t\t\t\t//location object needs to be converted to string\n\t\t\t\t\tif ( typeof (current_remote_entry[ref]) === \"string\") {\n\t\t\t\t\t\tremote_ref_value = current_remote_entry[ref];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//location is a json object listing the components, so convert it to string\n\t\t\t\t\t\tlocation_obj = current_remote_entry[ref];\n\t\t\t\t\t\tremote_ref_value_location = _parseLocationObjToString(location_obj);\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\t//the current input ref is not part of the downloaded data set therefore set it to an empty string\n\t\t\t\t\tremote_ref_value = \"\";\n\t\t\t\t}\n\n\t\t\t\t//build query to insert values\n\n\t\t\t\tquery = \"\";\n\t\t\t\tobj = inputs[i];\n\n\t\t\t\tquery += 'INSERT INTO ec_data (';\n\t\t\t\tquery += 'input_id, ';\n\t\t\t\tquery += 'form_id, ';\n\t\t\t\tquery += 'position, ';\n\t\t\t\tquery += 'parent, ';\n\t\t\t\tquery += 'label, ';\n\t\t\t\tquery += 'ref, ';\n\t\t\t\tquery += 'value, ';\n\t\t\t\tquery += 'is_title, ';\n\t\t\t\tquery += 'entry_key, ';\n\t\t\t\tquery += 'type, ';\n\t\t\t\tquery += 'created_on, ';\n\t\t\t\tquery += 'is_remote, ';\n\t\t\t\tquery += 'is_data_synced, ';\n\t\t\t\tquery += 'is_media_synced) ';\n\t\t\t\tquery += 'VALUES (\"';\n\t\t\t\tquery += obj._id + '\", \"';\n\t\t\t\tquery += form_id + '\", \"';\n\t\t\t\tquery += obj.position + '\", \"';\n\t\t\t\tquery += immediate_parent_key_value + '\", \"';\n\t\t\t\tquery += obj.label + '\", \"';\n\t\t\t\tquery += ref + '\", \"';\n\t\t\t\tquery += remote_ref_value + '\", \"';\n\t\t\t\tquery += obj.is_title + '\", \"';\n\t\t\t\tquery += current_remote_entry_key + '\", \"';\n\t\t\t\tquery += obj.type + '\", \"';\n\t\t\t\tquery += current_remote_timestamp + '\", \"';\n\t\t\t\tquery += 1 + '\", \"';\n\t\t\t\tquery += 1 + '\", \"';\n\t\t\t\tquery += 1 + '\");';\n\t\t\t\ttx.executeSql(query, [], _insertNewRowSQLSuccessCB, _errorCB);\n\n\t\t\t}//for all input fields\n\n\t\t}\n\n\t\t//insert values for top parent form\n\t\tvar _insertTopFormValuesTX = function(tx) {\n\n\t\t\tvar current_remote_entry = remote_entry;\n\t\t\tvar current_remote_entry_key = current_remote_entry[entry_key_ref];\n\t\t\tvar current_remote_timestamp = current_remote_entry.created;\n\n\t\t\t//insert entry values\n\t\t\t_insertEntryValues(inputs, tx, immediate_parent_key_value, current_remote_entry, current_remote_entry_key, current_remote_timestamp);\n\n\t\t};\n\n\t\t//insert values for one of the child forms\n\t\tvar _insertChildFormValuesTX = function(tx) {\n\n\t\t\tvar current_remote_entry = remote_entry;\n\t\t\tvar current_remote_entry_key = current_remote_entry[entry_key_ref];\n\t\t\tvar current_remote_timestamp = current_remote_entry.created;\n\n\t\t\t//insert entry values\n\t\t\t_insertEntryValues(inputs, tx, immediate_parent_key_value, current_remote_entry, current_remote_entry_key, current_remote_timestamp);\n\t\t};\n\n\t\t//A local entry with the same key is stored on the local database, so we have to update its values with the remote ones\n\t\tvar _updateLocalRowWithRemoteTX = function(tx) {\n\n\t\t\tvar current_remote_entry = remote_entry;\n\t\t\tvar current_remote_entry_key = current_remote_entry[entry_key_ref];\n\t\t\tvar current_remote_timestamp = current_remote_entry.created;\n\t\t\tvar ref;\n\t\t\tvar input_id;\n\t\t\tvar i;\n\t\t\tvar iLength = inputs.length;\n\t\t\tvar location_obj;\n\t\t\tvar remote_ref_value;\n\t\t\tvar remote_ref_value_location;\n\t\t\tvar query;\n\n\t\t\t//loop all the input fields\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\t//get local input _id and ref\n\t\t\t\tref = inputs[i].ref;\n\t\t\t\tinput_id = inputs[i]._id;\n\n\t\t\t\t//per each ref, check if the remote entry has a value\n\t\t\t\tif (current_remote_entry.hasOwnProperty(ref)) {\n\n\t\t\t\t\t//check if the current remote entry is a location object or not\n\t\t\t\t\tif ( typeof (current_remote_entry[ref]) === \"string\") {\n\t\t\t\t\t\tremote_ref_value = current_remote_entry[ref];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//location is a json object listing the components, so convert it to string\n\t\t\t\t\t\tlocation_obj = current_remote_entry[ref];\n\t\t\t\t\t\tremote_ref_value_location = _parseLocationObjToString(location_obj);\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//the current input ref is not part of the downloaded data set therefore set it to an empty string\n\t\t\t\t\tremote_ref_value = \"\";\n\t\t\t\t}\n\n\t\t\t\tquery = 'UPDATE ec_data SET value=?, is_remote=? WHERE form_id=? AND input_id=? AND entry_key=?';\n\t\t\t\ttx.executeSql(query, [remote_ref_value, 1, form_id, input_id, current_remote_entry_key], _updateLocalRowWithRemoteSQLSuccessCB, self.errorCB);\n\n\t\t\t}//for each input field\n\n\t\t};\n\n\t\tvar _updateLocalRowWithRemoteSQLSuccessCB = function(the_tx, the_result) {\n\n\t\t};\n\n\t\t//update entries counter for the current form (adding new entry, + 1)\n\t\tvar _updateLocalRowWithRemoteSuccessCB = function(tx) {\n\t\t\tdeferred.resolve();\n\t\t};\n\n\n\t\tvar _getFormLocalDataSuccessCB = function() {\n\n\t\t\tvar current_remote_entry = remote_entry;\n\t\t\tvar current_remote_entry_key = current_remote_entry[entry_key_ref];\n\t\t\tvar current_remote_timestamp = current_remote_entry.created;\n\t\t\tvar form_tree = JSON.parse(window.localStorage.form_tree);\n\t\t\tvar parent_form_name = form_tree.pname;\n\t\t\tvar immediate_parent_form;\n\t\t\tvar hierarchy_entry_key_value_ref;\n\n\t\t\t//check if the currenty entry match a primary key of a local entry\n\t\t\tif (EC.Utils.inArray(local_entries_keys, current_remote_entry_key)) {\n\n\t\t\t\t//update existing row\n\t\t\t\tconsole.log(\"***********************************************************  update \" + current_remote_entry_key);\n\n\t\t\t\t//TODO: we have a match: update existing row\n\t\t\t\tEC.db.transaction(_updateLocalRowWithRemoteTX, _errorCB, _updateLocalRowWithRemoteSuccessCB);\n\t\t\t} else {\n\n\t\t\t\t//check parent first, then trigger different transaction based on parenting\n\t\t\t\t//insert new row\n\t\t\t\tconsole.log(\"***********************************************************  insert \" + current_remote_entry_key);\n\n\t\t\t\t//manage parenting and form tree: if parent_name is \"\" we are entering data for top form so immediate_parent_key_value is set to \"\"\n\t\t\t\tif (parent_form_name === \"\") {\n\n\t\t\t\t\timmediate_parent_key_value = \"\";\n\n\t\t\t\t\t//TODO: insert top parent form values\n\t\t\t\t\tEC.db.transaction(_insertTopFormValuesTX, _errorCB, _insertTopFormValuesSuccessCB);\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//child form therefore use parent entry key value from downloaded data\n\t\t\t\t\thierarchy_entry_key_value_ref = EC.Utils.getFormParentPrimaryKeyRef(form_id);\n\t\t\t\t\timmediate_parent_key_value = current_remote_entry[hierarchy_entry_key_value_ref];\n\t\t\t\t\timmediate_parent_form = EC.Utils.getParentFormByChildID(form_id);\n\n\t\t\t\t\t//TODO: can we cache the full parent path (or part of it) to improve performance?\n\t\t\t\t\t$.when(EC.Select.getFullParentPath(immediate_parent_form._id, immediate_parent_key_value)).then(function(the_full_parent_path) {\n\n\t\t\t\t\t\t//build full parent path in the form key|key|key....\n\t\t\t\t\t\tif (the_full_parent_path !== \"\") {\n\t\t\t\t\t\t\timmediate_parent_key_value = the_full_parent_path + \"|\" + immediate_parent_key_value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tEC.db.transaction(_insertChildFormValuesTX, _errorCB, _insertChildFormValuesSuccessCB);\n\n\t\t\t\t\t}, function() {\n\t\t\t\t\t\t//no parent key found on the device, warn user\n\t\t\t\t\t\tdeferred.reject();\n\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar _insertNewRowSQLSuccessCB = function(the_tx, the_result) {\n\t\t\tconsole.log(\"INSERT REMOTE ENTRY SUCCESS\");\n\t\t\tconsole.log(JSON.stringify(the_result));\n\t\t};\n\n\t\tvar _insertTopFormValuesSuccessCB = function(the_tx, the_result) {\n\n\t\t\t//update entries counter for the current form (adding new entry, + 1)\n\t\t\t$.when(EC.Update.updateCountersOnEntriesDownload(form_id)).then(function() {\n\t\t\t\tdeferred.resolve();\n\t\t\t});\n\n\t\t};\n\n\t\tvar _insertChildFormValuesSuccessCB = function(the_tx, the_result) {\n\n\t\t\t//update entries counter for the current form (adding new entry, + 1)\n\t\t\t$.when(EC.Update.updateCountersOnEntriesDownload(form_id)).then(function() {\n\t\t\t\tdeferred.resolve();\n\t\t\t});\n\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t * @param {Object} the_project_id\n\t\t * @param {Object} the_form_id\n\t\t * @param {Object} the_remote_entry\n\t\t *\n\t\t * @method commitRemoteEntry Commit a remote entry, insert it if a new one, otherwise update existing one on device as entries on the server overrides local entries\n\t\t */\n\t\tmodule.commitRemoteEntry = function(the_project_id, the_form_id, the_remote_entry) {\n\n\t\t\tproject_id = the_project_id;\n\t\t\tform_id = the_form_id;\n\t\t\tremote_entry = the_remote_entry;\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tentry_key_ref = EC.Utils.getFormPrimaryKeyRef(form_id);\n\n\t\t\t//reset array (we might have keys from a previous download)\n\t\t\tlocal_entries_keys.length = 0;\n\t\t\t//reset counter\n\t\t\tupdated_entries_counter = 0;\n\t\t\t//reset inputs array\n\t\t\tinputs.length = 0;\n\n\t\t\tif (!window.localStorage.dre_local_entries_keys && !window.localStorage.dre_inputs) {\n\n\t\t\t\t//get all local primary keys and inputs for the current form before saving the new entries\n\t\t\t\tEC.db.transaction(_getFormLocalDataTX, _errorCB, _getFormLocalDataSuccessCB);\n\t\t\t} else {\n\n\t\t\t\t//local primary keys and inputs are cached, no need to query db\n\t\t\t\t//TODO\n\t\t\t\tlocal_entries_keys = JSON.parse(window.localStorage.dre_local_entries_keys);\n\t\t\t\tinputs = JSON.parse(window.localStorage.dre_inputs);\n\n\t\t\t\t_getFormLocalDataSuccessCB();\n\t\t\t}\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Create));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/**\n * @module EC\n * @submodule Create\n *\n */\n\nvar EC = EC || {};\nEC.Create = EC.Create || {};\nEC.Create = ( function(module) {\"use strict\";\n\n\t\tvar branch_rows;\n\t\tvar deferred;\n\t\tvar mapped_branch_forms;\n\t\tvar mapped_input_ids;\n\n\t\tvar _getLocalBranchFormID = function(the_name) {\n\n\t\t\tvar i;\n\t\t\tvar _id;\n\n\t\t\tfor ( i = 0; i < mapped_branch_forms.length; i++) {\n\n\t\t\t\tif (mapped_branch_forms[i].name === the_name) {\n\n\t\t\t\t\t_id = mapped_branch_forms[i]._id;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn _id;\n\n\t\t};\n\n\t\tvar _getLocalBranchInputID = function(the_ref) {\n\n\t\t\tvar i;\n\t\t\tvar _id;\n\n\t\t\tfor ( i = 0; i < mapped_input_ids.length; i++) {\n\n\t\t\t\tif (mapped_input_ids[i].ref === the_ref) {\n\n\t\t\t\t\t_id = mapped_input_ids[i]._id;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn _id;\n\n\t\t};\n\n\t\tvar _insertBranchDataRowsTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = branch_rows.length;\n\t\t\tvar query = \"\";\n\t\t\tvar obj = {};\n\t\t\tvar local_branch_form_id;\n\t\t\tvar local_branch_input_id;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\tquery = \"\";\n\t\t\t\tobj = branch_rows[i];\n\n\t\t\t\t//use current local ids for forms and inputs to match the foreign key constraint\n\t\t\t\tlocal_branch_form_id = _getLocalBranchFormID(obj.name);\n\t\t\t\tlocal_branch_input_id = _getLocalBranchInputID(obj.ref);\n\n\t\t\t\tquery += 'INSERT INTO ec_branch_data (';\n\t\t\t\tquery += 'input_id, ';\n\t\t\t\tquery += 'form_id, ';\n\t\t\t\tquery += 'hierarchy_entry_key_ref, ';\n\t\t\t\tquery += 'hierarchy_entry_key_value, ';\n\t\t\t\tquery += 'position, ';\n\t\t\t\tquery += 'label, ';\n\t\t\t\tquery += 'ref, ';\n\t\t\t\tquery += 'value, ';\n\t\t\t\tquery += 'is_title, ';\n\t\t\t\tquery += 'entry_key, ';\n\t\t\t\tquery += 'type, ';\n\t\t\t\tquery += 'is_data_synced, ';\n\t\t\t\tquery += 'is_media_synced, ';\n\t\t\t\tquery += 'is_cached, ';\n\t\t\t\tquery += 'is_stored, ';\n\t\t\t\tquery += 'created_on, ';\n\t\t\t\tquery += 'is_remote) ';\n\t\t\t\tquery += 'VALUES (\"';\n\t\t\t\tquery += local_branch_input_id + '\", \"';\n\t\t\t\tquery += local_branch_form_id + '\", \"';\n\t\t\t\tquery += obj.hierarchy_entry_key_ref + '\", \"';\n\t\t\t\tquery += obj.hierarchy_entry_key_value + '\", \"';\n\t\t\t\tquery += obj.position + '\", \"';\n\t\t\t\tquery += obj.label + '\", \"';\n\t\t\t\tquery += obj.ref + '\", \"';\n\t\t\t\tquery += obj.value + '\", \"';\n\t\t\t\tquery += obj.is_title + '\", \"';\n\t\t\t\tquery += obj.entry_key + '\", \"';\n\t\t\t\tquery += obj.type + '\", \"';\n\t\t\t\tquery += obj.is_data_synced + '\", \"';\n\t\t\t\tquery += obj.is_media_synced + '\", \"';\n\t\t\t\tquery += obj.is_cached + '\", \"';\n\t\t\t\tquery += obj.is_stored + '\", \"';\n\t\t\t\tquery += obj.created_on + '\", \"';\n\t\t\t\tquery += obj.remote_flag + '\");';\n\n\t\t\t\ttx.executeSql(query, [], _insertBranchFormValuesSQLSuccessCB, _errorCB);\n\t\t\t}\n\n\t\t};\n\n\t\tvar _insertBranchFormValuesSQLSuccessCB = function(the_tx, the_result) {\n\t\t\tconsole.log(the_result);\n\t\t};\n\n\t\tvar _insertBranchDataRowsSuccessCB = function() {\n\t\t\tdeferred.resolve();\n\t\t};\n\n\t\tvar _errorCB = function(the_tx, the_result) {\n\t\t\tconsole.log(the_result);\n\t\t};\n\n\t\tmodule.insertBranchDataRows = function(the_branch_forms_data, the_mapped_branch_forms, the_mapped_input_ids) {\n\n\t\t\tbranch_rows = the_branch_forms_data.branch_data_rows;\n\t\t\tmapped_branch_forms = the_mapped_branch_forms;\n\t\t\tmapped_input_ids = the_mapped_input_ids;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_insertBranchDataRowsTX, _errorCB, _insertBranchDataRowsSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Create));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/**\n * @module EC\n * @submodule Create\n *\n */\n\nvar EC = EC || {};\nEC.Create = EC.Create || {};\nEC.Create = ( function(module) {\"use strict\";\n\n\t\tvar self;\n\t\tvar branch_form_values = [];\n\t\tvar branch_forms_data = [];\n\t\tvar entries = [];\n\t\tvar entry_key;\n\t\tvar local_branch_form_id;\n\t\tvar branch_form_total_entries;\n\t\tvar deferred;\n\n\t\t//callback for a transaction error\n\t\tvar _errorCB = function(the_tx, the_result) {\n\t\t\tconsole.log(EC.Utils.TRANSACTION_ERROR);\n\t\t\tconsole.log(the_result);\n\t\t};\n\n\t\tvar _insertBranchFormValuesTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = branch_form_values.length;\n\t\t\tvar remote_flag = 0;\n\t\t\tvar is_cached = 1;\n\t\t\tvar is_stored = 0;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\tvar query = \"\";\n\t\t\t\tvar obj = branch_form_values[i];\n\n\t\t\t\tquery += 'INSERT INTO ec_branch_data (';\n\t\t\t\tquery += 'input_id, ';\n\t\t\t\tquery += 'form_id, ';\n\t\t\t\tquery += 'hierarchy_entry_key_ref, ';\n\t\t\t\tquery += 'hierarchy_entry_key_value, ';\n\t\t\t\tquery += 'position, ';\n\t\t\t\tquery += 'label, ';\n\t\t\t\tquery += 'ref, ';\n\t\t\t\tquery += 'value, ';\n\t\t\t\tquery += 'is_title, ';\n\t\t\t\tquery += 'entry_key, ';\n\t\t\t\tquery += 'type, ';\n\t\t\t\tquery += 'is_data_synced, ';\n\t\t\t\tquery += 'is_media_synced, ';\n\t\t\t\tquery += 'is_cached, ';\n\t\t\t\tquery += 'is_stored, ';\n\t\t\t\tquery += 'created_on, ';\n\t\t\t\tquery += 'is_remote) ';\n\t\t\t\tquery += 'VALUES (\"';\n\t\t\t\tquery += obj.input_id + '\", \"';\n\t\t\t\tquery += obj.form_id + '\", \"';\n\t\t\t\tquery += obj.hierarchy_entry_key_ref + '\", \"';\n\t\t\t\tquery += obj.hierarchy_entry_key_value + '\", \"';\n\t\t\t\tquery += obj.position + '\", \"';\n\t\t\t\tquery += obj.label + '\", \"';\n\t\t\t\tquery += obj.ref + '\", \"';\n\t\t\t\tquery += obj.value + '\", \"';\n\t\t\t\tquery += obj.is_title + '\", \"';\n\t\t\t\tquery += obj.entry_key + '\", \"';\n\t\t\t\tquery += obj.type + '\", \"';\n\t\t\t\tquery += obj.is_data_synced + '\", \"';\n\t\t\t\tquery += obj.is_media_synced + '\", \"';\n\t\t\t\tquery += is_cached + '\", \"';\n\t\t\t\tquery += is_stored + '\", \"';\n\t\t\t\tquery += obj.created_on + '\", \"';\n\t\t\t\tquery += remote_flag + '\");';\n\n\t\t\t\ttx.executeSql(query, [], _insertBranchFormValuesSQLSuccessCB, _errorCB);\n\n\t\t\t}//for\n\n\t\t};\n\n\t\tvar _insertBranchFormValuesSuccessCB = function() {\n\n\t\t\tvar branch_form_id = branch_form_values[0].form_id;\n\n\t\t\t//update branch entries counter, + 1\n\t\t\t$.when(EC.Update.updateCountersOnSingleBranchEntryInsertion(entry_key, branch_form_id)).then(function() {\n\t\t\t\tdeferred.resolve(entry_key);\n\t\t\t}, function() {\n\t\t\t\tdeferred.reject();\n\t\t\t});\n\n\t\t};\n\n\t\tvar _insertBranchFormValueserrorCB = function(the_tx, the_result) {\n\t\t\tconsole.log(the_result);\n\t\t\tdeferred.reject();\n\t\t};\n\n\t\tvar _insertBranchFormValuesSQLSuccessCB = function() {\n\t\t};\n\n\t\t/*\n\t\t * Commit a branch form to database; each value is a row in the table ec_data:\n\t\t * when committed, the branch form is set as is_cached = 1, is_stored = 0\n\t\t * the is_stored flag is set to one when the main form is saved.\n\t\t * If the user leaves the main form without saving, the branch entries only cached (is_stored = 0) will be deleted\n\t\t */\n\t\tmodule.insertBranchFormValues = function(the_branch_form_values, the_key_value) {\n\n\t\t\tbranch_form_values = the_branch_form_values;\n\t\t\tentry_key = the_key_value;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_insertBranchFormValuesTX, _errorCB, _insertBranchFormValuesSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Create));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n\n/**\n * @module EC\n * @submodule Create\n *\n */\n\nvar EC = EC || {};\nEC.Create = EC.Create || {};\nEC.Create = ( function(module) {\"use strict\";\n\n\t\tvar form_values;\n\t\tvar entry_key;\n\t\tvar deferred;\n\n\t\tvar _insertFormValuesTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = form_values.length;\n\t\t\tvar remote_flag = 0;\n\t\t\tvar query;\n\t\t\tvar obj;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\tquery = \"\";\n\t\t\t\tobj = form_values[i];\n\n\t\t\t\tquery += 'INSERT INTO ec_data (';\n\t\t\t\tquery += 'input_id, ';\n\t\t\t\tquery += 'form_id, ';\n\t\t\t\tquery += 'position, ';\n\t\t\t\tquery += 'parent, ';\n\t\t\t\tquery += 'label, ';\n\t\t\t\tquery += 'ref, ';\n\t\t\t\tquery += 'value, ';\n\t\t\t\tquery += 'is_title, ';\n\t\t\t\tquery += 'entry_key, ';\n\t\t\t\tquery += 'type, ';\n\t\t\t\tquery += 'created_on, ';\n\t\t\t\tquery += 'is_data_synced, ';\n\t\t\t\tquery += 'is_remote, ';\n\t\t\t\tquery += 'is_media_synced) ';\n\t\t\t\tquery += 'VALUES (\"';\n\t\t\t\tquery += obj.input_id + '\", \"';\n\t\t\t\tquery += obj.form_id + '\", \"';\n\t\t\t\tquery += obj.position + '\", \"';\n\t\t\t\tquery += obj.parent + '\", \"';\n\t\t\t\tquery += obj.label + '\", \"';\n\t\t\t\tquery += obj.ref + '\", \"';\n\t\t\t\tquery += obj.value + '\", \"';\n\t\t\t\tquery += obj.is_title + '\", \"';\n\t\t\t\tquery += obj.entry_key + '\", \"';\n\t\t\t\tquery += obj.type + '\", \"';\n\t\t\t\tquery += obj.created_on + '\", \"';\n\t\t\t\tquery += obj.is_data_synced + '\", \"';\n\t\t\t\tquery += remote_flag + '\", \"';\n\t\t\t\tquery += obj.is_media_synced + '\");';\n\n\t\t\t\ttx.executeSql(query, [], _insertFormValuesSQLSuccessCB, _errorCB);\n\n\t\t\t}//for\n\n\t\t};\n\n\t\tvar _insertFormValuesSuccessCB = function() {\n\n\t\t\tvar form_id = form_values[0].form_id;\n\t\t\tconsole.log(\"FORM VALUES SAVED SUCCESSFULLY\");\n\n\t\t\t//update entries counter, + 1\n\t\t\t$.when(EC.Update.updateCountersOnSingleEntryInsertion(entry_key, form_id)).then(function(main_form_entry_key) {\n\t\t\t\tdeferred.resolve(main_form_entry_key);\n\t\t\t}, function() {\n\t\t\t\tdeferred.reject();\n\t\t\t});\n\n\t\t};\n\n\t\tvar _insertFormValuesSQLSuccessCB = function() {\n\t\t\tconsole.log(\"FORM VALUE SQL QUERY SUCCESS\");\n\t\t};\n\n\t\tvar _errorCB = function(the_tx, the_result) {\n\t\t\tconsole.log(the_result);\n\t\t\tdeferred.reject();\n\t\t};\n\n\t\t/*\n\t\t * Commit a form to database; each value is a row in the table ec_data\n\t\t * a single entry get multiple rows\n\t\t */\n\t\tmodule.insertFormValues = function(the_form_values, the_key_value) {\n\n\t\t\tform_values = the_form_values;\n\t\t\tentry_key = the_key_value;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_insertFormValuesTX, _errorCB, _insertFormValuesSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Create));\n","var EC = EC || {};\nEC.Create = EC.Create || {};\nEC.Create = (function (module) {\n    'use strict';\n\n    var hierarchy_forms_data = [];\n    var entries = [];\n    var entry_key;\n    var single_entry_values;\n    var single_entry_key;\n    var local_form_id;\n    var form_total_entries;\n    var self;\n    var deferred;\n\n    //callback for a transaction error\n    module.errorCB = function (the_tx, the_error) {\n        console.log(EC.Utils.TRANSACTION_ERROR);\n        console.log(the_error);\n        console.log(the_tx);\n    };\n\n    var _insertSingleEntryValues = function (the_entry_values, the_entry_key) {\n\n        single_entry_values = the_entry_values;\n        single_entry_key = the_entry_key;\n\n        EC.db.transaction(_insertSingleEntryValuesTX, EC.Create.errorCB, _insertSingleEntryValuesSuccessCB);\n\n    };\n\n    module.insertAllFormsData = function (the_hierarchy_data) {\n\n        self = this;\n        hierarchy_forms_data = the_hierarchy_data;\n        deferred = new $.Deferred();\n\n        //insert hierarchy entries recursively\n        self.insertEntries(hierarchy_forms_data.shift());\n\n        return deferred.promise();\n\n    };\n\n    module.insertEntries = function (the_single_form_values) {\n\n        var i;\n        var iLength;\n        var current_row;\n        var current_entry_key;\n        var current_entry_values = [];\n\n        //get current form details and data rows the first time the function is called\n        if (the_single_form_values.hasOwnProperty('form_name')) {\n\n            local_form_id = EC.Utils.getLocalFormID(the_single_form_values.form_name);\n            form_total_entries = the_single_form_values.total_entries;\n            entries = the_single_form_values.data_rows;\n        } else {\n            //on subsequent calls only the elements left to insert are passed\n            entries = the_single_form_values;\n        }\n\n        current_entry_key = entries[0].entry_key;\n        iLength = entries.length;\n\n        for (i = 0; i < iLength; i++) {\n            //fill in form_values with only the rows for a single entry, checking entry_key value\n            if (entries[i].entry_key === current_entry_key) {\n                current_entry_values.push(entries[i]);\n            } else {\n                break;\n            }\n        }//for\n\n        //remove current entry values from main entries array and exit\n        entries.splice(0, current_entry_values.length);\n\n        //save the rows currently in form_values to database, as they all belong to the same form\n        _insertSingleEntryValues(current_entry_values, current_entry_key);\n\n    };\n\n    var _insertSingleEntryValuesTX = function (tx) {\n\n        var i;\n        var iLength = single_entry_values.length;\n        var query;\n        var obj;\n        var local_input_id;\n\n        for (i = 0; i < iLength; i++) {\n\n            query = '';\n            obj = single_entry_values[i];\n            local_input_id = EC.Utils.getLocalInputID(obj.ref);\n\n            query += 'INSERT INTO ec_data (';\n            query += 'input_id, ';\n            query += 'form_id, ';\n            query += 'position, ';\n            query += 'parent, ';\n            query += 'label, ';\n            query += 'ref, ';\n            query += 'value, ';\n            query += 'is_title, ';\n            query += 'entry_key, ';\n            query += 'type, ';\n            query += 'created_on, ';\n            query += 'is_data_synced, ';\n            query += 'is_media_synced) ';\n            query += 'VALUES (\"';\n            query += local_input_id + '\", \"';\n            query += local_form_id + '\", \"';\n            query += obj.position + '\", \"';\n            query += obj.parent + '\", \"';\n            query += obj.label + '\", \"';\n            query += obj.ref + '\", \"';\n            query += obj.value + '\", \"';\n            query += obj.is_title + '\", \"';\n            query += obj.entry_key + '\", \"';\n            query += obj.type + '\", \"';\n            query += obj.created_on + '\", \"';\n            query += obj.is_data_synced + '\", \"';\n            query += obj.is_media_synced + '\");';\n\n            tx.executeSql(query, [], _insertSingleEntryValuesSQLSuccessCB, EC.Create.errorCB);\n\n        }//for\n    };\n\n    var _insertSingleEntryValuesSQLSuccessCB = function () {\n\n        console.log('SINGLE ENTRY VALUE SQL INSERT SUCCESS');\n    };\n\n    var _insertSingleEntryValuesSuccessCB = function () {\n\n        console.log('SINGLE ENTRY VALUES SAVED SUCCESSFULLY');\n\n        //insert next entries if any\n        if (entries.length > 0) {\n            self.insertEntries(entries);\n        } else {\n            //update entries counter for the current form. Resolved: all hierarchy data saved; Rejected: still data to save\n            $.when(EC.Update.updateCountersOnEntriesRestore(local_form_id, form_total_entries, hierarchy_forms_data)).then(function () {\n                //all forms updated\n                deferred.resolve();\n            }, function (the_forms_data_left) {\n                //insert entries for next form\n                self.insertEntries(the_forms_data_left.shift());\n            });\n        }\n\n    };\n\n    return module;\n\n}(EC.Create));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n *\n * Comments here - todo\n *\n */\nvar EC = EC || {};\nEC.Delete = EC.Delete || {};\nEC.Delete = ( function(module) {\"use strict\";\n\n\t\tvar forms = [];\n\t\tvar action = \"\";\n\t\tvar project_name;\n\t\tvar has_branches;\n\t\tvar deferred;\n\t\tvar project_id;\n\n\t\tvar _deleteAllEntriesTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = forms.length;\n\t\t\tvar delete_branches_query;\n\t\t\tvar delete_query = \"DELETE FROM ec_data WHERE form_id=?\";\n\t\t\tvar update_count_query = \"UPDATE ec_forms SET entries=? WHERE _id=?\";\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\ttx.executeSql(delete_query, [forms[i]._id], _deleteAllEntriesSQLSuccessCB, _deleteAllEntriesErrorCB);\n\t\t\t\ttx.executeSql(update_count_query, [0, forms[i]._id]);\n\t\t\t}\n\n\t\t\tif (has_branches) {\n\t\t\t\tdelete_branches_query = \"DELETE FROM ec_branch_data WHERE form_id IN (SELECT _id FROM ec_branch_forms WHERE project_id=?)\";\n\t\t\t\ttx.executeSql(delete_branches_query, [project_id], _deleteAllEntriesSQLSuccessCB, _deleteAllEntriesErrorCB);\n\t\t\t}\n\n\t\t};\n\n\t\tvar _deleteAllEntriesSuccessCB = function() {\n\n\t\t\tvar forms = JSON.parse(window.localStorage.forms);\n\t\t\tvar i;\n\t\t\tvar iLength;\n\n\t\t\tswitch(action) {\n\n\t\t\t\tcase EC.Const.RESTORE:\n\t\t\t\t//delete media files (if any) \n\t\t\t\t\t$.when(EC.File.deleteAllMedia(project_name, false, [EC.Const.PHOTO_DIR, EC.Const.AUDIO_DIR, EC.Const.VIDEO_DIR])).then(function() {\n\t\t\t\t\t\tdeferred.resolve(forms);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\tcase EC.Const.DELETE:\n\n\t\t\t\t\t//update entries count in forms array in localStorage\n\t\t\t\t\tiLength = forms.length;\n\t\t\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\t\t\tforms[i].entries = 0;\n\t\t\t\t\t}\n\t\t\t\t\twindow.localStorage.forms = JSON.stringify(forms);\n\n\t\t\t\t\t//delete media files (if any) \n\t\t\t\t\t$.when(EC.File.deleteAllMedia(project_name, false, [EC.Const.PHOTO_DIR, EC.Const.AUDIO_DIR, EC.Const.VIDEO_DIR])).then(function() {\n\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t};\n\n\t\tvar _deleteAllEntriesErrorCB = function(the_tx, the_result) {\n\t\t\tconsole.log(the_result);\n\t\t\tdeferred.reject();\n\t\t};\n\n\t\tvar _deleteAllEntriesSQLSuccessCB = function(the_tx, the_result) {\n\n\t\t\tconsole.log(the_result);\n\t\t};\n\n\t\tmodule.deleteAllEntries = function(the_action, the_project_name) {\n\n\t\t\tforms = JSON.parse(window.localStorage.forms);\n\t\t\tproject_id = parseInt(window.localStorage.project_id, 10);\n\t\t\taction = the_action;\n\t\t\tproject_name = the_project_name;\n\t\t\thas_branches = EC.Utils.projectHasBranches();\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_deleteAllEntriesTX, _deleteAllEntriesErrorCB, _deleteAllEntriesSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Delete));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true, stupid: true*/\n/*global $, jQuery*/\n/*\n *\n * @method deleteAllSynced\n * deletes all the synced entries for a project. It also deletes any linked branches and any media files linked to the synced entries\n *\n */\nvar EC = EC || {};\nEC.Delete = EC.Delete || {};\nEC.Delete = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar self;\n\t\tvar project_name;\n\t\tvar project_id;\n\t\tvar forms;\n\t\tvar current_form;\n\t\tvar counter;\n\t\tvar deferred;\n\n\t\tfunction _doDeletion() {\n\n\t\t\t//delete synced hierarchy entries for the current form\n\t\t\t$.when(EC.Delete.removeSyncedHierarchyEntries(current_form._id)).then(function() {\n\n\t\t\t\tif (forms.length > 0) {\n\t\t\t\t\t//delete synced entries for next form\n\t\t\t\t\t_deleteSynced(forms.shift());\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\t//update total of synced hierachy entries deletes in ec_forms table for each form\n\t\t\t\t\t// of this project\n\t\t\t\t\t$.when(EC.Update.updateCountersOnSyncedEntriesDeletion(self.deletion_counters)).then(function() {\n\n\t\t\t\t\t\t//remove files (if any)\n\t\t\t\t\t\tif (self.deletion_files.length > 0) {\n\t\t\t\t\t\t\t$.when(EC.File.remove(project_name, self.deletion_files)).then(function() {\n\t\t\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\n\t\tfunction _handleBranches(the_entry_keys) {\n\n\t\t\tvar deferred = new $.Deferred();\n\t\t\tvar entry_keys = the_entry_keys;\n\n\t\t\t//get all the branch files linked to synced entries (if any)\n\t\t\t$.when(EC.Select.getBranchSyncedFiles(entry_keys)).then(function(the_files) {\n\n\t\t\t\tself.deletion_files = self.deletion_files.concat(the_files);\n\n\t\t\t\t//delete all branch entries which are both data and media synced\n\t\t\t\t$.when(EC.Delete.removeSyncedBranchEntries(entry_keys)).then(function() {\n\t\t\t\t\tdeferred.resolve();\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn deferred.promise();\n\t\t}\n\n\n\t\tmodule.deleteAllSynced = function(the_project_id, the_project_name, the_forms) {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tproject_name = the_project_name;\n\t\t\tproject_id = the_project_id;\n\t\t\tforms = the_forms;\n\t\t\tself.deletion_synced_entry_keys = [];\n\t\t\tself.deletion_files = [];\n\t\t\tself.deletion_counters = [];\n\n\t\t\t//delete synced entries per each for recursively\n\t\t\t_deleteSynced(forms.shift());\n\n\t\t\treturn deferred.promise();\n\t\t};\n\n\t\tfunction _deleteSynced(the_current_form) {\n\n\t\t\tcurrent_form = the_current_form;\n\n\t\t\t/*\n\t\t\t * Select all the synced entries, we need the hierarchy\n\t\t\t * entry keys to delete any branches\n\t\t\t *\n\t\t\t */\n\t\t\t$.when(EC.Select.getSyncedEntryKeys(current_form._id)).then(function(the_entry_keys) {\n\n\t\t\t\tself.deletion_synced_entry_keys = the_entry_keys;\n\t\t\t\tself.deletion_counters.push({form_id: current_form._id, amount: the_entry_keys.length});\n\n\t\t\t\tif (current_form.has_media === 1) {\n\n\t\t\t\t\t//get hierarchy files to delete (synced only)\n\t\t\t\t\t$.when(EC.Select.getHierarchySyncedFiles(current_form._id)).then(function(the_files) {\n\n\t\t\t\t\t\tself.deletion_files = self.deletion_files.concat(the_files);\n\n\t\t\t\t\t\t//any branches?\n\t\t\t\t\t\tif (current_form.has_branches === 1) {\n\n\t\t\t\t\t\t\t//get branch files and delete branch entries\n\t\t\t\t\t\t\t$.when(_handleBranches(self.deletion_synced_entry_keys)).then(function() {\n\t\t\t\t\t\t\t\t_doDeletion();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t_doDeletion();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\t//no media for this form, any branches?\n\t\t\t\t\tif (current_form.has_branches === 1) {\n\n\t\t\t\t\t\t//get branch files and delete branch entries\n\t\t\t\t\t\t$.when(_handleBranches(self.deletion_synced_entry_keys)).then(function() {\n\t\t\t\t\t\t\t_doDeletion();\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t_doDeletion();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn module;\n\n\t}(EC.Delete));\n\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n *\n * Comments here - todo\n *\n */\nvar EC = EC || {};\nEC.Delete = EC.Delete || {};\nEC.Delete = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar self;\n\t\tvar rows_to_delete;\n\t\tvar deferred;\n\t\tvar media_types;\n\n\t\t//select and count the rows we are going to delete to be able to update the\n\t\t// counter later\n\t\tvar _deleteBranchEntryTX = function(tx) {\n\n\t\t\tvar query = \"DELETE FROM ec_branch_data WHERE _id=?\";\n\t\t\tvar i;\n\t\t\tvar iLength = rows_to_delete.length;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\t/* Get file names to delete(if any) for media types when the value stored is not\n\t\t\t\t * empty\n\t\t\t\t * n.b: media files cached are not deleted by Epicollect5, the system can delete\n\t\t\t\t * them if it needs resources anyway\n\t\t\t\t *\n\t\t\t\t * It be good to have Epicollect5 purge orphan cached files in the future\n\t\t\t\t * TODO\n\t\t\t\t */\n\t\t\t\tif (media_types.indexOf(rows_to_delete[i].type) !== -1 && rows_to_delete[i].value.stored !== \"\") {\n\t\t\t\t\tself.deletion_files.push({\n\t\t\t\t\t\tvalue : rows_to_delete[i].value.stored,\n\t\t\t\t\t\ttype : rows_to_delete[i].type\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\ttx.executeSql(query, [rows_to_delete[i]._id], null, _deleteBranchEntryErrorCB);\n\t\t\t}\n\t\t};\n\n\t\tvar _deleteBranchEntrySuccessCB = function() {\n\n\t\t\t//any file to delete?\n\t\t\tif (self.deletion_files.length > 0) {\n\t\t\t\t$.when(EC.File.remove(window.localStorage.project_name, self.deletion_files)).then(function() {\n\t\t\t\t\tdeferred.resolve(true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdeferred.resolve();\n\t\t\t}\n\t\t};\n\n\t\tvar _deleteBranchEntryErrorCB = function() {\n\t\t\tdeferred.reject();\n\t\t};\n\t\t/**\n\t\t * @method deleteBranchEntry Deletes all the rows belonging to a single branch\n\t\t * entry.\n\t\t * @param {Object} the_rows Rows for a single entry to be deleted, as an array of\n\t\t * objects containing the row _id\n\t\t * @param {Object} the_entry_key The entry key value for the selected branch\n\t\t * entry\n\t\t */\n\t\tmodule.deleteBranchEntry = function(the_rows) {\n\n\t\t\tself = this;\n\t\t\trows_to_delete = the_rows;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tmedia_types = [EC.Const.AUDIO, EC.Const.PHOTO, EC.Const.VIDEO];\n\t\t\tself.deletion_files = [];\n\n\t\t\tEC.db.transaction(_deleteBranchEntryTX, _deleteBranchEntryErrorCB, _deleteBranchEntrySuccessCB);\n\n\t\t\treturn deferred.promise();\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Delete));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n *\n * Comments here - todo\n *\n */\nvar EC = EC || {};\nEC.Delete = EC.Delete || {};\nEC.Delete = ( function(module) {\"use strict\";\n\n\t\tvar _deleteCachedBranchEntriesTX = function(tx) {\n\n\t\t\tvar delete_query = \"DELETE FROM ec_branch_data WHERE is_cached=? AND is_stored=?\";\n\n\t\t\ttx.executeSql(delete_query, [1, 0], _deleteCachedBranchEntriesSQLSuccessCB, EC.Delete.errorCB);\n\n\t\t};\n\n\t\tvar _deleteCachedBranchEntriesSuccessCB = function() {\n\n\t\t\tconsole.log(\"Cached branch entries deleted\");\n\n\t\t\tEC.Routing.changePage(EC.Const.INDEX_VIEW);\n\n\t\t};\n\n\t\tvar _deleteCachedBranchEntriesSQLSuccessCB = function(the_tx, the_result) {\n\n\t\t\tconsole.log(the_result);\n\t\t};\n\n\t\tmodule.deleteCachedBranchEntries = function() {\n\n\t\t\tEC.db.transaction(_deleteCachedBranchEntriesTX, EC.Delete.errorCB, _deleteCachedBranchEntriesSuccessCB);\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Delete));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n *\n * @method deleteChildEntries deletes all the child entries linked to a hierarchy entry\n * \n * It also deletes all the branches and get all the files linked to the braches (to be deleted later)\n *\n */\nvar EC = EC || {};\nEC.Delete = EC.Delete || {};\nEC.Delete = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar self;\n\t\tvar deferred;\n\t\tvar child_hierarchy_files;\n\t\tvar child_branch_files;\n\t\tvar current_child_form;\n\n\t\tmodule.deleteChildEntries = function() {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tcurrent_child_form = EC.Delete.children_forms.shift();\n\t\t\tchild_hierarchy_files = [];\n\t\t\tchild_branch_files = [];\n\n\t\t\t_removeChildren();\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\t\t\n\t\t//recursively delete the children entries\n\t\tfunction _doChildrenDeletion() {\n\t\t\t//delete all the hierarchy children data\n\t\t\t$.when(EC.Delete.removeHierarchyChildrenEntries()).then(function() {\n\n\t\t\t\t//another child form to delete entries from?\n\t\t\t\tif (EC.Delete.children_forms.length > 0) {\n\n\t\t\t\t\tcurrent_child_form = EC.Delete.children_forms.shift();\n\n\t\t\t\t\t//delete children a level down recursively\n\t\t\t\t\t_removeChildren();\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\t//all children deleted\n\t\t\t\t\tdeferred.resolve();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfunction _removeChildren() {\n\n\t\t\t/*\n\t\t\t * Cache child entries total and child entries details we are going to delete: we\n\t\t\t * do this to\n\t\t\t * update the entry counters after deletion (per each form) and to delete any\n\t\t\t * children\n\t\t\t * attached to the selected child entry. We also need the children entry keys to\n\t\t\t * grab all the files attached\n\t\t\t *\n\t\t\t * We get:\n\t\t\t *  - all the children entries like:\n\t\t\t * { count: 3, entry_key: <the_entry_key>, form_id: <the_form_id>, parent :\n\t\t\t * <the_parent_etry_key>}\n\t\t\t *  - the total of children entries and the child form id\n\t\t\t * { amount: <the_amount>, form_id: <the_form_id>}\n\t\t\t */\n\t\t\t$.when(EC.Select.getChildEntriesForDeletion()).then(function(the_entries, the_counters) {\n\t\t\t\t\n\t\t\t\t//cache child entries and files in module object\n\t\t\t\tself.deletion_entries = the_entries;\n\t\t\t\tself.deletion_counters.push(the_counters);\n\n\t\t\t\t//Any media attached to delete?\n\t\t\t\tif (current_child_form.has_media === 1) {\n\n\t\t\t\t\t/* Select all the hierarchy children media files to be deleted\n\t\t\t\t\t * (loop al the keys as we migth have more than one child\n\t\t\t\t\t */\n\t\t\t\t\t$.when(EC.Select.getHierarchyChildrenFiles(current_child_form)).then(function(the_files) {\n\n\t\t\t\t\t\t//cache files to be deleted\n\t\t\t\t\t\tself.deletion_files = self.deletion_files.concat(the_files);\n\n\t\t\t\t\t\t//any branches for the children?\n\t\t\t\t\t\tif (current_child_form.has_branches === 1) {\n\n\t\t\t\t\t\t\t//get branch files and delete branch entries\n\t\t\t\t\t\t\t$.when(_handleChildBranches()).then(function() {\n\t\t\t\t\t\t\t\t_doChildrenDeletion();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t_doChildrenDeletion();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\t//no media, any branches for the children then?\n\t\t\t\t\tif (current_child_form.has_branches === 1) {\n\n\t\t\t\t\t\t//get branch files and delete branch entries\n\t\t\t\t\t\t$.when(_handleChildBranches()).then(function() {\n\t\t\t\t\t\t\t_doChildrenDeletion();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t_doChildrenDeletion();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfunction _handleChildBranches() {\n\n\t\t\tvar deferred = new $.Deferred();\n\n\t\t\t//get all the branch files (if any)\n\t\t\t$.when(EC.Select.getBranchChildrenFiles()).then(function(the_files) {\n\n\t\t\t\tself.deletion_files = self.deletion_files.concat(the_files);\n\n\t\t\t\t//delete all branch entries linked to this hierarchy entry\n\t\t\t\t$.when(EC.Delete.removeLinkedBranchChildEntries()).then(function() {\n\t\t\t\t\tdeferred.resolve();\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn deferred.promise();\n\n\t\t}\n\n\t\treturn module;\n\n\t}(EC.Delete));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n *\n * Comments here - todo\n *\n */\nvar EC = EC || {};\nEC.Delete = EC.Delete || {};\nEC.Delete = ( function(module) {\n\t\t\"use strict\";\n\t\t\n\t\tvar self;\n\t\tvar entry_key;\n\t\tvar current_form;\n\t\tvar current_child_form;\n\t\tvar hierarchy_files = [];\n\t\tvar branch_files = [];\n\t\tvar has_branches;\n\t\tvar deferred;\n\t\tvar project_name;\n\n\t\tfunction _handleBranches(the_entry_key) {\n\n\t\t\tvar deferred = new $.Deferred();\n\t\t\tvar entry_key = the_entry_key;\n\n\t\t\t//get all the branch files (if any)\n\t\t\t$.when(EC.Select.getBranchFiles(entry_key)).then(function(the_files) {\n\n\t\t\t\tself.deletion_files = self.deletion_files.concat(the_files);\n\n\t\t\t\t//delete all branch entries linked to this hierarchy entry\n\t\t\t\t$.when(EC.Delete.removeLinkedBranchEntries(entry_key)).then(function() {\n\t\t\t\t\tdeferred.resolve();\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn deferred.promise();\n\t\t}\n\n\t\t/**\n\t\t * @method deleteEntry Deletes all the rows belonging to a single entry. It will\n\t\t * also delete all the children entries and branch entries linked, plus all the\n\t\t * files associated with these\n\t\t * entries\n\t\t * @param {Object} the_rows Rows for a single entry to be deleted, as an array of\n\t\t * objects containing the row _id\n\t\t * @param {Object} the_entry_key The entry key value for the selected entry\n\t\t */\n\t\tmodule.deleteEntry = function(the_project_name, the_rows, the_entry_key, the_current_form_id) {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tentry_key = the_entry_key;\n\t\t\thas_branches = EC.Utils.projectHasBranches();\n\t\t\tcurrent_form = EC.Utils.getFormByID(the_current_form_id);\n\t\t\tproject_name = the_project_name;\n\t\t\tself.deletion_files = [];\n\t\t\tself.deletion_counters = [];\n\t\t\tself.deletion_entries = [];\n\t\t\tself.children_forms = EC.Utils.getChildrenForms(current_form._id);\n\n\t\t\t/*\n\t\t\t * select COUNT(*) and rows we are going to delete: we do this to update the\n\t\t\t * entry counter after deletion and to delete any children attached to the\n\t\t\t * selected antry\n\t\t\t */\n\t\t\t$.when(EC.Select.getHierarchyEntriesForDeletion(entry_key)).then(function(the_entries, the_counters) {\n\n\t\t\t\tself.deletion_entries = the_entries;\n\t\t\t\tself.deletion_counters = the_counters;\n\n\t\t\t\t//Does this entry has any media attached to delete?\n\t\t\t\tif (current_form.has_media === 1) {\n\n\t\t\t\t\t//select all the hierarchy media files to be deleted\n\t\t\t\t\t$.when(EC.Select.getHierarchyFiles(current_form, entry_key)).then(function(the_files) {\n\n\t\t\t\t\t\t//cache files to be deleted\n\t\t\t\t\t\tself.deletion_files = self.deletion_files.concat(the_files);\n\n\t\t\t\t\t\t//any branches?\n\t\t\t\t\t\tif (current_form.has_branches === 1) {\n\n\t\t\t\t\t\t\t//get branch files and delete branch entries\n\t\t\t\t\t\t\t$.when(_handleBranches(entry_key)).then(function() {\n\t\t\t\t\t\t\t\t_doDeletion();\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t_doDeletion();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\t//no media, any branches?\n\t\t\t\t\tif (current_form.has_branches === 1) {\n\n\t\t\t\t\t\t//get branch files and delete branch entries\n\t\t\t\t\t\t$.when(_handleBranches(entry_key)).then(function() {\n\t\t\t\t\t\t\t_doDeletion();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t_doDeletion();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\tfunction _doDeletion() {\n\n\t\t\t//delete the hierarchy entry (the one currently selected by the user)\n\t\t\t$.when(EC.Delete.removeHierarchyEntry(entry_key)).then(function() {\n\n\t\t\t\t//TODO delete all the media files -> wait, check for children and children files\n\n\t\t\t\t//TODO delete hierarchy files, branches and branch files if any\n\n\t\t\t\t//delete children recursively if any\n\t\t\t\tif (self.children_forms.length > 0) {\n\n\t\t\t\t\tconsole.log(\"delete children and branches and media attached\");\n\n\t\t\t\t\t$.when(EC.Delete.deleteChildEntries()).then(function() {\n\n\t\t\t\t\t\t//all children deleted, update counters (recursively) for all the forms\n\t\t\t\t\t\tconsole.log(\"all children deleted\");\n\t\t\t\t\t\tconsole.log(self.deletion_counters);\n\n\t\t\t\t\t\t$.when(EC.Update.updateCountersOnSingleEntryDeletion(self.deletion_counters)).then(function() {\n\t\t\t\t\t\t\t//All done\n\n\t\t\t\t\t\t\t//any media files to remove?\n\t\t\t\t\t\t\tif (self.deletion_files.length > 0) {\n\n\t\t\t\t\t\t\t\t$.when(EC.File.remove(project_name, self.deletion_files)).then(function() {\n\n\t\t\t\t\t\t\t\t\tconsole.log(project_name + \" media deleted\");\n\t\t\t\t\t\t\t\t\tdeferred.resolve(true);\n\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\t\tdeferred.resolve(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t//no children, just update counters now (recursively) for all the forms\n\t\t\t\t\t$.when(EC.Update.updateCountersOnSingleEntryDeletion(self.deletion_counters)).then(function() {\n\t\t\t\t\t\t//All done\n\t\t\t\t\t\tdeferred.resolve(true);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn module;\n\n\t}(EC.Delete));\n","/*global $, jQuery*/\n/*\n *\n * Comments here - todo\n *\n */\nvar EC = EC || {};\nEC.Delete = EC.Delete || {};\nEC.Delete = (function (module) {\n    'use strict';\n\n    var project_id;\n    var project_name;\n    var deferred;\n\n    var _deleteProjectTX = function (tx) {\n\n        //enable PRAGMA to use foreign keys constraint: it is OFF by default\n        EC.db.executeSql('PRAGMA foreign_keys=ON;', [], function (res) {\n            console.log('PRAGMA res: ' + JSON.stringify(res));\n\n            //hack to make it work on Android https://github.com/litehelpers/Cordova-sqlite-storage/issues/45\n            if (window.device.platform === EC.Const.ANDROID) {\n                EC.db.executeSql('PRAGMA foreign_keys;', [], function (res) {\n                    console.log('PRAGMA res: ' + JSON.stringify(res));\n                });\n            }\n        });\n\n        var query = 'DELETE FROM ec_projects WHERE _id=?';\n        tx.executeSql(query, [project_id], _deleteProjectSQLSuccessCB, _deleteProjectErrorCB);\n    };\n\n    var _deleteProjectSQLSuccessCB = function (the_tx, the_result) {\n        console.log(the_result);\n    };\n\n    var _deleteProjectSuccessCB = function () {\n\n        //delete media files (if any) for the project just deleted\n        $.when(EC.File.deleteAllMedia(project_name, true, [EC.Const.PHOTO_DIR, EC.Const.AUDIO_DIR, EC.Const.VIDEO_DIR])).then(function () {\n            deferred.resolve();\n        });\n    };\n\n    var _deleteProjectErrorCB = function (the_tx, the_result) {\n        console.log(the_result);\n        deferred.reject();\n    };\n\n    //Delete a project and related tables: database integrity will be kept with\n    // triggers (see EC.CreateSQLiteDatabase)\n    module.deleteProject = function (the_project_id, the_project_name) {\n\n        project_id = the_project_id;\n        project_name = the_project_name;\n        deferred = new $.Deferred();\n\n        EC.db.transaction(_deleteProjectTX, _deleteProjectErrorCB, _deleteProjectSuccessCB);\n\n        return deferred.promise();\n    };\n\n    return module;\n\n}(EC.Delete));\n","var EC = EC || {};\nEC.Delete = EC.Delete || {};\nEC.Delete = (function (module) {\n    'use strict';\n\n    module.deletion_counters = [];\n    module.deletion_entries = [];\n    module.deletion_files = [];\n    module.children_forms = [];\n\n    //callback for a transaction error\n    module.errorCB = function (the_error) {\n        console.log(EC.Const.TRANSACTION_ERROR);\n        console.log('%c' + the_error.message, 'color: red');\n    };\n\n    return module;\n}(EC.Delete));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n *\n * @method removeHierarchyChildrenEntries\n * \n * Removes all the children entries of a hierarchy entry (direct children)\n * \n * This method is called recursively to delete all the children for immediate parent entries\n * \n * EC.Delete.deletion_entries is an array containign all the parent entry keys used to remove the children\n *\n */\nvar EC = EC || {};\nEC.Delete = EC.Delete || {};\nEC.Delete = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar self;\n\t\tvar parent;\n\t\tvar deferred;\n\t\tvar entries;\n\t\tvar parent_key;\n\n\t\tvar _removeHierarchyChildrenEntriesTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = entries.length;\n\t\t\tvar query = \"DELETE FROM ec_data WHERE parent=?\";\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\ttx.executeSql(query, [entries[i].parent], null, self.errorCB);\n\t\t\t}\n\t\t};\n\n\t\tvar _removeHierarchyChildrenEntriesSuccessCB = function() {\n\t\t\tdeferred.resolve();\n\t\t};\n\n\t\tmodule.removeHierarchyChildrenEntries = function() {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tentries = self.deletion_entries;\n\n\t\t\tEC.db.transaction(_removeHierarchyChildrenEntriesTX, self.errorCB, _removeHierarchyChildrenEntriesSuccessCB);\n\n\t\t\treturn deferred.promise();\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Delete));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n *\n * @method removeHierarchyEntry\n * remove all the rows belonging to a hierarchy entry\n *\n * @param {String} the_hierarchy_entry_key \n * the entry key of the hierarchy entry\n */\nvar EC = EC || {};\nEC.Delete = EC.Delete || {};\nEC.Delete = ( function(module) {\n\t\t\"use strict\";\n\t\t\n\t\tvar self;\n\t\tvar hierarchy_entry_key;\n\t\tvar deferred;\n\t\t\n\t\tvar _removeHierarchyEntryTX = function(tx){\n\t\t\t\n\t\t\t//delete all rows belonging to this entry \n\t\t\tvar query = \"DELETE FROM ec_data WHERE entry_key=?\";\n\t\t\ttx.executeSql(query, [hierarchy_entry_key], null, self.errorCB);\n\t\t};\n\t\t\n\t\tvar _removeHierarchyEntrySuccessCB = function(){\n\t\t\tdeferred.resolve();\n\t\t};\n\n\t\tmodule.removeHierarchyEntry = function(the_hierarchy_entry_key) {\n\t\t\t\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\thierarchy_entry_key = the_hierarchy_entry_key;\n\n\t\t\tEC.db.transaction(_removeHierarchyEntryTX, self.errorCB, _removeHierarchyEntrySuccessCB);\n\n\t\t\treturn deferred.promise();\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Delete));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n *\n * @method removeLinkedBranchChildEntries remove all the branch entries linked to\n * a child of a hierarchy entry\n *\n * no parameters are passed, as when this method is called the object\n * self.deletion_entries will contain all the entries entry key.\n * \n * Branches are linked to a hierarchy entry via the hierarchy entry key\n *\n */\nvar EC = EC || {};\nEC.Delete = EC.Delete || {};\nEC.Delete = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar self;\n\t\tvar deferred;\n\t\tvar entries;\n\n\t\tvar _removeLinkedBranchChildEntriesTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = entries.length;\n\t\t\tvar query = \"DELETE FROM ec_branch_data WHERE hierarchy_entry_key_value=?\";\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\ttx.executeSql(query, [entries[i].entry_key], null, self.errorCB);\n\t\t\t}\n\t\t};\n\n\t\tvar _removeLinkedBranchChildEntriesSuccessCB = function() {\n\t\t\tdeferred.resolve();\n\t\t};\n\n\t\tmodule.removeLinkedBranchChildEntries = function() {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\tentries = self.deletion_entries;\n\n\t\t\tEC.db.transaction(_removeLinkedBranchChildEntriesTX, self.errorCB, _removeLinkedBranchChildEntriesSuccessCB);\n\n\t\t\treturn deferred.promise();\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Delete));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n *\n * Comments here - todo\n *\n */\nvar EC = EC || {};\nEC.Delete = EC.Delete || {};\nEC.Delete = ( function(module) {\n\t\t\"use strict\";\n\t\t\n\t\tvar self;\n\t\tvar hierarchy_entry_key;\n\t\tvar deferred;\n\t\t\n\t\tvar _removeLinkedBranchEntriesSQLSuccessCB = function(the_tx, the_result){\n\t\t};\n\t\t\n\t\tvar _removeLinkedBranchEntriesTX = function(tx){\n\t\t\t\n\t\t\t//delete all branches linked to this entry key (if any)\n\t\t\tvar delete_branches_query = \"DELETE FROM ec_branch_data WHERE hierarchy_entry_key_value=?\";\n\t\t\ttx.executeSql(delete_branches_query, [hierarchy_entry_key], _removeLinkedBranchEntriesSQLSuccessCB, self.errorCB);\n\t\t};\n\t\t\n\t\tvar _removeLinkedBranchEntriesSuccessCB = function(){\n\t\t\tdeferred.resolve();\n\t\t};\n\n\t\tmodule.removeLinkedBranchEntries = function(the_hierarchy_entry_key) {\n\t\t\t\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\thierarchy_entry_key = the_hierarchy_entry_key;\n\n\t\t\tEC.db.transaction(_removeLinkedBranchEntriesTX, self.errorCB, _removeLinkedBranchEntriesSuccessCB);\n\n\t\t\treturn deferred.promise();\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Delete));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true, stupid:true*/\n/*global $, jQuery*/\n/*\n *\n * Remove all the synced branch entries linked to synced hierarchy entries, lopping all the entry keys of the hierarchy entries\n *\n */\nvar EC = EC || {};\nEC.Delete = EC.Delete || {};\nEC.Delete = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar self;\n\t\tvar hierarchy_entry_keys;\n\t\tvar deferred;\n\n\t\tvar _removeSyncedBranchEntriesTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = hierarchy_entry_keys.length;\n\t\t\tvar query = \"DELETE FROM ec_branch_data WHERE hierarchy_entry_key_value=? AND is_data_synced=?\";\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\ttx.executeSql(query, [hierarchy_entry_keys[i], 1], null, self.errorCB);\n\t\t\t}\n\t\t};\n\n\t\tvar _removeSyncedBranchEntriesSuccessCB = function() {\n\t\t\tdeferred.resolve();\n\t\t};\n \n\t\tmodule.removeSyncedBranchEntries = function(the_hierarchy_entry_keys) {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\t\t\thierarchy_entry_keys = the_hierarchy_entry_keys;\n\n\t\t\tEC.db.transaction(_removeSyncedBranchEntriesTX, self.errorCB, _removeSyncedBranchEntriesSuccessCB);\n\n\t\t\treturn deferred.promise();\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Delete));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true, stupid: true*/\n/*global $, jQuery*/\n/*\n *\n * Comments here - todo\n *\n */\nvar EC = EC || {};\nEC.Delete = EC.Delete || {};\nEC.Delete = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar self;\n\t\tvar form_id;\n\t\tvar deferred;\n\n\t\tvar _removeSyncedHierarchyEntriesTX = function(tx) {\n\n\t\t\t//delete all rows belonging to this form which are data synced\n\t\t\tvar query = \"DELETE FROM ec_data WHERE form_id=? AND is_data_synced=?\";\n\t\t\ttx.executeSql(query, [form_id, 1], null, self.errorCB);\n\t\t};\n\n\t\tvar _removeSyncedHierarchyEntriesSuccessCB = function() {\n\t\t\tdeferred.resolve();\n\t\t};\n\n\t\tmodule.removeSyncedHierarchyEntries = function(the_form_id) {\n\n\t\t\tself = this;\n\t\t\tform_id = the_form_id;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_removeSyncedHierarchyEntriesTX, self.errorCB, _removeSyncedHierarchyEntriesSuccessCB);\n\n\t\t\treturn deferred.promise();\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Delete));\n","/* global LocalFileSystem */\nvar EC = EC || {};\nEC.File = EC.File || {};\nEC.File = (function (module) {\n    'use strict';\n\n    var forms;\n    var project_name;\n    var project_id;\n    var backup_path;\n\n    /**\n     * @method _writeFile Write the project backup object to a file <project_name>.txt\n     * The file is written to LocalFileSystem.PERSISTENT, whatever that resolves to (it depends on the device and platform)\n     * @param {Object} the_content\n     */\n    function _writeFile(the_content) {\n        function fail(the_error) {\n            console.log(the_error);\n        }\n\n\n        console.log(JSON.stringify(the_content));\n\n        var txt_content = JSON.stringify(the_content);\n        var filename = project_name + '.txt';\n        var deferred = new $.Deferred();\n\n        window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, gotFS, fail);\n\n        function gotFS(the_fileSystem) {\n\n            console.log(JSON.stringify(the_fileSystem));\n            backup_path = the_fileSystem.root.fullPath;\n\n            the_fileSystem.root.getFile(filename, {\n                create: true,\n                exclusive: false\n            }, gotFileEntry, fail);\n        }\n\n        function gotFileEntry(fileEntry) {\n            fileEntry.createWriter(gotFileWriter, fail);\n        }\n\n        function gotFileWriter(writer) {\n\n            writer.onwritestart = function () {\n            };\n\n            writer.onwriteend = function (evt) {\n\n                //file written successfully,\n                deferred.resolve();\n                console.log('Content of file:' + txt_content);\n            };\n            //write content to file\n            writer.write(txt_content);\n        }\n\n        return deferred.promise();\n    }\n\n    /** @method backup Get data to backup for the current project (saving tables ec_data and ec_branch_data)\n     *\n     * @param {Object} the_forms the hierarchy forms\n     * @param {Object} the_project_name current project name\n     */\n    module.backup = function (the_forms, the_project_name, the_project_id) {\n\n        var deferred = new $.Deferred();\n        forms = the_forms;\n        project_name = the_project_name;\n        project_id = the_project_id;\n\n        //get data rows for all the forms for this project\n        $.when(EC.Select.getAllProjectEntries(forms, project_id)).then(function (the_entries) {\n            $.when(_writeFile(the_entries)).then(function () {\n                deferred.resolve();\n            });\n        });\n\n        return deferred.promise();\n\n    };\n\n    return module;\n\n}(EC.File));\n","/*global $, jQuery, LocalFileSystem, cordova*/\nvar EC = EC || {};\nEC.File = EC.File || {};\nEC.File = (function (module) {\n    'use strict';\n\n    /*\n     * Copyvthe video file from app private folder to app cache folder changing the file name to the current timestamp (video extension will be always .mp4)\n     *\n     * We do so to make it playable via a third party application (ANDROID only, and it needs a better implementation on 4.4+)\n     */\n    var video_path;\n    var stored_filename;\n    var cached_filename;\n    var is_branch;\n    var deferred;\n\n    module.copyVideo = function (the_video_path, is_branch_flag) {\n\n        deferred = new $.Deferred();\n        video_path = the_video_path;\n        is_branch = is_branch_flag;\n        cached_filename = EC.Utils.getTimestamp() + '.mp4';\n\n        function fail(error) {\n            console.log(error);\n        }\n\n        function onLFSSuccess(the_video_file_entry) {\n\n            function gotFS(the_file_system) {\n\n                var fs = the_file_system;\n                console.log(fs);\n                //move file to externalCacheDirectory (directory entry pointing to external cache folder)\n                the_video_file_entry.copyTo(fs, cached_filename, function (success) {\n                    deferred.resolve(cached_filename);\n                }, fail);\n            }\n\n            function fail(error) {\n                console.log(error);\n            }\n            //request temporary folder from file system\n            window.resolveLocalFileSystemURL(cordova.file.externalCacheDirectory, gotFS, fail);\n        }\n\n        //get file entry resolving file full path\n        window.resolveLocalFileSystemURI(video_path, onLFSSuccess, fail);\n\n        return deferred.promise();\n\n    };\n\n    return module;\n\n}(EC.File));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, LocalFileSystem*/\nvar EC = EC || {};\nEC.File = EC.File || {};\nEC.File = (function (module) {\n    'use strict';\n\n    /* The new file system API will throw an error when trying to create a folder if\n     * a parent does not exist\n     * therefore we have to create the folders to contain the media files.\n     *\n     * -images\n     * -audios\n     * -videos\n     *\n     * in the Documents folder as the iOS permanent storage\n     *\n     * On iOS we create the folders at runtime using Cordova,\n     * while on Android the folders are created using Java code\n     *\n     *\n     */\n\n    var dirs;\n    var entry;\n    var deferred;\n\n    function onCreateSuccess() {\n        _createMediaDir();\n    }\n\n    function onCreateFail(error) {\n        console.log(error);\n        deferred.reject();\n    }\n\n    function _createMediaDir() {\n\n        var media_dir;\n\n        if (dirs.length > 0) {\n\n            media_dir = dirs.shift();\n\n            //create a media folder: images, audios, videos\n            entry.getDirectory(media_dir, {\n                create: true,\n                exclusive: false\n            }, onCreateSuccess, onCreateFail);\n\n        }\n        else {\n            console.log('Media folders created');\n            deferred.resolve();\n        }\n    }\n\n    function onIOSRFSSuccess(the_fileSystem) {\n\n        entry = the_fileSystem.root;\n\n        //create media folders recursively\n        _createMediaDir();\n\n    }\n\n    function onIOSRFSError(error) {\n        console.log(error);\n        deferred.reject();\n    }\n\n\n    module.createMediaDirs = function () {\n\n        deferred = new $.Deferred();\n\n        dirs = [EC.Const.PHOTO_DIR, EC.Const.AUDIO_DIR, EC.Const.VIDEO_DIR];\n\n        //persistent storage on iOS is the \"Documents\" folder in the app sandbox\n        window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, onIOSRFSSuccess, onIOSRFSError);\n\n        return deferred.promise();\n\n    };\n\n    return module;\n\n}(EC.File));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.File = EC.File || {};\nEC.File = ( function(module) {\n        \"use strict\";\n\n        /*\n        * Delete media files from app private folder by project_name and in sequence images -> audios -> videos recursively\n        *\n        * Android: file://data/data/{package_name}/files\n        *\n        * -images\n        * -audios\n        * -videos\n        *\n        * /<project_name>\n        *\n        * @param {the_project_name} the project name to delete media from\n        * @param {has_project_been_deleted} whether the project itself was deleted beforehand or not:\n        *  we need to keep track of this as if the project is not deleted, we have to set the values of all the media rows to empty strings\n        *\n        *\n        */\n        //media dirs are declared outside deleteAllMedia because the fucntion is\n        // called recursively\n        var media_dirs;\n\n        var deferred;\n\n        module.deleteAllMedia = function(the_project_name, has_project_been_deleted, the_media_dirs) {\n\n            var self = this;\n            var project_name = the_project_name;\n            var is_project_deleted = has_project_been_deleted;\n            var media_dirs = the_media_dirs;\n            var dir = media_dirs.shift();\n            var app_private_dir_path;\n            var project_id = window.parseInt(window.localStorage.project_id, 10);\n            var hierarchy_forms = JSON.parse(window.localStorage.forms);\n\n            if (!deferred) {\n                deferred = new $.Deferred();\n            }\n\n            console.log(\"dir: \" + EC.Const.ANDROID_APP_PRIVATE_URI + dir + project_name);\n\n            var _onDirSuccess = function(the_dir) {\n\n                var dir_entry = the_dir;\n\n                console.log('dir_entry: ' + JSON.stringify(dir_entry));\n\n                var _onDirDeleted = function() {\n                    console.log(\"dir deleted, skip to next one if any\");\n\n                    if (media_dirs.length > 0) {\n\n                        self.deleteAllMedia(project_name, is_project_deleted, media_dirs);\n\n                    } else {\n                        console.log(\"All media deleted\");\n\n                        //update database, set all media values to empty string\n                        // for this project (if project not deleted)\n                        if (!is_project_deleted) {\n                            $.when(EC.Update.emptyMediaValues(hierarchy_forms, project_id)).then(function() {\n                                //EC.Entries.allMediaDeletedFeedback(true);\n                                deferred.resolve();\n\n                            }, function(error) {\n                                //EC.Entries.allMediaDeletedFeedback(false);\n                                deferred.resolve();\n                                console.log(error);\n                            });\n                        } else {\n                            deferred.resolve();\n                            deferred = null;\n                        }\n\n                    }\n\n                };\n\n                var _onDirDeleteError = function(the_error) {\n                    console.log(JSON.stringify(the_error));\n                };\n\n                dir_entry.removeRecursively(_onDirDeleted, _onDirDeleteError);\n            };\n\n            var _onDirError = function(the_error) {\n\n                //if the directory is not found (error code 1), no files yet so\n                // skip to next media type\n                if (the_error.code === 1) {\n\n                    //skip to next folder if any\n                    console.log(\"no dir \" + dir + \", skip to next\");\n\n                    if (media_dirs.length > 0) {\n                        self.deleteAllMedia(project_name, is_project_deleted, media_dirs);\n                    } else {\n\n                        console.log(\"All media deleted\");\n\n                        //update database, set all media values to empty string\n                        // for this project (if project not deleted)\n                        if (!is_project_deleted) {\n                            $.when(EC.Update.emptyMediaValues(hierarchy_forms, project_id)).then(function() {\n                                //EC.Entries.allMediaDeletedFeedback(true);\n                                deferred.resolve();\n                                deferred = null;\n                            }, function() {\n                                //EC.Entries.allMediaDeletedFeedback(false);\n                                deferred.resolve();\n                                deferred = null;\n                            });\n                        } else {\n                            deferred.resolve();\n                            deferred = null;\n                        }\n\n                    }\n                }\n\n                console.log(JSON.stringify(the_error));\n            };\n\n            //get app private data path based on platform\n            switch(window.device.platform) {\n\n                case EC.Const.ANDROID:\n                    app_private_dir_path = EC.Const.ANDROID_APP_PRIVATE_URI;\n                    break;\n                case EC.Const.IOS:\n                    app_private_dir_path = \"file://\" + EC.Const.IOS_APP_PRIVATE_URI;\n                    break;\n            }\n\n            console.log(app_private_dir_path + dir + project_name);\n\n            //get app private dir (Android) for the media of this project\n            window.resolveLocalFileSystemURL(app_private_dir_path + dir + project_name, _onDirSuccess, _onDirError);\n\n            return deferred.promise();\n\n        };\n\n        return module;\n    }(EC.File));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.File = EC.File || {};\nEC.File = (function (module) {\n    'use strict';\n\n    module.hasBackup = function (the_project_name) {\n\n        var filename = the_project_name + '.txt';\n        var backup_path;\n        var forms_data = [];\n        var deferred = new $.Deferred();\n\n        window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, gotFS, gotFSfail);\n\n        function gotFS(the_fileSystem) {\n\n            console.log(JSON.stringify(the_fileSystem));\n\n            backup_path = the_fileSystem.root.fullPath;\n\n            the_fileSystem.root.getFile(filename, {\n                create: false,\n                exclusive: false\n            }, gotBackupSuccess, gotBackupFail);\n\n        }\n\n        function gotBackupSuccess() {\n            deferred.resolve();\n        }\n\n        function gotBackupFail() {\n            deferred.reject();\n        }\n\n        function gotFSfail(the_error) {\n            console.log(the_error);\n        }\n\n        return deferred.promise();\n\n    };\n\n    return module;\n\n}(EC.File));\n","/*global $, jQuery, LocalFileSystem*/\nvar EC = EC || {};\nEC.File = EC.File || {};\nEC.File = (function (module) {\n    'use strict';\n\n    /* IOS\n     *\n     * Move files from temporary (tmp) folder to persistent (Documents) folder\n     *\n     *\n     * subfolders:\n     * /images\n     * /audios\n     * /videos\n     *\n     * /<project_name>\n     *\n     *  @param {array} the_files - array of file objects like:\n     * {\n     *      type: <input type>,\n     *      ref: <input ref>,\n     *      cached: <file path on the filesystem for cached files>,\n     *      stored: <file path on the filesystem for stored files>\n     * }\n     *\n     * @return void, but it triggers a recursive call to itself after each file is\n     * moved successfully.\n     *\n     * When all files are saved, it calls EC.Inputs.buildRows() to save all the input\n     * fields related to this form and media to the db\n     */\n\n    var filenameToTimestamp;\n\n    module.move = function (the_files, is_branch_flag) {\n\n        //Get media directory based on the type of file\n        function _getMediaDir(the_file_type) {\n\n            var type = the_file_type;\n            var dir;\n\n            switch (type) {\n\n                case EC.Const.PHOTO:\n                    dir = EC.Const.PHOTO_DIR;\n                    break;\n\n                case EC.Const.AUDIO:\n                    dir = EC.Const.AUDIO_DIR;\n                    break;\n\n                case EC.Const.VIDEO:\n                    dir = EC.Const.VIDEO_DIR;\n                    break;\n            }\n\n            return dir;\n\n        }\n\n        var files = the_files;\n        var is_branch = is_branch_flag;\n\n        //get details for current file\n        var file = files.shift();\n\n        //keep track of timestamp as Cordova iOS returns a weird filename which is always\n        // the same per 'session'\n        if (!filenameToTimestamp) {\n            filenameToTimestamp = [];\n        }\n\n        console.log('files: ' + JSON.stringify(file));\n\n        var cached_filepath = file.cached;\n        var stored_filepath = file.stored;\n        var parts;\n        var filename;\n        var filename_parts;\n        var extension;\n        var ref = file.ref;\n        var destination = _getMediaDir(file.type);\n\n        console.log();\n\n        if (cached_filepath === '' || cached_filepath === undefined) {\n\n            //we do not have a cached file to move, skip to next file (if any)\n            if (files.length === 0) {\n\n                //all files saved, build and save the rows\n                if (is_branch) {\n                    //save rows for branch form\n                    EC.BranchInputs.buildRows();\n                }\n                else {\n                    //save rows for main form\n                    EC.Inputs.buildRows();\n                }\n\n            }\n            else {\n\n                EC.File.move(files, is_branch);\n\n            }\n        }\n        else {\n\n            console.log('cached filepath: ' + JSON.stringify(cached_filepath));\n\n            //we have a cache file to move\n            parts = cached_filepath.split('/');\n            filename = parts[parts.length - 1];\n            filename_parts = filename.split('.');\n            extension = filename_parts[filename_parts.length - 1];\n\n            //request temporary folder from file system\n            window.requestFileSystem(LocalFileSystem.TEMPORARY, 0, gotFS, fail);\n\n        }\n\n        console.log('stored filepath:' + stored_filepath);\n\n        function gotFS(the_file_system) {\n\n            //create a directory reader to read files inside the temporary folder\n            var fs = the_file_system;\n            var dir = fs.root.createReader();\n            dir.readEntries(onDirReadSuccess, onDirReadError);\n\n            function onDirReadSuccess(the_dir_entries) {\n\n                var dir_entries = the_dir_entries;\n                var i;\n                var iLength = dir_entries.length;\n\n                //loop all the files in the temporary directory to find the one we want to move\n                for (i = 0; i < iLength; i++) {\n\n                    console.log('dir_entries[i].name' + dir_entries[i].name);\n                    console.log('filename' + filename);\n\n                    //if the current file name matches the file name we want to save, move the file\n                    if (dir_entries[i].name === filename) {\n\n                        fs.root.getFile(dir_entries[i].name, {\n                            create: false\n                        }, processEntry, onFileError);\n                    }\n                }\n\n                //process the file\n                function processEntry(the_entry) {\n                    console.log('processEntry called');\n\n                    var file = the_entry;\n                    var project_name = window.localStorage.project_name;\n                    var form_name = window.localStorage.form_name;\n                    var uuid = EC.Utils.getPhoneUUID();\n                    var stored_filename;\n\n                    //For photos, generate a timestamp as a file name (Cordova iOS always generates\n                    // the same names when capturing photos)\n                    var timestamp = parseInt(new Date().getTime() / 1000, 10);\n\n                    //Create a new file or override existing one\n                    if (stored_filepath === '') {\n\n                        //build file name in the format <form_name>_<ref>_<uuid>_filename\n                        stored_filename = form_name + '_' + ref + '_' + uuid + '_' + timestamp + '.' + extension;\n\n                    }\n                    else {\n\n                        parts = stored_filepath.split('/');\n                        stored_filename = parts[parts.length - 1];\n\n                        console.log('stored_filename' + stored_filename);\n                    }\n\n                    //persistent storage on iOS is the 'Documents' folder in the app sandbox\n                    window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, onIOSRFSSuccess, onIOSRFSError);\n\n                    function onIOSRFSSuccess(the_fileSystem) {\n\n                        console.log('onIOSRFSSuccess called');\n\n                        var entry = the_fileSystem.root;\n                        var project_dir = window.localStorage.project_name;\n\n                        console.log('destination + project_dir ' + destination + project_dir);\n\n                        //create a directory for this project if it does not exist (destination is the\n                        // media folder: images, audios, videos)\n                        entry.getDirectory(destination + project_dir, {\n                            create: true,\n                            exclusive: false\n                        }, onGetIOSDirectorySuccess, onGetIOSDirectoryFail);\n\n                        function onGetIOSDirectorySuccess(the_dir) {\n\n                            file.moveTo(the_dir, stored_filename, onMovedOK, onMovedFail);\n\n                            function onMovedOK(success) {\n\n                                console.log('files length:' + files.length);\n                                console.log(JSON.stringify(files));\n\n                                //map file names to timestamp (for IOS Photos only)\n                                filenameToTimestamp.push({\n                                    filename: filename,\n                                    timestamp: timestamp\n                                });\n\n                                //save next file or trigger callback to save the row\n                                if (files.length === 0) {\n\n                                    console.log('no more files to save, build rows');\n\n                                    //all files saved, build and save the rows\n                                    if (is_branch) {\n                                        //save rows for branch form\n                                        EC.BranchInputs.buildRows(filenameToTimestamp.slice(0));\n\n                                    }\n                                    else {\n                                        //save rows for main form\n                                        EC.Inputs.buildRows(filenameToTimestamp.slice(0));\n\n                                    }\n\n                                    filenameToTimestamp = null;\n\n                                }\n                                else {\n                                    //save next file\n                                    console.log('move another file');\n                                    EC.File.move(files, is_branch);\n                                }\n\n                                console.log('file move OK : ' + JSON.stringify(success));\n                            }\n\n                            function onMovedFail(error) {\n                                console.log('onMovedFail:' + JSON.stringify(error));\n                            }\n\n                        }\n\n                        function onGetIOSDirectoryFail(error) {\n                            console.log('Error creating directory ' + error.code);\n                        }\n\n                    }\n\n                    function onIOSRFSError(error) {\n                        console.log(error);\n                    }\n                }\n\n            }//onDirReadSuccess\n\n            function onDirReadError(error) {\n                console.log('onDirReadError: ' + JSON.stringify(error));\n            }//onDirReadError\n\n            function onFileError(error) {\n                console.log('onFileError ' + JSON.stringify(error));\n            }//onFileError\n\n        }//gotFS\n\n        function fail(error) {\n            console.log('fail' + JSON.stringify(error));\n        }//fail\n\n    };\n    //moveFile\n\n    return module;\n\n}(EC.File));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, LocalFileSystem*/\nvar EC = EC || {};\nEC.File = EC.File || {};\nEC.File = ( function(module) {\"use strict\";\n\n\t\t/*\n\t\t * Move the video file from sd card folder to app cache folder changing the file name to the current timestamp (video extension will be always .mp4)\n\t\t */\n\t\tvar video_path;\n\t\tvar stored_filename;\n\t\tvar cached_filename;\n\t\tvar is_branch;\n\t\tvar deferred;\n\n\t\tmodule.moveVideo = function(the_video_path, the_cache_video_uri, is_branch_flag) {\n\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tvideo_path = the_video_path;\n\n\t\t\tis_branch = is_branch_flag;\n\n\t\t\tcached_filename = (the_cache_video_uri === \"\") ? EC.Utils.getTimestamp() + \".mp4\" : the_cache_video_uri;\n\n\t\t\tfunction onLFSSuccess(the_video_file_entry) {\n\n\t\t\t\tfunction gotFS(the_file_system) {\n\n\t\t\t\t\tvar fs = the_file_system;\n\n\t\t\t\t\tconsole.log(fs);\n\n\t\t\t\t\t//move file to fs.root(directory entry pointing to \"tmp\" folder)\n\t\t\t\t\tthe_video_file_entry.moveTo(fs.root, cached_filename, function(success) {\n\n\t\t\t\t\t\tdeferred.resolve(cached_filename);\n\n\t\t\t\t\t}, function(error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tfunction fail(error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t}\n\n\t\t\t\t//request temporary folder from file system\n\t\t\t\twindow.requestFileSystem(LocalFileSystem.TEMPORARY, 0, gotFS, fail);\n\t\t\t}\n\n\t\t\tfunction onLFSError(error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\n\t\t\t//get file entry resolving file full path (prepending \"file://\" as on IOS the full path is not an URI)\n\t\t\twindow.resolveLocalFileSystemURL(\"file://\" + video_path, onLFSSuccess, onLFSError);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.File));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/*\n * @module EC\n */\nvar EC = EC || {};\n\n/* Remove one or more files from a project recursively \n *\n * @submodule File\n * @method remove\n * @param {string} the_project_name - the name of the project\n * @param {array} files - array of file names and media type like:\n *\n * {value: <the_filenemae>, type: <the_media_type>}\n *\n */\nEC.File = EC.File || {};\nEC.File = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar project_name;\n\t\tvar files = [];\n\t\tvar self;\n\t\tvar rows_deleted;\n\t\tvar deferred;\n\n\t\tmodule.remove = function(the_project_name, the_files) {\n\n\t\t\tself = this;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\t//get files details\n\t\t\tproject_name = the_project_name;\n\t\t\tfiles = the_files;\n\n\t\t\t//remove 1 file at a time recursively\n\t\t\t_removeOneFile();\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\tvar _removeOneFile = function() {\n\n\t\t\t//get a single file\n\t\t\tvar file = files.shift();\n\t\t\tvar filename = file.value;\n\t\t\tvar type = file.type;\n\t\t\tvar dir;\n\t\t\tvar full_path;\n\n\t\t\t//get directory the file is saved in based on its type (photo, audio, video)\n\t\t\tswitch(type) {\n\n\t\t\t\tcase EC.Const.PHOTO:\n\t\t\t\t\tdir = EC.Const.PHOTO_DIR;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.AUDIO:\n\t\t\t\t\tdir = EC.Const.AUDIO_DIR;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.VIDEO:\n\t\t\t\t\tdir = EC.Const.VIDEO_DIR;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\t//get full path to file based on platform\n\t\t\tswitch(window.device.platform) {\n\n\t\t\t\tcase EC.Const.ANDROID:\n\t\t\t\t\tfull_path = EC.Const.ANDROID_APP_PRIVATE_URI + dir + project_name + \"/\" + filename;\n\t\t\t\t\tbreak;\n\t\t\t\tcase EC.Const.IOS:\n\t\t\t\t\t\n\t\t\t\t\t//on iOS we need to prepend \"file://\" to get file object for deletion\n\t\t\t\t\tfull_path = 'file://' + EC.Const.IOS_APP_PRIVATE_URI + dir + project_name + \"/\" + filename;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconsole.log(\"file full path: \" + full_path);\n\n\t\t\t//get file entry\n\t\t\twindow.resolveLocalFileSystemURL(full_path, _onGetFileSuccess, _onGetFileError);\n\t\t};\n\n\t\tvar _onGetFileSuccess = function(the_file_entry) {\n\n\t\t\tvar file_entry = the_file_entry;\n\n\t\t\tfile_entry.remove(_onRemoveSuccess, _onRemoveError);\n\t\t};\n\n\t\tvar _onGetFileError = function(the_error) {\n\t\t\tconsole.log(\"Error getting file: \" + JSON.stringify(the_error));\n\t\t};\n\n\t\tvar _onRemoveSuccess = function(the_entry) {\n\n\t\t\tconsole.log(\"File removed: \" + JSON.stringify(the_entry));\n\n\t\t\t//delete next file (if any)\n\t\t\tif (files.length > 0) {\n\t\t\t\t//recursive call to remove next file\n\t\t\t\t_removeOneFile();\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//All files removed\n\t\t\t\tEC.Notification.showToast(EC.Localise.getTranslation(\"all_media_deleted\"), \"short\");\n\t\t\t\tdeferred.resolve();\n\t\t\t}\n\t\t};\n\n\t\tvar _onRemoveError = function(the_error) {\n\t\t\tconsole.log(\"Error: \" + JSON.stringify(the_error));\n\t\t\tEC.Notification.showToast(EC.Localise.getTranslation(\"generic_error\"), \"short\");\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.File));\n\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, LocalFileSystem, FileReader*/\n\n/**\n * @method restoreFromBackup Read a backup file and insert all the data to the\n * the local database\n *\n * @param {Object} the_project_name project name\n * @param {Object} the_project_id project id on local database\n */\nvar EC = EC || {};\nEC.File = EC.File || {};\nEC.File = ( function(module) {\n\t\t\"use strict\";\n\n\t\tmodule.restoreFromBackup = function(the_project_name, the_project_id) {\n\n\t\t\tvar filename = the_project_name + \".txt\";\n\t\t\tvar backup_path;\n\t\t\tvar forms_data = [];\n\t\t\tvar branch_data = {};\n\t\t\tvar branch_form_names = [];\n\t\t\tvar project_id = the_project_id;\n\t\t\tvar deferred = new $.Deferred();\n\n\t\t\tfunction fail(the_error) {\n\t\t\t\tconsole.log(the_error);\n\t\t\t\tif (the_error.code === 1) {\n\t\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"no_backup_saved\"));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//get hold of backup file (must be in the public storage folder root (Android\n\t\t\t// only, not possible on iOS))\n\t\t\tfunction gotFS(the_fileSystem) {\n\n\t\t\t\tbackup_path = the_fileSystem.root.fullPath;\n\n\t\t\t\tthe_fileSystem.root.getFile(filename, {\n\t\t\t\t\tcreate : false,\n\t\t\t\t\texclusive : false\n\t\t\t\t}, function(fileEntry) {\n\n\t\t\t\t\t//got the file entry\n\t\t\t\t\tfileEntry.file(function(file) {\n\n\t\t\t\t\t\t//read the file as text\n\t\t\t\t\t\treadAsText(file);\n\t\t\t\t\t}, fail);\n\t\t\t\t}, fail);\n\n\t\t\t\t//When we got the file, read content and save data to db\n\t\t\t\tfunction readAsText(file) {\n\n\t\t\t\t\tvar reader = new FileReader();\n\n\t\t\t\t\t//When the file has been read write data to DB\n\t\t\t\t\treader.onloadend = function(evt) {\n\n\t\t\t\t\t\tconsole.log(\"Read as text\");\n\t\t\t\t\t\tconsole.log(evt.target.result);\n\n\t\t\t\t\t\tforms_data = JSON.parse(evt.target.result);\n\t\t\t\t\t\tconsole.log(forms_data);\n\n\t\t\t\t\t\t/* get branch data from last element of data array (if any).Branch entries are\n\t\t\t\t\t\t * not nested within each hierarchy entry but appended at the end. They are\n\t\t\t\t\t\t * mapped to the unique branch form name each branch input gets\n\t\t\t\t\t\t *\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif (forms_data[forms_data.length - 1].has_branches === true) {\n\t\t\t\t\t\t\tbranch_data = forms_data.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//insert hierarchy entries per each form recursively\n\t\t\t\t\t\t$.when(EC.Create.insertAllFormsData(forms_data, branch_data)).then(function() {\n\n\t\t\t\t\t\t\tconsole.log(\"Hierarchy entries restored\");\n\n\t\t\t\t\t\t\t//do we have any branches? - last element of forms_data array contains all the\n\t\t\t\t\t\t\t// branches\n\t\t\t\t\t\t\tif (branch_data.branch_data_rows.length > 0) {\n\n\t\t\t\t\t\t\t\t//get branches details\n\t\t\t\t\t\t\t\tbranch_form_names = branch_data.branch_form_names;\n\n\t\t\t\t\t\t\t\t//get local branch form ids and branch inputs ids to map the backup branch data\n\t\t\t\t\t\t\t\t// against\n\t\t\t\t\t\t\t\t$.when(EC.Select.getBranchFormLocalIDs(project_id, branch_form_names)).then(function(the_mapped_branch_forms) {\n\t\t\t\t\t\t\t\t\t$.when(EC.Select.getBranchInputsLocalIDs(project_id)).then(function(the_mapped_input_ids) {\n\n\t\t\t\t\t\t\t\t\t\tconsole.log(the_mapped_branch_forms);\n\t\t\t\t\t\t\t\t\t\tconsole.log(the_mapped_input_ids);\n\n\t\t\t\t\t\t\t\t\t\t//insert all the branch backup data into the ec_branch_data table\n\t\t\t\t\t\t\t\t\t\t$.when(EC.Create.insertBranchDataRows(branch_data, the_mapped_branch_forms, the_mapped_input_ids)).then(function() {\n\n\t\t\t\t\t\t\t\t\t\t\t// console.log(\"Branches rows restored\");\n\t\t\t\t\t\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\t//read file as text\n\t\t\t\t\treader.readAsText(file);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twindow.requestFileSystem(LocalFileSystem.PERSISTENT, 0, gotFS, fail);\n\n\t\t\treturn deferred.promise();\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.File));\n","/*global $, jQuery, cordova, device, FileTransfer*/\nvar EC = EC || {};\nEC.File = EC.File || {};\nEC.File = (function (module) {\n    'use strict';\n\n    var filename = '';\n    var upload_URL = '';\n    var project_name = '';\n    var media_dir = '';\n    var media_type = '';\n    var _id = '';\n    var self;\n    var is_branch_file;\n\n    module.uploadFile = function (the_file_row, the_media_dir) {\n\n        console.log('the_filename: ' + the_file_row.value);\n\n        var ft = new FileTransfer();\n        var file_URI;\n        var app_private_dir;\n        var options = {};\n        var uuid = EC.Utils.getPhoneUUID();\n        var project_id = parseInt(window.localStorage.project_id, 10);\n\n        var _doUpload = function () {\n\n            project_name = window.localStorage.project_name;\n            filename = the_file_row.value;\n            _id = the_file_row._id;\n            media_dir = the_media_dir;\n\n            //add query parameters based on the type of file. URLs are set by\n            // the server API\n            switch (media_dir) {\n\n                case EC.Const.PHOTO_DIR:\n                    upload_URL += ('?type=thumbnail&phoneID=' + uuid);\n\n                    console.log('Upload URL for thumbnail: ' + upload_URL);\n                    media_type = EC.Const.PHOTO;\n\n                    //branch or hierarchy?\n                    if (EC.Upload.is_branch_image) {\n                        is_branch_file = true;\n                    }\n\n                    break;\n\n                case EC.Const.AUDIO_DIR:\n\n                    upload_URL += ('?type=audio&phoneID=' + uuid);\n                    media_type = EC.Const.AUDIO;\n\n                    console.log('Upload URL for audio: ' + upload_URL);\n                    //branch or hierarchy?\n                    if (EC.Upload.is_branch_audio) {\n                        is_branch_file = true;\n                    }\n                    break;\n\n                case EC.Const.VIDEO_DIR:\n\n                    upload_URL += ('?type=video&phoneID=' + uuid);\n                    media_type = EC.Const.VIDEO;\n\n                    console.log('Upload URL for video: ' + upload_URL);\n                    if (EC.Upload.is_branch_video) {\n                        is_branch_file = true;\n                    }\n                    break;\n            }\n\n            console.log('filename:' + JSON.stringify(filename));\n\n            //get app private dir based on platform\n            switch (window.device.platform) {\n                case EC.Const.ANDROID:\n                    app_private_dir = EC.Const.ANDROID_APP_PRIVATE_URI;\n                    break;\n                case EC.Const.IOS:\n                    app_private_dir = EC.Const.IOS_APP_PRIVATE_URI;\n                    break;\n            }\n\n            //set options for multipart entity file\n            options.mimeType = '';\n            options.fileKey = 'name';\n            options.fileName = filename;\n\n            if (window.device.platform === EC.Const.IOS) {\n                //options.chunkedMode = false;\n            }\n\n            //build file full path\n            file_URI = app_private_dir + media_dir + project_name + '/' + filename;\n\n            console.log('file_URI: ' + JSON.stringify(file_URI));\n\n            /*\n             * in the future we might need this, to show a proper upload\n             * feedback\n             */\n            ft.onprogress = function (progressEvent) {\n                // if (progressEvent.lengthComputable) {\n                // loadingStatus.setPercentage(progressEvent.loaded /\n                // progressEvent.total);\n                // } else {\n                // loadingStatus.increment();\n                // }\n                //console.log(progressEvent);\n                //console.log(loadingStatus);\n            };\n\n            //perform the upload\n            ft.upload(file_URI, upload_URL, _onFileUploadSuccess, _onFileUploadError, options);\n        };\n\n        self = this;\n        upload_URL = EC.Upload.getUploadURL();\n        is_branch_file = false;\n\n        //set upload URL for this project if not in localStorage yet\n        if (!EC.Utils.isChrome() && !upload_URL) {\n            $.when(EC.Select.getUploadURL(project_id)).then(function (the_project_url) {\n                //enable upload data button\n                console.log('Project URL is: ' + the_project_url);\n                upload_URL = the_project_url;\n                EC.Upload.setUploadURL(the_project_url);\n                _doUpload();\n            });\n        }\n        else {\n            _doUpload();\n        }\n\n    };\n\n    var _onFileUploadSuccess = function (response) {\n\n        console.log(JSON.stringify(response));\n\n        //update flag for this file row to indicate it has been synced to the\n        // server\n        $.when(EC.Update.flagOneFileAsSynced(_id, is_branch_file)).then(function () {\n\n            //upload another file (if any) of the same media type\n            EC.Upload.uploadNextFile(media_type);\n\n        });\n\n    };\n\n    var _onFileUploadError = function (error) {\n\n        console.log(JSON.stringify(error));\n\n        EC.Notification.hideProgressDialog();\n        EC.Notification.showAlert(EC.Localise.getTranslation('error'), EC.Localise.getTranslation('upload_error'));\n\n        EC.Upload.handleMedia();\n    };\n\n    return module;\n\n}(EC.File));\n","/* global cordova, Papa, JSZip */\nvar EC = EC || {};\nEC.File = EC.File || {};\nEC.File = (function (module) {\n    'use strict';\n\n    //currently Android only\n    module.writeProjectDataAsCSV = function (the_project_name, the_data) {\n\n        var deferred = new $.Deferred();\n        var export_dir;\n        var filename;\n        var csv;\n        var zip;\n        var zip_content;\n        var data = the_data;\n        var project_name = the_project_name;\n\n        function fail(error) {\n            console.log(error);\n        }\n\n        function onGotFS(filesystem) {\n            //filesystem is a handler to <sdcard>, emulated or real it does not matter\n\n            //create app directory in externalstorage if it does not exist\n            filesystem.getDirectory(export_dir, {\n                create: true,\n                exclusive: false\n            }, onCreateDirSuccess, fail);\n\n            function onCreateDirSuccess(filesystem) {\n                //inside this function, filesystem is <sdcard>/<app_name>-export with app_name sanitised from special chars\n\n                function gotFileEntry(fileEntry) {\n\n                    function gotFileWriter(writer) {\n\n                        writer.onwritestart = function () {\n                        };\n\n                        writer.onwriteend = function (evt) {\n                            //file written successfully,\n                            console.log('Content of file:' + zip_content);\n                            deferred.resolve({\n                                filename: filename,\n                                folder: export_dir\n                            });\n                        };\n                        //write content to file\n                        writer.write(zip_content);\n                    }\n\n                    fileEntry.createWriter(gotFileWriter, fail);\n                }\n\n                filesystem.getFile(filename, {\n                    create: true,\n                    exclusive: false\n                }, gotFileEntry, fail);\n            }\n        }\n\n        //get export dir name before doing anything\n        $.when(EC.Utils.getExportDirName()).then(function (the_dir) {\n\n            var i;\n            var iLength;\n            console.log(the_dir);\n            export_dir = the_dir;\n\n            //JSZip API https://stuk.github.io/jszip/\n            zip = new JSZip();\n\n            //zip file name is the project name\n            filename = project_name + '.zip';\n\n            //loop each form\n            iLength = data.length;\n\n            //generate a csv file per each form\n            for (i = 0; i < iLength; i++) {\n\n                //parse JSON to CSV\n                csv = Papa.unparse(data[i].entries, {\n                    quotes: true,\n                    delimiter: ',',\n                    newline: '\\r\\n'\n                });\n                console.log(csv);\n\n                //add file (use form name as filename) to master zip file\n                zip.file(data[i].name + '.csv', csv);\n            }\n\n            //generate zip file containing all the forms\n            zip_content = zip.generate({type: 'blob', compression: 'STORE'});\n\n            //start writing zip file to disk\n            window.resolveLocalFileSystemURL(cordova.file.externalRootDirectory, onGotFS, fail);\n        });\n\n        return deferred.promise();\n\n    };\n    return module;\n}(EC.File));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/*\n *\t@module EC\n @submodule BranchInputs\n *\n */\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = (function (module) {\n    'use strict';\n\n    var project_id;\n    var branch_form_name;\n    var self;\n\n\n    module.getInputAt = function (the_position) {\n\n        var index = the_position - 1;\n        self = this;\n\n        return self.branch_inputs[index];\n    };\n\n    module.getPrimaryKeyRefPosition = function () {\n\n        var i;\n        var iLenght = self.branch_inputs.length;\n        self = this;\n\n        //look for the position of the primary key\n        for (i = 0; i < iLenght; i++) {\n\n            if (parseInt(self.branch_inputs[i].is_primary_key, 10) === 1) {\n\n                return self.branch_inputs[i].position;\n            }\n        }\n    };\n\n    /**\n     * get list of inputs for the branch form specified\n     */\n    module.getList = function (the_branch_form_name, the_project_id) {\n\n        var branch_edit_position = window.localStorage.branch_edit_position;\n        branch_form_name = the_branch_form_name;\n        project_id = the_project_id;\n\n        //get all the branch inputs for the branch form\n        $.when(EC.Select.getBranchInputs(branch_form_name, project_id)).then(function (branch_inputs, has_jumps) {\n\n            //set branch inputs in memory\n            EC.BranchInputs.setInputs(branch_inputs, has_jumps);\n\n            //render first input on the list or the selected position (-1) if we are editing\n            EC.BranchInputs.prepareFirstInput((branch_edit_position === undefined) ? branch_inputs[0] : branch_inputs[branch_edit_position - 1]);\n        });\n\n    };\n\n    module.setInputs = function (the_branch_inputs, the_has_jumps_flag) {\n\n        self = this;\n        self.branch_inputs = the_branch_inputs;\n        window.localStorage.branch_inputs_total = self.branch_inputs.length;\n\n        //set flag to indicate if this form has or not any jumps\n        window.localStorage.branch_form_has_jumps = (the_has_jumps_flag) ? 1 : 0;\n\n    };\n\n    module.getInputs = function () {\n        return this.branch_inputs;\n    };\n\n    module.getFormDetails = function (the_input, the_value, the_project_id) {\n        EC.Select.getBranchFormDetails(the_input, the_value, the_project_id);\n    };\n\n    module.setCachedBranchEntryKeys = function (the_branch_form_name, the_primary_keys) {\n\n        var primary_keys = the_primary_keys;\n        var branch_form_name = the_branch_form_name;\n        var all_branches_keys;\n        var current_branch_form_primary_keys;\n        var is_branch_form_cached = false;\n        var i;\n        var iLength;\n\n        //try to get branch_primary_keys object if it exists in LocalStorage\n        try {\n            all_branches_keys = JSON.parse(window.localStorage.cached_branch_entry_keys);\n        } catch (error) {\n\n            all_branches_keys = [];\n        }\n\n        iLength = all_branches_keys.length;\n\n        if (iLength > 0) {\n\n            //get cached primary keys for this branch form only\n            for (i = 0; i < iLength; i++) {\n\n                if (all_branches_keys[i].branch_form_name === branch_form_name) {\n\n                    is_branch_form_cached = true;\n\n                    current_branch_form_primary_keys = all_branches_keys[i].primary_keys;\n\n                    //add branch_primary keys to keys already in LocalStorage\n                    current_branch_form_primary_keys = current_branch_form_primary_keys.concat(primary_keys).unique();\n\n                    all_branches_keys[i].primary_keys = current_branch_form_primary_keys;\n\n                    window.localStorage.cached_branch_entry_keys = JSON.stringify(all_branches_keys);\n                }\n\n            }\n\n            //if the current branch form is not found in the cache, then add it\n            if (!is_branch_form_cached) {\n\n                //current branch form  not cached yet, add it to cached_branch_entry_keys global object\n                all_branches_keys.push({\n                    branch_form_name: branch_form_name,\n                    primary_keys: primary_keys\n                });\n\n                window.localStorage.cached_branch_entry_keys = JSON.stringify(all_branches_keys);\n\n            }\n\n        } else {\n\n            //window.localStorage.cached_branch_entry_keys is empty so this is the first branch form for this main form, add it straight away\n            all_branches_keys.push({\n                branch_form_name: branch_form_name,\n                primary_keys: primary_keys\n            });\n\n            window.localStorage.cached_branch_entry_keys = JSON.stringify(all_branches_keys);\n\n        }\n\n    };\n\n    module.getCachedBranchEntryKeys = function (the_branch_form_name) {\n\n        var branch_form_name = the_branch_form_name;\n        var all_branches_keys;\n        var i;\n        var iLength;\n        var test;\n\n        try {\n\n            all_branches_keys = JSON.parse(window.localStorage.cached_branch_entry_keys);\n\n        } catch (error) {\n\n            all_branches_keys = [];\n        }\n\n        iLength = all_branches_keys.length;\n\n        if (iLength > 0) {\n\n            for (i = 0; i < iLength; i++) {\n\n                if (all_branches_keys[i].branch_form_name === branch_form_name) {\n\n                    test = all_branches_keys[i].primary_keys;\n\n                    console.log(test, true);\n\n                    return all_branches_keys[i].primary_keys;\n                }\n\n            }\n\n        } else {\n\n            return [];\n        }\n\n    };\n\n    module.getJumpDestinationPosition = function (the_ref) {\n\n        var i;\n        var iLenght = this.branch_inputs.length;\n        var ref = the_ref;\n\n        //look for the position of the specified ref\n        for (i = 0; i < iLenght; i++) {\n            if (ref === this.branch_inputs[i].ref) {\n                return this.branch_inputs[i].position;\n            }\n        }\n    };\n\n    return module;\n\n}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/*\n *\t@module EC\n    @submodule BranchInputs\n *\n * Route back user from a branch form to the linked hierararchy form, clearing cached branch data\n * \n */\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\tmodule.backToHierarchyForm = function() {\n\n\t\t\tvar inputs;\n\t\t\tvar current_input;\n\t\t\tvar current_input_position;\n\t\t\tvar page;\n\n\t\t\tinputs = JSON.parse(window.localStorage.inputs);\n\t\t\tcurrent_input_position = parseInt(window.localStorage.current_position, 10);\n\t\t\tcurrent_input = inputs[current_input_position - 1];\n\n\t\t\t//clear branch data cache\n\t\t\twindow.localStorage.removeItem(\"branch_current_position\");\n\t\t\twindow.localStorage.removeItem(\"branch_form_has_jumps\");\n\t\t\twindow.localStorage.removeItem(\"branch_form_name\");\n\t\t\twindow.localStorage.removeItem(\"branch_inputs_total\");\n\t\t\twindow.localStorage.removeItem(\"branch_inputs_trail\");\n\t\t\twindow.localStorage.removeItem(\"branch_inputs_values\");\n\t\t\twindow.localStorage.removeItem(\"branch_form_id\");\n\t\t\twindow.localStorage.removeItem(\"branch_edit_hash\");\n\t\t\twindow.localStorage.removeItem(\"branch_edit_key_value\");\n\t\t\twindow.localStorage.removeItem(\"branch_edit_type\");\n\n\t\t\twindow.localStorage.back_from_branch = 1;\n\n\t\t\tpage = EC.Const.INPUT_VIEWS_DIR + current_input.type + EC.Const.HTML_FILE_EXT;\n\n\t\t\t//EC.Inputs.renderInput(current_input);\n\t\t\tEC.Routing.changePage(page);\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\n/*\n * @method bindBackBtn set back button label to go back from branch form to linked hierarchy form\n */\n\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\tmodule.bindBackBtn = function(is_data_saved) {\n\n\t\t\tvar self = this;\n\t\t\tvar back_btn = $(\"div[data-role='header'] div[data-href='back-btn']\");\n\t\t\tvar back_btn_label = back_btn.find(\"span.main-form-name\");\n\t\t\tvar form_name = window.localStorage.form_name;\n\n\t\t\t//set back button label to go back to main form\n\t\t\tback_btn_label.text(\"Back to \" + form_name.trunc(EC.Const.FORM_NAME_MAX_LENGTH));\n\n\t\t\tback_btn.off().one('vclick', function(evt) {\n\n\t\t\t\tif (is_data_saved) {\n\t\t\t\t\t//go back to main form input\n\t\t\t\t\tself.backToHierarchyForm();\n\t\t\t\t} else {\n\t\t\t\t\t//id data are not saved, ask confirmation to user before proceeding\n\t\t\t\t\tEC.Notification.askConfirm(EC.Localise.getTranslation(\"exit\"), EC.Localise.getTranslation(\"exit_confirm\"), \"EC.BranchInputs.backToHierarchyForm\");\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n *\t@module EC\n *  @submodule BranchInputs\n *\n */\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\tvar self;\n\t\tvar branch_current_position;\n\t\tvar is_jump_found;\n\t\t\n\t\t/*\n\t\t * @function _checkJumps check if there is any jump to perform based on the input value and jumps mapped to that input\n\t\t */\n\t\tvar _checkJumps = function(the_jumps, the_current_value) {\n\n\t\t\tvar jumps = the_jumps;\n\t\t\tvar i;\n\t\t\tvar iLength = jumps.length;\n\t\t\tvar branch_destination_position;\n\t\t\tvar branch_destination;\n\t\t\tvar current_value = the_current_value;\n\t\t\tvar branch_inputs_total = window.localStorage.branch_inputs_total;\n\n\t\t\t//if not any jump conditions match, set destination to the next input as default\n\t\t\tbranch_destination_position = branch_current_position + 1;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\t//check if we jump always\n\t\t\t\tif (jumps[i].jump_when === EC.Const.JUMP_ALWAYS) {\n\t\t\t\t\t\n\t\t\t\t\tis_jump_found = true;\n\t\t\t\t\tbranch_destination = jumps[i].jump_to;\n\t\t\t\t\tbranch_destination_position = (branch_destination === EC.Const.END_OF_FORM) ? branch_inputs_total : self.getJumpDestinationPosition(branch_destination);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t//check if we jump whan a value is not selected\n\t\t\t\tif (jumps[i].jump_when === EC.Const.JUMP_FIELD_IS_BLANK && (current_value === null || current_value === EC.Const.NO_OPTION_SELECTED)) {\n\t\t\t\t\t\n\t\t\t\t\tis_jump_found = true;\n\t\t\t\t\tbranch_destination = jumps[i].jump_to;\n\t\t\t\t\tbranch_destination_position = (branch_destination === EC.Const.END_OF_FORM) ? branch_inputs_total : self.getJumpDestinationPosition(branch_destination);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (jumps[i].jump_when === EC.Const.JUMP_VALUE_IS && current_value.toString() === jumps[i].jump_value.toString()) {\n\t\t\t\t\t\n\t\t\t\t\tis_jump_found = true;\n\t\t\t\t\tbranch_destination = jumps[i].jump_to;\n\t\t\t\t\tbranch_destination_position = (branch_destination === EC.Const.END_OF_FORM) ? branch_inputs_total : self.getJumpDestinationPosition(branch_destination);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (jumps[i].jump_when === EC.Const.JUMP_VALUE_IS_NOT && current_value.toString() !== jumps[i].jump_value.toString()) {\n\t\t\t\t\t\n\t\t\t\t\tis_jump_found = true;\n\t\t\t\t\tbranch_destination = jumps[i].jump_to;\n\t\t\t\t\tbranch_destination_position = (branch_destination === EC.Const.END_OF_FORM) ? branch_inputs_total : self.getJumpDestinationPosition(branch_destination);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//override current_input_position with the position of the input set by the jump (-1 because we are adding +1 later)\n\t\t\tbranch_current_position = branch_destination_position - 1;\n\t\t\t\n\t\t\treturn branch_destination;\n\t\t};\n\t\t\n\t\t/*\n\t\t * @method gotoNextPage load next input into view, checking for jumps etc.\n\t\t */\n\t\tmodule.gotoNextPage = function(evt, the_current_value) {\n\n\t\t\tvar branch_current_input;\n\t\t\tvar current_value = the_current_value;\n\t\t\tvar next_branch_input;\n\t\t\tvar next_page;\n\t\t\tvar options;\n\t\t\tvar i;\n\t\t\tvar iLength;\n\t\t\tvar obj;\n\t\t\tvar branch_destination;\n\t\t\tvar branch_destination_position;\n\t\t\tvar jumps;\n\t\t\tvar is_branch_genkey_hidden = EC.Utils.isBranchFormGenKeyHidden();\n\t\t\tvar next_branch_value;\n\t\t\tvar is_checkbox = false;\n\t\t\t\n\t\t\tself = this;\n\t\t\tbranch_current_position = parseInt(window.localStorage.branch_current_position, 10);\n\t\t\t\n\t\t\t//get value from object in the case of a dropdown/radio (object is like {label:\"<label>\", index:\"<value>\"})\n\t\t\tif (current_value.hasOwnProperty(\"value\")) {\n\t\t\t\tcurrent_value = current_value.value;\n\t\t\t}\n\t\t\t\n\t\t\t//if current value is an array, we have checkbox values to parse and check each of them against jumps\n\t\t\tif (Array.isArray(current_value)) {\n\t\t\t\tis_checkbox = true;\n\t\t\t}\n\n\t\t\t//check if we have reached the end of the form\n\t\t\tif (branch_current_position === self.branch_inputs.length) {\n\t\t\t\tnext_page = EC.Const.BRANCH_VIEWS_DIR + EC.Const.BRANCH_SAVE_CONFIRM_VIEW;\n\t\t\t} else {\n\n\t\t\t\t//check if the current input triggers a jump\n\t\t\t\tbranch_current_input = self.getInputAt(branch_current_position);\n\n\t\t\t\tif (parseInt(branch_current_input.has_jump, 10) === 1) {\n\n\t\t\t\t\t//get jumps\n\t\t\t\t\tjumps = EC.Utils.parseJumpString(branch_current_input.jumps);\n\n\t\t\t\t\t//if we have an arry of values (checkboxes) check each of them if it triggers a jump\n\t\t\t\t\tif (is_checkbox) {\n\n\t\t\t\t\t\tis_jump_found = false;\n\t\t\t\t\t\tiLength = current_value.length;\n\n\t\t\t\t\t\t//loop each selected value until the first jump is found (or no more elements to check against)\n\t\t\t\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\t\t\t\tbranch_destination = _checkJumps(jumps, current_value[i].value);\n\t\t\t\t\t\t\tif (is_jump_found) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//single value\n\t\t\t\t\t\tbranch_destination = _checkJumps(jumps, current_value);\n\t\t\t\t\t}\n\n\t\t\t\t}//if has jump\n\n\t\t\t\tif (branch_destination === EC.Const.END_OF_FORM) {\n\t\t\t\t\tnext_page = EC.Const.BRANCH_VIEWS_DIR + EC.Const.BRANCH_SAVE_CONFIRM_VIEW;\n\t\t\t\t} else {\n\n\t\t\t\t\tnext_branch_input = self.getInputAt(branch_current_position + 1);\n\n\t\t\t\t\t/*\n\t\t\t\t\t * if is_genkey_hidden = 1, the from creator decided to hide the auto genkey\n\t\t\t\t\t * The nasty form builder allows users to drag the primary key input fields to any position (lol)\n\t\t\t\t\t * therefore we have to test each input if it is a primary key field\n\t\t\t\t\t * We have to skip the next input (from the user) but add an entry to inputs_values, inputs_trail with the UUID\n\t\t\t\t\t *\n\t\t\t\t\t */\n\n\t\t\t\t\tif (is_branch_genkey_hidden && next_branch_input.is_primary_key === 1) {\n\n\t\t\t\t\t\t//add skipped genkey entry also in inputs_trail\n\t\t\t\t\t\tself.pushInputsTrail(next_branch_input);\n\n\t\t\t\t\t\t//add an entry with UUID to inputs_values if we are entering a new entry\n\t\t\t\t\t\tnext_branch_value = EC.Utils.getGenKey();\n\n\t\t\t\t\t\t//cache next value in localStorage\n\t\t\t\t\t\tself.setCachedInputValue(next_branch_value, branch_current_position + 1, next_branch_input.type, next_branch_input.is_primary_key);\n\n\t\t\t\t\t\t//go to the next  input AFTER the hidden primary key (if it exists, otherwise the save confirm page)\n\t\t\t\t\t\tnext_branch_input = self.getInputAt(branch_current_position + 2);\n\t\t\t\t\t\tif (!next_branch_input) {\n\n\t\t\t\t\t\t\tnext_page = EC.Const.BRANCH_VIEWS_DIR + EC.Const.BRANCH_SAVE_CONFIRM_VIEW;\n\n\t\t\t\t\t\t\t//TODO check this???\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//update current input position in session (store confirm screen will get a position = array.length)\n\t\t\t\t\t\twindow.localStorage.branch_current_position = branch_current_position + 2;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//update current input position in session (store confirm screen will get a position = array.length)\n\t\t\t\t\t\twindow.localStorage.branch_current_position = branch_current_position + 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (next_branch_input) {\n\t\t\t\t\t\tnext_page = EC.Const.BRANCH_VIEWS_DIR + EC.Const.BRANCH_PREFIX + next_branch_input.type + EC.Const.HTML_FILE_EXT;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tEC.Routing.changePage(next_page);\n\n\t\t\t//avoid events triggering multiple times\n\t\t\tevt.preventDefault();\n\n\t\t};\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\tmodule.gotoPrevPage = function(evt) {\n\n\t\t\tvar self = this;\n\t\t\tvar branch_current_position = parseInt(window.localStorage.branch_current_position, 10);\n\t\t\tvar branch_inputs_trail = JSON.parse(window.localStorage.branch_inputs_trail);\n\t\t\tvar prev_page;\n\t\t\tvar prev_input_position = branch_inputs_trail[branch_inputs_trail.length - 1].position;\n\t\t\tvar prev_input = self.getInputAt(prev_input_position);\n\t\t\tvar is_genkey_hidden = EC.Utils.isBranchFormGenKeyHidden();\n\n\t\t\t//skip prev input (from user) if it is a hidden auto genkey\n\t\t\tif (is_genkey_hidden && prev_input.is_primary_key === 1) {\n\n\t\t\t\tprev_input_position = branch_inputs_trail[branch_inputs_trail.length - 2].position;\n\t\t\t\tprev_input = self.getInputAt(prev_input_position);\n\n\t\t\t\t//update current input position in session (store confirm screen will get a position = array.length)\n\t\t\t\twindow.localStorage.branch_current_position = branch_current_position - 2;\n\n\t\t\t\t//remove last  entry from branch_inputs_trail\n\t\t\t\tself.popInputsTrail();\n\n\t\t\t} else {\n\n\t\t\t\t//update current input position in session\n\t\t\t\twindow.localStorage.branch_current_position = prev_input_position;\n\n\t\t\t}\n\n\t\t\t//remove last  entry from branch_inputs_trail\n\t\t\tself.popInputsTrail();\n\n\t\t\tprev_page = EC.Const.BRANCH_VIEWS_DIR + EC.Const.BRANCH_PREFIX + prev_input.type + EC.Const.HTML_FILE_EXT;\n\n\t\t\tEC.Routing.changePage(prev_page);\n\n\t\t\t//avoid events triggering multiple times\n\t\t\tevt.preventDefault();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/*\n *@module EC\n *@submodule BranchInputs\n *\n */\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\n\t\t\"use strict\";\n\n\t\tmodule.onNextBtnTapped = function(e, the_input) {\n\n\t\t\tvar self = this;\n\t\t\tvar wls = window.localStorage;\n\t\t\tvar branch_input = the_input;\n\t\t\tvar branch_edit_id = wls.branch_edit_id || \"\";\n\t\t\tvar branch_edit_type = wls.branch_edit_type || \"\";\n\t\t\tvar branch_form = JSON.parse(wls.branch_form);\n\t\t\t//get input value(based on input type and layout)\n\t\t\tvar current_value = EC.BranchInputs.getCurrentValue(branch_input.type);\n\t\t\tvar branch_current_position = wls.branch_current_position;\n\t\t\tvar branch_cached_value = EC.Inputs.getCachedInputValue(branch_current_position);\n\t\t\tvar validation = self.validateValue(branch_input, current_value, branch_current_position);\n\n\t\t\t//back to same screen if invalid value\n\t\t\tif (!validation.is_valid) {\n\t\t\t\t//warn user about the type of error\n\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(validation.message));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//When editing, if the value of a field triggering a jump was changed, disable\n\t\t\t// intermediate \"Store Edit\" button from now on\n\t\t\tif (wls.branch_edit_mode && parseInt(branch_input.has_jump, 10) === 1) {\n\t\t\t\tif (!EC.Inputs.valuesMatch(branch_cached_value, current_value, branch_input.type)) {\n\t\t\t\t\t//set flag as from now until saving the form, store edit from an intermediate\n\t\t\t\t\t// screen is disabled\n\t\t\t\t\twls.branch_has_new_jump_sequence = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//cache current value in localStorage\n\t\t\tself.setCachedInputValue(current_value, branch_current_position, branch_input.type, branch_input.is_primary_key);\n\n\t\t\tself.pushInputsTrail(branch_input);\n\n\t\t\t//remove flag that helps to handle back button when user is just dismissing\n\t\t\t// barcode scanner\n\t\t\twindow.localStorage.removeItem('is_dismissing_barcode');\n\n\t\t\tself.gotoNextPage(e, current_value);\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n *\t@module EC\n *  @submodule BranchInputs\n *\n */\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\tmodule.onPrevBtnTapped = function(e, the_input) {\n\n\t\t\tvar self = this;\n\t\t\tvar branch_input = the_input;\n\t\t\tvar branch_inputs_total = self.branch_inputs.length;\n\t\t\tvar branch_current_value = self.getCurrentValue(branch_input.type);\n\t\t\tvar branch_current_position = window.localStorage.branch_current_position;\n\t\t\tvar branch_cached_value = EC.Inputs.getCachedInputValue(branch_current_position);\n\n\t\t\t//When editing, if the value of a field triggering a jump was changed, disable intermediate \"Store Edit\" button from now on\n\t\t\tif (window.localStorage.branch_edit_mode && parseInt(branch_input.has_jump, 10) === 1) {\n\t\t\t\tif (!EC.Inputs.valuesMatch(branch_cached_value, branch_current_value, branch_input.type)) {\n\t\t\t\t\t//set flag as from now until saving the form, store edit from an intermediate screen is disabled\n\t\t\t\t\twindow.localStorage.branch_has_new_jump_sequence = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//check we are not coming back from #save-confirm page\n\t\t\tif (branch_current_position <= self.branch_inputs.length) {\n\n\t\t\t\t//cache current value in localStorage\n\t\t\t\tself.setCachedInputValue(branch_current_value, branch_current_position, branch_input.type, branch_input.primary_key);\n\t\t\t}\n\t\t\t\n\t\t\t//remove flag that helps to handle back button when user is just dismissing barcode scanner\n\t\t\twindow.localStorage.removeItem('is_dismissing_barcode');\n\n\t\t\tself.gotoPrevPage(e);\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n *\t@module EC\n *  @submodule BranchInputs\n *\n */\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\tmodule.popInputsTrail = function() {\n\n\t\t\tvar branch_inputs_trail;\n\n\t\t\ttry {\n\n\t\t\t\tbranch_inputs_trail = JSON.parse(window.localStorage.branch_inputs_trail);\n\n\t\t\t\tbranch_inputs_trail.pop();\n\n\t\t\t\twindow.localStorage.branch_inputs_trail = JSON.stringify(branch_inputs_trail);\n\n\t\t\t} catch(error) {\n\t\t\t}\n\n\t\t};\n\t\t//popInputsTrail\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n *\t@module EC\n    @submodule BranchInputs\n *\n */\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\tmodule.pushInputsTrail = function(the_input) {\n\n\t\t\tvar input = the_input;\n\n\t\t\tvar branch_inputs_trail;\n\n\t\t\t//catch Chrome error `Uncaught SyntaxError: Unexpected end of input` when parsing empty content\n\t\t\ttry {\n\t\t\t\tbranch_inputs_trail = JSON.parse(window.localStorage.branch_inputs_trail);\n\n\t\t\t} catch(error) {\n\n\t\t\t\t//Handle errors here\n\t\t\t\tbranch_inputs_trail = [];\n\n\t\t\t}\n\n\t\t\tbranch_inputs_trail.push({\n\t\t\t\tposition : input.position,\n\t\t\t\tlabel : input.label\n\n\t\t\t});\n\n\t\t\twindow.localStorage.branch_inputs_trail = JSON.stringify(branch_inputs_trail);\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n *\t@module EC\n    @submodule BranchInputs\n *\n */\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\tmodule.spliceInputsTrail = function(the_position) {\n\n\t\t\tvar position = parseInt(the_position, 10);\n\t\t\tvar branch_inputs_trail = JSON.parse(window.localStorage.branch_inputs_trail);\n\t\t\tvar i;\n\t\t\tvar iLength = branch_inputs_trail.length;\n\t\t\tvar index;\n\t\t\tvar how_many_to_remove;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\tif (branch_inputs_trail[i].position === position) {\n\n\t\t\t\t\tindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\thow_many_to_remove = iLength - index;\n\t\t\tbranch_inputs_trail.splice(index, how_many_to_remove);\n\t\t\twindow.localStorage.branch_inputs_trail = JSON.stringify(branch_inputs_trail);\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\tmodule.prepareFeedback = function(the_status, the_entry_key) {\n\n\t\t\tvar self = this;\n\t\t\tvar status = the_status;\n\t\t\tvar page = EC.Const.BRANCH_VIEWS_DIR + EC.Const.BRANCH_FEEDBACK_VIEW;\n\t\t\tvar branch_form = JSON.parse(window.localStorage.branch_form);\n\t\t\tvar entry_key = the_entry_key;\n\n\t\t\t//prepare feedback based on status\n\t\t\tif (status) {\n\t\t\t\tself.message = \"Branch entry saved successfully!\";\n\n\t\t\t\t/*\n\t\t\t\t * Cache entry key value for the branch form entry just saved. If the main form does not get saved (user leaves without saving)\n\t\t\t\t * we have to remove from the DB all the rows with that entry key value. This will work no matter how many branch forms we have\n\t\t\t\t * for a main (hierarchy) form. This array is cleared when either the form is saved or all its cached entries are deleted.\n\t\t\t\t */\n\t\t\t\tself.setCachedBranchEntryKeys(branch_form.name, [entry_key]);\n\n\t\t\t} else {\n\t\t\t\tself.message = \"Error saving data...please retry\";\n\t\t\t}\n\n\t\t\tEC.Routing.changePage(page);\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/*\n *\t@module EC\n @submodule BranchInputs\n *\n */\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\tmodule.prepareFirstInput = function(the_first_input) {\n\n\t\t\tvar self = this;\n\t\t\tvar first_input_position = 1;\n\t\t\tvar branch_input = the_first_input;\n\t\t\tvar page = EC.Const.BRANCH_VIEWS_DIR + EC.Const.BRANCH_PREFIX + branch_input.type + EC.Const.HTML_FILE_EXT;\n\t\t\tvar is_genkey_hidden = EC.Utils.isBranchFormGenKeyHidden();\n\n\t\t\t//set array to keep track of input navigation (get pre-built one when editing)\n\t\t\tif (!window.localStorage.branch_edit_mode) {\n\t\t\t\twindow.localStorage.branch_inputs_trail = [];\n\t\t\t} else {\n\t\t\t\t//update inputs trail to remove all the elements past the current edit position\n\t\t\t\tself.spliceInputsTrail(window.localStorage.branch_edit_position);\n\t\t\t}\n\n\t\t\t//update current position in session depending on mode\n\t\t\twindow.localStorage.branch_current_position = (window.localStorage.branch_edit_mode) ? window.localStorage.branch_edit_position : first_input_position;\n\n\t\t\t/*\n\t\t\t * If if the genkey hidden flag is set to 1 and the input is a primary key input, do not render this input on screen but:\n\t\t\t *\n\t\t\t * - just cache it with an auto genkey in localStorage if we are entering a new entry\n\t\t\t * - do nothing if we are editing, ad the inputs_values array will be set already (it is set when listing the entry values)\n\t\t\t */\n\t\t\tif (is_genkey_hidden === 1 && branch_input.is_primary_key === 1) {\n\n\t\t\t\t//skip input\n\t\t\t\twindow.localStorage.branch_current_position = first_input_position + 1;\n\n\t\t\t\t//if we are entering a new entry add an auto generated key in input_values\n\t\t\t\tif (!window.localStorage.branch_edit_mode) {\n\t\t\t\t\twindow.localStorage.branch_inputs_values = JSON.stringify([{\n\t\t\t\t\t\t_id : \"\",\n\t\t\t\t\t\ttype : \"\",\n\t\t\t\t\t\tvalue : EC.Utils.getGenKey(),\n\t\t\t\t\t\tposition : 1,\n\t\t\t\t\t\tis_primary_key : 1\n\t\t\t\t\t}]);\n\t\t\t\t}\n\t\t\t\t//get next input to set page we have to go to (first_input_position is equal to current_position-1, so...)\n\t\t\t\tbranch_input = self.branch_inputs[first_input_position];\n\t\t\t\tpage = EC.Const.BRANCH_VIEWS_DIR + EC.Const.BRANCH_PREFIX + branch_input.type + EC.Const.HTML_FILE_EXT;\n\t\t\t}\n\n\t\t\tEC.Routing.changePage(page);\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device*/\n\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\tmodule.renderFeedbackView = function() {\n\n\t\t\tvar self = this;\n\t\t\tvar form_id = window.localStorage.form_id;\n\t\t\tvar form_name = window.localStorage.form_name;\n\t\t\tvar branch_form = JSON.parse(window.localStorage.branch_form);\n\t\t\tvar add_another_entry_btn = $('div#branch-feedback div#branch-input-feedback div#add-entry-branch-form');\n\t\t\tvar back_to_main_btn = $('div#branch-feedback div#branch-input-feedback div#back-to-main-form');\n\t\t\tvar project_id = window.localStorage.project_id;\n\t\t\tvar current_form_branches;\n\n\t\t\t//handle back button with no alert on this page\n\t\t\tself.bindBackBtn(true);\n\n\t\t\t//remove branch flags from localStorage\n\t\t\twindow.localStorage.removeItem(\"branch_current_position\");\n\t\t\twindow.localStorage.removeItem(\"branch_edit_id\");\n\t\t\twindow.localStorage.removeItem(\"branch_edit_mode\");\n\t\t\twindow.localStorage.removeItem(\"branch_edit_position\");\n\t\t\twindow.localStorage.removeItem(\"branch_inputs_trail\");\n\t\t\twindow.localStorage.removeItem(\"branch_inputs_values\");\n\n\t\t\t//show branch form name in the top bar\n\t\t\t$('div.branch-form-name div.ui-block-a span.ui-btn-active span.ui-btn-inner').text(branch_form.name);\n\n\t\t\t//Set text for buttons\n\t\t\tadd_another_entry_btn.find('span.entry').text(\"(\" + branch_form.name + \")\");\n\t\t\tback_to_main_btn.find('span.form-name-inline').text(form_name);\n\n\t\t\t//bind button to add another branch form to this entry\n\t\t\tadd_another_entry_btn.off().one('vclick', function(e) {\n\n\t\t\t\tEC.Notification.showProgressDialog();\n\t\t\t\t//get list of inputs for the branch form and render the first one on screen\n\t\t\t\tself.getList(branch_form.name, project_id);\n\t\t\t});\n\n\t\t\t//bind button to go back to main form input\n\t\t\tback_to_main_btn.off().one('vclick', function(e) {\n\t\t\t\t//go back to main form input\n\t\t\t\tself.backToHierarchyForm();\n\t\t\t});\n\t\t\tEC.Notification.hideProgressDialog();\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device*/\n/*\n *\t@module EC\n @submodule BranchInputs\n *\n */\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\t//render input calling the proper page and passing input attributes\n\t\tmodule.renderInput = function(the_input) {\n\n\t\t\t//get module context\n\t\t\tvar self = this;\n\t\t\tvar wls = window.localStorage;\n\t\t\tvar branch_input = the_input;\n\t\t\tvar branch_current_value;\n\t\t\tvar branch_current_position = parseInt(wls.branch_current_position, 10);\n\t\t\tvar branch_cached_value = self.getCachedInputValue(branch_current_position);\n\t\t\tvar back_btn = $(\"div#branch-\" + branch_input.type + \" div[data-role='header'] div[data-href='back-btn']\");\n\t\t\tvar back_btn_label = $(\"div[data-role='header'] div[data-href='back-btn'] span.form-name\");\n\t\t\tvar parent_key;\n\t\t\tvar rows_to_save = [];\n\t\t\tvar prev_btn = $('div.branch-input-nav-tabs div.ui-block-a.input-prev-btn');\n\t\t\tvar next_btn = $('div.branch-input-nav-tabs div.ui-block-c.input-next-btn');\n\t\t\tvar form_name = wls.form_name;\n\t\t\tvar branch_inputs_total = self.branch_inputs.length;\n\t\t\tvar branch_form = JSON.parse(wls.branch_form);\n\t\t\tvar is_genkey_hidden = EC.Utils.isBranchFormGenKeyHidden();\n\t\t\tvar branch_inputs_values;\n\t\t\tvar first_branch_input;\n\t\t\tvar is_prev_button_hidden = false;\n\n\t\t\tback_btn.off().on('vclick', function(e) {\n\n\t\t\t\t//TODO: when editing an existing branch form, go back to entry values list?\n\n\t\t\t\tif (wls.branch_edit_mode) {\n\t\t\t\t\tif (wls.branch_has_new_jump_sequence) {\n\t\t\t\t\t\tEC.Notification.askConfirm(EC.Localise.getTranslation(\"leaving_current_form\"), EC.Localise.getTranslation(\"exit_confirm\"), \"EC.Inputs.backToHierarchyForm\", false, branch_input, true);\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t//check if user is leaving after modifying a jump and neither \"Store Edit\", \"prev\" or \"next\" button were tapped\n\t\t\t\t\t\tif (parseInt(branch_input.has_jump, 10) === 1) {\n\n\t\t\t\t\t\t\tbranch_current_value = EC.Inputs.getCurrentValue(branch_input.type);\n\n\t\t\t\t\t\t\tif (!EC.Inputs.valuesMatch(branch_cached_value, branch_current_value, branch_input.type)) {\n\n\t\t\t\t\t\t\t\tEC.Notification.askConfirm(EC.Localise.getTranslation(\"leaving_current_form\"), EC.Localise.getTranslation(\"exit_confirm\"), \"EC.Inputs.backToHierarchyForm\", false, branch_input, true);\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tEC.Notification.askConfirm(EC.Localise.getTranslation(\"leaving_current_form\"), EC.Localise.getTranslation(\"save_before_leave\"), \"EC.Inputs.backToBranchEntryValuesList\", true, branch_input, true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tEC.Notification.askConfirm(EC.Localise.getTranslation(\"leaving_current_form\"), EC.Localise.getTranslation(\"save_before_leave\"), \"EC.Inputs.backToBranchEntryValuesList\", true, branch_input, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//not editing, go to entries list\n\t\t\t\t\tEC.Notification.askConfirm(EC.Localise.getTranslation(\"leaving_current_form\"), EC.Localise.getTranslation(\"save_before_leave\"), \"EC.Inputs.backToBranchEntryValuesList\", true, branch_input, true);\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tback_btn_label.text(\"Back to \" + form_name.trunc(EC.Const.FORM_NAME_MAX_LENGTH));\n\n\t\t\t//show branch form name in the top bar\n\t\t\t$('div.branch-form-name div.ui-block-a span.ui-btn-active span.ui-btn-inner').text(branch_form.name);\n\n\t\t\t//reset button visibility\n\t\t\t$(prev_btn, next_btn).removeClass(\"invisible\");\n\n\t\t\t//TODO :doe we need to -> skip input rendering if it is the preloader screen\n\t\t\tif (branch_current_position !== 0) {\n\n\t\t\t\t//check if we have a cached value for this input in session\n\t\t\t\tbranch_current_value = self.getCachedInputValue(branch_current_position).value;\n\n\t\t\t\t//check it the value is _skipp3d_ keyword\n\t\t\t\tbranch_current_value = (branch_current_value === EC.Const.SKIPPED) ? \"\" : branch_current_value;\n\n\t\t\t\t//if the input is either photo, audio or video, no default value will be available so we pass an empty object {cached: \"\", stored: \"\"}\n\t\t\t\tif (branch_input.type === EC.Const.PHOTO || branch_input.type === EC.Const.AUDIO || branch_input.type === EC.Const.VIDEO) {\n\n\t\t\t\t\tif (branch_current_value) {\n\t\t\t\t\t\tself.renderInputView(branch_input, branch_current_value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.renderInputView(branch_input, {\n\t\t\t\t\t\t\tcached : \"\",\n\t\t\t\t\t\t\tstored : \"\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//for normal inputs, render view passing the default value (or empty if not defined) if no input value is cached\n\t\t\t\t\tif (branch_current_value) {\n\t\t\t\t\t\tself.renderInputView(branch_input, branch_current_value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.renderInputView(branch_input, branch_input.default_value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//set next button to go to next input (if any)\n\t\t\tif (branch_current_position <= branch_inputs_total) {\n\n\t\t\t\t//Next button handler\n\t\t\t\tnext_btn.off().on('vclick', function(e) {\n\t\t\t\t\tself.onNextBtnTapped(e, branch_input);\n\t\t\t\t});\n\n\t\t\t\t//set previous button to fade to previous input (if any)\n\t\t\t\tif (branch_current_position - 1 > 0) {\n\n\t\t\t\t\t//check if the first input is a hidden genkey, in that case do not show prev button\n\t\t\t\t\tif (branch_current_position === 2) {\n\n\t\t\t\t\t\tbranch_inputs_values = JSON.parse(wls.branch_inputs_values);\n\t\t\t\t\t\tfirst_branch_input = branch_inputs_values[0];\n\n\t\t\t\t\t\tif (first_branch_input.is_primary_key === 1 && is_genkey_hidden === 1) {\n\n\t\t\t\t\t\t\t//hide prev button for first input of the form\n\t\t\t\t\t\t\tprev_btn.addClass(\"invisible\");\n\t\t\t\t\t\t\tis_prev_button_hidden = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//bind vclick event only if the button is not hidden\n\t\t\t\t\tif (!is_prev_button_hidden) {\n\t\t\t\t\t\t//handler for prev button, showing prev input\n\t\t\t\t\t\tprev_btn.off().on('vclick', function(e) {\n\t\t\t\t\t\t\tself.onPrevBtnTapped(e, branch_input);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//hide prev button for first input of the form\n\t\t\t\t\tprev_btn.addClass(\"invisible\");\n\n\t\t\t\t\t//reset inputs_trail in session\n\t\t\t\t\twls.removeItem('branch_inputs_trail');\n\t\t\t\t}\n\n\t\t\t\t//show store edit button if we are in \"editing mode\" and bind it to callback\n\t\t\t\tif (wls.branch_edit_mode) {\n\n\t\t\t\t\t$('div.store-edit').removeClass('hidden');\n\n\t\t\t\t\tif (branch_input.has_jump === 1) {\n\n\t\t\t\t\t\t// disable store edit button, to force the user to go through the form again to retain the jumps sequence\n\t\t\t\t\t\t$('div.store-edit').addClass('ui-disabled');\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t$('div.store-edit').removeClass('ui-disabled');\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//bind events with on(), as we need to submit again if the input does not validate successfully\n\t\t\t\t\t$('div.store-edit').off().on('vclick', function() {\n\n\t\t\t\t\t\tself.prepareStoreEdit(branch_current_value, branch_current_position, branch_input);\n\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//update completion percentage and bar for this form\n\t\t\tself.updateFormCompletion(branch_current_position, branch_inputs_total);\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n\n/*\n *\t@module EC\n *  @submodule BranchInputs\n *\n */\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\tmodule.renderInputView = function(the_branch_input, the_value) {\n\n\t\t\tvar branch_input = the_branch_input;\n\t\t\tvar branch_value = the_value;\n\n\t\t\t//render layout based on the input type\n\t\t\tswitch(branch_input.type) {\n\n\t\t\t\tcase EC.Const.TEXT:\n\n\t\t\t\t\tEC.BranchInputTypes.text(branch_value, branch_input);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.TEXTAREA:\n\n\t\t\t\t\tEC.BranchInputTypes.textarea(branch_value, branch_input);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.INTEGER:\n\n\t\t\t\t\tEC.BranchInputTypes.integer(branch_value, branch_input);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.DECIMAL:\n\n\t\t\t\t\tEC.BranchInputTypes.decimal(branch_value, branch_input);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.DATE:\n\n\t\t\t\t\tEC.BranchInputTypes.date(branch_value, branch_input);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.TIME:\n\n\t\t\t\t\tEC.BranchInputTypes.time(branch_value, branch_input);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.RADIO:\n\n\t\t\t\t\tEC.BranchInputTypes.radio(branch_value, branch_input);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.CHECKBOX:\n\n\t\t\t\t\tEC.BranchInputTypes.checkbox(branch_value, branch_input);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.DROPDOWN:\n\n\t\t\t\t\tEC.BranchInputTypes.dropdown(branch_value, branch_input);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.BARCODE:\n\n\t\t\t\t\tEC.BranchInputTypes.barcode(branch_value, branch_input);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.LOCATION:\n\n\t\t\t\t\tEC.BranchInputTypes.location(branch_value, branch_input);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.PHOTO:\n\n\t\t\t\t\tEC.BranchInputTypes.photo(branch_value, branch_input);\n\t\t\t\t\tbreak;\n\n\t\t\t\t//deal with audio recording\n\t\t\t\tcase EC.Const.AUDIO:\n\n\t\t\t\t\tEC.BranchInputTypes.audio(branch_value, branch_input);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.VIDEO:\n\n\t\t\t\t\tEC.BranchInputTypes.video(branch_value, branch_input);\n\t\t\t\t\tbreak;\n\n\t\t\t}//switch\n\n\t\t\t//remove progress dialog (triggered when loading inputs.html)\n\t\t\tEC.Notification.hideProgressDialog();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\tmodule.renderSaveConfirmView = function() {\n\n\t\t\tvar self = this;\n\t\t\tvar prev_btn = $('div#branch-save-confirm div.ui-grid-b div.ui-block-a.input-prev-btn');\n\t\t\tvar store_btn = $('div#branch-save-confirm div#branch-input-save-confirm div#store');\n\t\t\tvar store_edit_btn = $('div#branch-save-confirm div.store-edit');\n\t\t\tvar percentage_bar = $('div.ui-grid-b.branch-input-nav-tabs div.input-progress-bar div.progress.progress_tiny');\n\t\t\tvar percentage_txt = $('div.ui-grid-b.branch-input-nav-tabs div.input-progress-bar span.form-completion-percent');\n\t\t\tvar branch_inputs_total = self.branch_inputs.length;\n\t\t\tvar current_branch_input_position = parseInt(window.localStorage.branch_current_position, 10);\n\t\t\tvar branch_form = JSON.parse(window.localStorage.branch_form);\n\n\t\t\tself.bindBackBtn(false);\n\n\t\t\t//update completion percentage and bar for this form\n\t\t\tself.updateFormCompletion(branch_inputs_total + 1, branch_inputs_total, percentage_txt, percentage_bar);\n\n\t\t\t//show branch form name in the top bar\n\t\t\t$('div.branch-form-name div.ui-block-a span.ui-btn-active span.ui-btn-inner').text(branch_form.name);\n\n\t\t\t//reset back button visibility\n\t\t\tprev_btn.removeClass(\"invisible\");\n\n\t\t\t//handler for prev button, showing prev input\n\t\t\tprev_btn.off().on('vclick', function(e) {\n\t\t\t\tself.gotoPrevPage(e);\n\t\t\t});\n\n\t\t\t//show \"store\" or \"store edit\" button based on where we are editing or adding a new entry\n\t\t\tif (window.localStorage.branch_edit_mode) {\n\n\t\t\t\tstore_btn.hide();\n\n\t\t\t\t//enable store edit button (if the form has jumps it got disabled) and show it\n\t\t\t\tstore_edit_btn.removeClass('ui-disabled hidden');\n\n\t\t\t\t//bind event with one() to enforce a single submit\n\t\t\t\tstore_edit_btn.off().one('vclick', function(e) {\n\t\t\t\t\tself.onStoreValues();\n\t\t\t\t});\n\n\t\t\t} else {\n\n\t\t\t\tstore_btn.show();\n\n\t\t\t\t//hide store edit button\n\t\t\t\t$('div.store-edit').addClass('hidden');\n\n\t\t\t\t//bind event with one() to enforce a single submit\n\t\t\t\tstore_btn.off().one('vclick', function(e) {\n\t\t\t\t\tself.onStoreValues();\n\t\t\t\t});\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t//update completion percentage and bar for this branch form\n\t\t\tself.updateFormCompletion(branch_inputs_total + 1, branch_inputs_total);\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\tmodule.renderStoreEditFeedback = function(is_positive) {\n\n\t\t\t//EC.Notification.hideProgressDialog();\n\n\t\t\tif (is_positive) {\n\n\t\t\t\tEC.Notification.showToast(EC.Localise.getTranslation(\"edit_saved\"), \"short\");\n\n\t\t\t\t//remove flag that disable store edit from an intermediate screen\n\t\t\t\twindow.localStorage.removeItem(\"branch_has_new_jump_sequence\");\n\n\t\t\t\t//open branch entries list page\n\t\t\t\tEC.Routing.changePage(EC.Const.BRANCH_ENTRIES_LIST_VIEW);\n\t\t\t}\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/*\n *\t@module EC\n *  @submodule BranchInputs\n *\n */\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\tmodule.updateFormCompletion = function(the_position, the_length) {\n\n\t\t\tvar ratio = Math.ceil(100 * (the_position - 1) / the_length);\n\t\t\tvar percentage_bar = $('div.ui-grid-b.branch-input-nav-tabs div.input-progress-bar div.progress.progress_tiny');\n\t\t\tvar percentage_txt = $('div.ui-grid-b.branch-input-nav-tabs div.input-progress-bar span.form-completion-percent');\n\n\t\t\tpercentage_txt.text(ratio + \"%\");\n\t\t\tpercentage_bar.css(\"width\", ratio + \"%\");\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device*/\n\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\tmodule.amendSkippedValues = function() {\n\n\t\t\tvar self = this;\n\t\t\tvar wls = window.localStorage;\n\t\t\tvar i;\n\t\t\tvar j;\n\t\t\tvar iLength;\n\t\t\tvar jLength;\n\t\t\tvar max_skipped_position;\n\t\t\tvar branch_inputs_trail = [];\n\t\t\tvar branch_inputs_values = [];\n\t\t\tvar is_found;\n\t\t\tvar is_genkey_hidden = EC.Utils.isBranchFormGenKeyHidden();\n\n\t\t\tbranch_inputs_trail = JSON.parse(wls.branch_inputs_trail);\n\t\t\tbranch_inputs_values = JSON.parse(wls.branch_inputs_values);\n\n\t\t\tiLength = branch_inputs_values.length;\n\t\t\tjLength = branch_inputs_trail.length;\n\n\t\t\tmax_skipped_position = branch_inputs_trail[branch_inputs_trail.length - 1].position;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {//for each input in inputs_values\n\n\t\t\t\tis_found = false;\n\n\t\t\t\t//jumps can generate null values in the input_values array (when entering a new entry)\n\t\t\t\tif (branch_inputs_values[i] === null) {\n\t\t\t\t\tis_found = true;\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( j = 0; j < jLength; j++) {//for each input in inputs_trail\n\t\t\t\t\t\t//check if the branch input values is in the branch input trail array OR the input value is a hidden primary key value. In both case, the value needs to be saved\n\n\t\t\t\t\t\tif (parseInt(branch_inputs_values[i].position, 10) === branch_inputs_trail[j].position || (is_genkey_hidden === 1 && parseInt(branch_inputs_values[i].is_primary_key, 10) === 1 )) {\n\n\t\t\t\t\t\t\tis_found = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}// for each inputs_trail\n\t\t\t\t}\n\n\t\t\t\t//not found values (and null values)\n\t\t\t\t// TODO: why was I also checking for inputs_values[i].position < max_skipped_position???\n\t\t\t\tif (!is_found) {\n\t\t\t\t\tbranch_inputs_values[i].value = EC.Const.SKIPPED;\n\t\t\t\t}\n\n\t\t\t}//for each inputs_values\n\n\t\t\t//store the amended values in localStorage for saving\n\t\t\twls.branch_inputs_values = JSON.stringify(branch_inputs_values);\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device*/\n\n/*\n *\t@module EC\n *  @submodule BranchInputs\n *\n */\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\tmodule.buildRows = function(the_filenameToTimestamp) {\n\n\t\t\tvar self = this;\n\t\t\tvar i;\n\t\t\tvar branch_input;\n\t\t\tvar value_obj;\n\t\t\tvar value;\n\t\t\tvar _id;\n\t\t\tvar ref;\n\t\t\tvar rows = [];\n\t\t\tvar iLength = EC.BranchInputs.branch_inputs.length;\n\t\t\tvar key_position = EC.BranchInputs.getPrimaryKeyRefPosition();\n\t\t\tvar hierarchy_key_position = EC.Inputs.getPrimaryKeyRefPosition();\n\t\t\tvar parts;\n\t\t\tvar filename;\n\t\t\tvar filename_parts;\n\t\t\tvar extension;\n\t\t\tvar form_name = window.localStorage.form_name;\n\t\t\tvar uuid = EC.Utils.getPhoneUUID();\n\t\t\tvar form_id = window.localStorage.form_id;\n\t\t\tvar created_on = EC.Utils.getTimestamp();\n\t\t\tvar branch_form_name = window.localStorage.branch_form_name;\n\t\t\tvar ios_filenames = the_filenameToTimestamp;\n\t\t\tvar timestamp;\n\n\t\t\t//get parent key value for the current branch form\n\t\t\tvar current_branch_input_position = parseInt(window.localStorage.branch_current_position, 10);\n\n\t\t\t//get value of primary key for this branchform\n\t\t\tvar key_value = EC.BranchInputs.getCachedInputValue(key_position).value;\n\n\t\t\t/* Get key and value of primary key for the hierarchy entry of this branch form.\n\t\t\t * The hierarchy key value is the one cached, if the user edits it before saving the entry, it will need to be updated in the database\n\t\t\t * or lock the editing after inserting a branch form.\n\t\t\t */\n\t\t\tvar hierarchy_entry_key_value = EC.Inputs.getCachedInputValue(hierarchy_key_position).value;\n\t\t\tvar hierarchy_entry_key_ref = EC.Utils.getFormPrimaryKeyRef(form_id);\n\n\t\t\t//build rows to be saved - the text value for each input is saved in an array with corresponding indexes\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\t//get current value\n\t\t\t\tbranch_input = EC.BranchInputs.branch_inputs[i];\n\t\t\t\tvalue_obj = EC.BranchInputs.getCachedInputValue(branch_input.position);\n\n\t\t\t\t//save cached value OR \"\" when the value cannot be found\n\t\t\t\tvalue = value_obj.value || \"\";\n\n\t\t\t\t//_id is set only when we are editing, it is the _id of the current row in the database which will be updated\n\t\t\t\t_id = value_obj._id;\n\n\t\t\t\t//deal with media types to save the correct value (full path uri)\n\t\t\t\tif (branch_input.type === EC.Const.PHOTO || branch_input.type === EC.Const.VIDEO || branch_input.type === EC.Const.AUDIO) {\n\n\t\t\t\t\t//check whether the value is defined as media value {stored: \"<path>\", cached: \"<path>\"}\n\t\t\t\t\tif (value.hasOwnProperty(\"stored\")) {\n\n\t\t\t\t\t\tif (value.stored === \"\") {\n\n\t\t\t\t\t\t\t//we are saving a new media file path from the cached one (or an empty string if the file field was optional)\n\t\t\t\t\t\t\tif (value.cached !== \"\") {\n\n\t\t\t\t\t\t\t\t//build file name (in the format <form_name>_<ref>_<uuid>_filename) with the cached value\n\t\t\t\t\t\t\t\t//Cordova Camera API unfortunately returns the timestamp as a file name on Android only, on iOS a smart guy decided to use the same file name with an incremental index (lol)\n\n\t\t\t\t\t\t\t\tparts = value.cached.split('/');\n\t\t\t\t\t\t\t\tfilename = parts[parts.length - 1];\n\n\t\t\t\t\t\t\t\tswitch(window.device.platform) {\n\n\t\t\t\t\t\t\t\t\tcase EC.Const.ANDROID:\n\t\t\t\t\t\t\t\t\t\t//do nothing\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase EC.Const.IOS:\n\n\t\t\t\t\t\t\t\t\t\t//replace filename with <timestamp>.jpg as on IOS the Camera, Audio and Video capture is inconsistent and returns weird file names\n\t\t\t\t\t\t\t\t\t\t//not always the timestamp. We want to save the files using the timestamp as we do on Android (and following Epicollect+ filename schema)\n\t\t\t\t\t\t\t\t\t\tif (branch_input.type === EC.Const.PHOTO || branch_input.type === EC.Const.AUDIO || branch_input.type === EC.Const.VIDEO) {\n\n\t\t\t\t\t\t\t\t\t\t\t//get linked timestamp as we save the file using the timestamp as the file name\n\t\t\t\t\t\t\t\t\t\t\tfilename_parts = filename.split(\".\");\n\t\t\t\t\t\t\t\t\t\t\textension = filename_parts[filename_parts.length - 1];\n\n\t\t\t\t\t\t\t\t\t\t\ttimestamp = EC.Utils.getIOSFilename(ios_filenames, filename);\n\t\t\t\t\t\t\t\t\t\t\tfilename = timestamp + \".\" + extension;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvalue = form_name + \"_\" + branch_input.ref + \"_\" + uuid + \"_\" + filename;\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tvalue = \"\";\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t//use the existing stored path\n\t\t\t\t\t\t\tvalue = value.stored;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//value was not defined as media value: use case when user leaves a form halfway through but still wants to save. Save an empty object then\n\t\t\t\t\t\tvalue = \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\trows.push({\n\t\t\t\t\t_id : _id, //this is set only when we are editing\n\t\t\t\t\tinput_id : branch_input._id,\n\t\t\t\t\tform_id : branch_input.form_id,\n\t\t\t\t\tposition : branch_input.position,\n\t\t\t\t\thierarchy_entry_key_value : hierarchy_entry_key_value,\n\t\t\t\t\thierarchy_entry_key_ref : hierarchy_entry_key_ref,\n\t\t\t\t\tlabel : branch_input.label,\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tref : branch_input.ref,\n\t\t\t\t\tis_title : branch_input.is_title,\n\t\t\t\t\tentry_key : key_value,\n\t\t\t\t\ttype : branch_input.type,\n\t\t\t\t\tis_data_synced : 0,\n\t\t\t\t\tis_media_synced : 0,\n\t\t\t\t\tis_remote : 0,\n\t\t\t\t\tcreated_on : created_on\n\t\t\t\t});\n\n\t\t\t}//for each input\n\n\t\t\t//EC.Notification.showProgressDialog();\n\n\t\t\tconsole.log('rows');\n\t\t\tconsole.log(JSON.stringify(rows));\n\n\t\t\t//save/update values to database\n\t\t\tif (window.localStorage.branch_edit_mode) {\n\n\t\t\t\t$.when(EC.Update.commitBranchForm(rows)).then(function() {\n\n\t\t\t\t\twindow.localStorage.branch_edit_hash = '#entries?form=' + form_id + '&name=' + form_name + '&entry_key=&direction=' + EC.Const.EDITING;\n\n\t\t\t\t\t//set selected key value in localStorage to show list of values later\n\t\t\t\t\twindow.localStorage.branch_edit_key_value = key_value;\n\n\t\t\t\t\t//redirect to branch entries list page with positive flag\n\t\t\t\t\tEC.BranchInputs.renderStoreEditFeedback(true);\n\n\t\t\t\t}, function() {\n\t\t\t\t\tEC.BranchInputs.renderStoreEditFeedback(false);\n\t\t\t\t});\n\n\t\t\t} else {\n\n\t\t\t\t$.when(EC.Create.insertBranchFormValues(rows, key_value, hierarchy_entry_key_value)).then(function(entry_key) {\n\t\t\t\t\tEC.BranchInputs.prepareFeedback(true, entry_key);\n\t\t\t\t}, function() {\n\t\t\t\t\tEC.BranchInputs.prepareFeedback(false, null);\n\t\t\t\t});\n\t\t\t}\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\tmodule.buildRows = function() {\n\n\t\t\tvar self = this;\n\t\t\tvar i;\n\t\t\tvar branch_input;\n\t\t\tvar value;\n\t\t\tvar _id;\n\t\t\tvar ref;\n\t\t\tvar rows = [];\n\t\t\tvar iLength = EC.BranchInputs.branch_inputs.length;\n\t\t\tvar key_position = EC.BranchInputs.getPrimaryKeyRefPosition();\n\t\t\tvar parent_key_position = EC.Inputs.getPrimaryKeyRefPosition();\n\t\t\tvar parts;\n\t\t\tvar filename;\n\t\t\tvar form_name = window.localStorage.form_name;\n\t\t\tvar uuid = EC.Utils.getPhoneUUID();\n\t\t\tvar form_id = window.localStorage.form_id;\n\t\t\tvar created_on = EC.Utils.getTimestamp();\n\t\t\tvar branch_form_name = window.localStorage.branch_form_name;\n\n\t\t\t//get parent key value for the current branch form\n\t\t\tvar current_branch_input_position = parseInt(window.localStorage.branch_current_position, 10);\n\n\t\t\t//get value of primary key for this branchform\n\t\t\tvar key_value = EC.BranchInputs.getCachedInputValue(key_position).value;\n\n\t\t\t/* Get value of primary key for the parent entry of this branch form.\n\t\t\t * The parent key value is the one cached, if the user edits it before saving the entry, it will need to be updated in the database\n\t\t\t * or lock the editing after inserting a branch form\n\t\t\t */\n\n\t\t\tvar hierarchy_entry_key_value = EC.Inputs.getCachedInputValue(parent_key_position).value;\n\n\t\t\t//build rows to be saved - the text value for each input is saved in an array with corresponding indexes\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\t//get current value\n\t\t\t\tbranch_input = EC.BranchInputs.branch_inputs[i];\n\t\t\t\tvalue = EC.BranchInputs.getCachedInputValue(branch_input.position).value;\n\t\t\t\t_id = EC.BranchInputs.getCachedInputValue(branch_input.position)._id;\n\n\t\t\t\t//deal with media types to save the correct value (full path uri)\n\t\t\t\tif (branch_input.type === EC.Const.PHOTO || branch_input.type === EC.Const.VIDEO || branch_input.type === EC.Const.AUDIO) {\n\n\t\t\t\t\tconsole.log(\"value: \" + JSON.stringify(value));\n\n\t\t\t\t\tif (value.stored === \"\") {\n\n\t\t\t\t\t\t//we are saving a new media file path from the cached one (or an empty string if the file field was optional)\n\t\t\t\t\t\tif (value.cached !== \"\") {\n\n\t\t\t\t\t\t\t//build file name (in the format <form_name>_<ref>_<uuid>_filename) with the cached value\n\t\t\t\t\t\t\tparts = value.cached.split('/');\n\t\t\t\t\t\t\tfilename = parts[parts.length - 1];\n\n\t\t\t\t\t\t\tvalue = form_name + \"_\" + branch_input.ref + \"_\" + uuid + \"_\" + filename;\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvalue = \"\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t//use the existing stored path\n\t\t\t\t\t\tvalue = value.stored;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconsole.log('branch_input.type: ' + branch_input.type);\n\n\t\t\t\trows.push({\n\t\t\t\t\t_id : _id, //this is set only when we are editing\n\t\t\t\t\tinput_id : branch_input._id,\n\t\t\t\t\tform_id : branch_input.form_id,\n\t\t\t\t\tposition : branch_input.position,\n\t\t\t\t\thierarchy_entry_key_value : hierarchy_entry_key_value,\n\t\t\t\t\tlabel : branch_input.label,\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tref : branch_input.ref,\n\t\t\t\t\tis_title : branch_input.is_title,\n\t\t\t\t\tentry_key : key_value,\n\t\t\t\t\ttype : branch_input.type,\n\t\t\t\t\tis_data_synced : 0,\n\t\t\t\t\tis_media_synced : 0,\n\t\t\t\t\tis_remote : 0,\n\t\t\t\t\tcreated_on : created_on\n\t\t\t\t});\n\n\t\t\t}//for each input\n\n\t\t\tEC.Notification.showProgressDialog();\n\n\t\t\tconsole.log('rows');\n\t\t\tconsole.log(JSON.stringify(rows));\n\n\t\t\t//save/update values to database\n\t\t\tif (window.localStorage.branch_edit_mode) {\n\n\t\t\t\tEC.Update.commitBranchForm(rows);\n\t\t\t\twindow.localStorage.branch_edit_hash = '#entries?form=' + form_id + '&name=' + form_name + '&entry_key=&direction=' + EC.Const.EDITING;\n\n\t\t\t\t//set selected key value in localStorage to show list of values later\n\t\t\t\twindow.localStorage.branch_edit_key_value = key_value;\n\n\t\t\t} else {\n\n\t\t\t\tEC.Create.insertBranchFormValues(rows, key_value, hierarchy_entry_key_value);\n\t\t\t}\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device*/\n/*\n *\t@module EC\n*   @submodule BranchInputs\n *\n */\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\tmodule.prepareStoreEdit = function(the_current_value, the_current_position, the_input) {\n\n\t\t\tvar self = this;\n\t\t\tvar clone_value = \"\";\n\t\t\tvar validation = {};\n\t\t\tvar form_has_jumps;\n\t\t\tvar current_value = the_current_value;\n\t\t\tvar current_position = the_current_position;\n\t\t\tvar input = the_input;\n\n\t\t\t//disable to avoid double submit (not unbind, as if validation is wrong, I will have to re-bind again)\n\t\t\t$(this).addClass('ui-disabled');\n\n\t\t\tform_has_jumps = window.localStorage.form_has_jumps;\n\n\t\t\t//get input value(based on input type and layout)\n\t\t\tcurrent_value = EC.BranchInputs.getCurrentValue(input.type);\n\t\t\tcurrent_position = window.localStorage.branch_current_position;\n\n\t\t\t//if we need to check for a double entry, get clone value\n\t\t\tif (parseInt(input.has_double_check, 10) === 1) {\n\n\t\t\t\tclone_value = self.getCloneValue(input.type);\n\n\t\t\t}\n\n\t\t\t//validate input before going to next page\n\t\t\tvalidation = EC.Utils.isValidValue(input, current_value, clone_value);\n\n\t\t\t//check if the editing is valid\n\t\t\tif (!validation.is_valid) {\n\n\t\t\t\t//warn user about the type of error\n\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(validation.message));\n\n\t\t\t\t//re-enable button to allow user to try again\n\t\t\t\t$(this).removeClass('ui-disabled');\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//cache current value in localStorage\n\t\t\tself.setCachedInputValue(current_value, current_position, input.type, input.is_primary_key);\n\n\t\t\t//If this form has jump, edit the input_values array to set to _skipp3d_ all the values which are not part of the input_trail array\n\t\t\tif (form_has_jumps === '1') {\n\n\t\t\t\t//add current element on the view to inputs trail (as we are not tapping next)\n\t\t\t\tself.pushInputsTrail(input);\n\n\t\t\t\t//amend values skipped by the new jump sequence when editing\n\t\t\t\tself.amendSkippedValues();\n\t\t\t}\n\n\t\t\t//store data.\n\t\t\tself.storeData(self);\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\tmodule.saveValuesOnExit = function(the_current_input) {\n\n\t\t\tvar self = this;\n\t\t\tvar current_input = the_current_input;\n\t\t\t//get current value from the input currently on screen\n\t\t\tvar current_value = self.getCurrentValue(current_input.type);\n\t\t\tvar current_position = parseInt(window.localStorage.branch_current_position, 10);\n\t\t\tvar validation = self.validateValue(current_input, current_value, current_position);\n\n\t\t\t//back to same screen if invalid value\n\t\t\tif (!validation.is_valid) {\n\t\t\t\t//warn user about the type of error\n\t\t\t\tEC.Notification.hideProgressDialog();\n\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(validation.message));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//cache current value in localStorage\n\t\t\tself.setCachedInputValue(current_value, current_position, current_input.type, current_input.is_primary_key);\n\t\t\tself.pushInputsTrail(current_input);\n\n\t\t\tself.onStoreValues();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device*/\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\n\t\t\"use strict\";\n\n\t\tmodule.storeData = function(the_ctx) {\n\n\t\t\t//get context\n\t\t\tvar self = the_ctx;\n\t\t\tvar branch_media_files = [];\n\n\t\t\tvar getCachedMediaFiles = function() {\n\n\t\t\t\tvar branch_inputs_values = JSON.parse(window.localStorage.branch_inputs_values);\n\t\t\t\tvar iLength = branch_inputs_values.length;\n\t\t\t\tvar i;\n\t\t\t\tvar branch_input;\n\t\t\t\tvar value;\n\n\t\t\t\tvar files = [];\n\n\t\t\t\t//count how many media files we have to save\n\t\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\t\t//get current value\n\t\t\t\t\tbranch_input = EC.BranchInputs.branch_inputs[i];\n\t\t\t\t\tvalue = EC.BranchInputs.getCachedInputValue(branch_input.position).value;\n\n\t\t\t\t\tif (branch_input.type === EC.Const.PHOTO || branch_input.type === EC.Const.VIDEO || branch_input.type === EC.Const.AUDIO) {\n\t\t\t\t\t\t// If cache path is empty, we do not have a file to save for that input so skip\n\t\t\t\t\t\t// it\n\t\t\t\t\t\tif (value.cached !== \"\") {\n\t\t\t\t\t\t\tfiles.push({\n\t\t\t\t\t\t\t\ttype : branch_input.type,\n\t\t\t\t\t\t\t\tcached : value.cached,\n\t\t\t\t\t\t\t\tstored : value.stored,\n\t\t\t\t\t\t\t\tref : branch_input.ref\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}//for\n\n\t\t\t\t/*\n\t\t\t\t * Now we got all the file paths, so clear DOM from any references\n\t\t\t\t * otherwise on editing input some cache/stored file paths could be there and\n\t\t\t\t * that causes errors upon saving\n\t\t\t\t * as the EC.File.move() mehod will look for non-existent files\n\t\t\t\t */\n\n\t\t\t\tif (files.length > 0) {\n\t\t\t\t\t//audio\n\t\t\t\t\t$('div#branch-audio div#branch-input-audio input#cached-audio-uri').val('');\n\t\t\t\t\t$('div#branch-audio div#branch-input-audio input#stored-audio-uri').val('');\n\t\t\t\t}\n\n\t\t\t\treturn files;\n\t\t\t};\n\n\t\t\tbranch_media_files = getCachedMediaFiles();\n\n\t\t\tconsole.log('media_files.length= ' + branch_media_files.length);\n\n\t\t\t//Save data directly if no files are found (or we are using Chrome)\n\t\t\tif (branch_media_files.length === 0 || EC.Utils.isChrome()) {\n\n\t\t\t\tself.buildRows();\n\n\t\t\t}\n\t\t\telse {\n\n\t\t\t\t//save media files, when all are saved trigger buildRows();\n\t\t\t\tconsole.log(JSON.stringify(branch_media_files));\n\n\t\t\t\t//move branch media files, pass the is_branch flag as true to trigger\n\t\t\t\t// BRanchINputs,buildRows AFTER files are moved\n\t\t\t\tEC.File.move(branch_media_files, true);\n\t\t\t}\n\n\t\t};\n\n\t\t/** @method onStoreValues When the user tap the button to save data,\n\t\t *  check first we have a primary key to save, then take care of skipped (by a\n\t\t * jump) values\n\t\t */\n\t\tmodule.onStoreValues = function() {\n\n\t\t\tvar self = this;\n\n\t\t\t//check if the primary key field has a value (there are cases where jumps skip\n\t\t\t// the primary key field, so warn the user form cannot be saved)\n\t\t\tif (self.isEmptyPrimaryKey()) {\n\t\t\t\t//warn user\n\t\t\t\tEC.Notification.hideProgressDialog();\n\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"missing_pk\"));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (window.localStorage.branch_form_has_jumps === '1') {\n\t\t\t\t//amend input values to save, setting the keyword \"_skipp3d_\" to skipped fields\n\t\t\t\tself.amendSkippedValues();\n\t\t\t}\n\n\t\t\tself.storeData(self);\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*global $, jQuery, LocalFileSystem, Media, cordova*/\nvar EC = EC || {};\nEC.BranchInputTypes = EC.BranchInputTypes || {};\nEC.BranchInputTypes = (function (module) {\n    'use strict';\n\n    module.audio = function (the_value, the_input) {\n\n        var span_label = $('div#branch-audio div#branch-input-audio span.label');\n        var value = the_value;\n        var input = the_input;\n        var record_btn = $('div#branch-audio div#branch-input-audio div#start-btn');\n        var stop_btn = $('div#branch-audio div#branch-input-audio div#stop-btn');\n        var play_btn = $('div#branch-audio div#branch-input-audio div#play-btn');\n        var ongoing_recording_spinner = $('div#branch-audio div#branch-input-audio div#ongoing-recording-spinner');\n        var audio_feedback = $('div#branch-audio div#branch-input-audio p#audio-feedback');\n        var cached_audio_uri = $('div#branch-audio div#branch-input-audio input#cached-audio-uri');\n        var stored_audio_uri = $('div#branch-audio div#branch-input-audio input#stored-audio-uri');\n        var header_btns = $('div#branch-audio div.ui-header');\n        var current_path;\n        var audio_full_path_uri;\n        var cache_path;\n        var mediaRec;\n        var current_audio;\n\n        //update label text\n        span_label.text(input.label);\n\n        //Localise\n        if (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n            EC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n        }\n\n        //attach event handlers (removing old ones to avoid tiggering an event twice)\n        record_btn.off('vclick').one('vclick', recordAudio);\n        stop_btn.off('vclick');\n        play_btn.off('vclick').on('vclick', playAudio);\n\n        //if an audio file is stored add it to hidden input field, to be shown if no\n        // cached value is set\n        if (window.localStorage.edit_mode && value.stored === undefined) {\n\n            stored_audio_uri.val(value);\n            value = {\n                cached: '',\n                stored: value\n            };\n\n        }//if\n\n\n        //toggle 'play' button only if we have a file to play\n        if (!value.cached) {\n\n            if (value.stored) {\n\n                play_btn.removeClass('ui-disabled');\n\n                //build full path to get audio file from private app folder (depending on\n                // platform)\n                switch (window.device.platform) {\n                    case EC.Const.ANDROID:\n                        audio_full_path_uri = EC.Const.ANDROID_APP_PRIVATE_URI + EC.Const.AUDIO_DIR + window.localStorage.project_name + '/' + value.stored;\n                        break;\n                    case EC.Const.IOS:\n                        audio_full_path_uri = EC.Const.IOS_APP_PRIVATE_URI + EC.Const.AUDIO_DIR + window.localStorage.project_name + '/' + value.stored;\n                        break;\n                }\n\n                console.log('image_full_path_uri: ' + audio_full_path_uri);\n\n                current_path = audio_full_path_uri;\n\n                audio_feedback.text('Audio available');\n\n                console.log('current_path: ' + JSON.stringify(audio_full_path_uri));\n\n            }\n            else {\n\n                play_btn.addClass('ui-disabled');\n            }\n\n        }\n        else {\n\n            //we have a cached file to play, current path gets the cached value\n            play_btn.removeClass('ui-disabled');\n            current_path = cached_audio_uri.val();\n        }\n\n        console.log('value.stored ' + value.stored);\n\n        //If a cache value is set, add it to hidden field\n        //cached_audio_uri.val(value.cached || '');\n        console.log('cache_audio_uri: ' + cached_audio_uri.val());\n\n        //add store audio uri cache_path (if any)\n        stored_audio_uri.val(value.stored || '');\n\n        //reset recording buttons\n        record_btn.removeClass('enable');\n        stop_btn.addClass('ui-disabled');\n\n        //request temporary folder from file system based on platform\n        //todo this will probably change with the new Cordova iOS to match Android\n        if (window.device.platform === EC.Const.IOS) {\n\n            window.requestFileSystem(LocalFileSystem.TEMPORARY, 0, function (the_file_system) {\n\n                console.log(JSON.stringify(the_file_system));\n                cache_path = the_file_system.root.nativeURL;\n                console.log('nativeURL: ' + cache_path);\n\n\n                /* We need to provide the full path to the tmp folder to record an audio file\n                 *\n                 * iOS 7+ does not want 'file://' in the path to record an audio file\n                 *\n                 * if the path starts with 'file://', error thrown is\n                 * 'Failed to start recording using AvAudioRecorder'\n                 * so it is removed using slice(7);\n                 */\n                cache_path = cache_path.slice(7);\n            }, function (error) {\n                console.log(JSON.stringify(error));\n            });\n\n        }\n        else {\n            //Android only getting public cache directory\n            window.resolveLocalFileSystemURL(cordova.file.externalCacheDirectory, function (the_file_system) {\n\n                console.log(JSON.stringify(the_file_system));\n                cache_path = the_file_system.nativeURL;\n                console.log('nativeURL: ' + cache_path);\n\n            }, function (error) {\n                console.log(JSON.stringify(error));\n            });\n        }\n\n        //record audio\n        function recordAudio(e) {\n\n            var filename;\n\n            /*\n             * disable navigation buttons while recording, to avoid users to navigate away\n             * from the page causing the media object to stay open and impossible to release\n             */\n            header_btns.addClass('ui-disabled');\n\n            //disable player buttons while recording\n            stop_btn.removeClass('ui-disabled');\n            stop_btn.one('vclick', stopRecordAudio);\n            record_btn.addClass('ui-disabled');\n            play_btn.addClass('hidden');\n            ongoing_recording_spinner.removeClass('hidden');\n\n            switch (window.device.platform) {\n\n                case EC.Const.ANDROID:\n                    //build filename timestamp + mp4 (Cordova 2.9 sources have been modified manually\n                    // to record high quality audio)\n                    filename = EC.Utils.getTimestamp() + '.mp4';\n                    break;\n\n                case EC.Const.IOS:\n                    /*build filename timestamp + wav (iOS only records to files of type .wav and\n                     returns an error if the file name extension is not correct.)\n                     */\n                    filename = EC.Utils.getTimestamp() + '.wav';\n                    break;\n\n            }\n\n            //if there is a file cached already, we replace that one upon further recordings\n            if (!current_path) {\n                current_path = cache_path + filename;\n            }\n\n            console.log('Recording... - Full path: ' + current_path);\n\n            mediaRec = new Media(current_path,\n\n                // success callback\n                function onRecordingSuccess() {\n\n                    play_btn.removeClass('ui-disabled');\n                    audio_feedback.text('Audio available');\n                    console.log('recordAudio():Audio Success');\n                    cached_audio_uri.val(current_path);\n                },\n\n                // error callback\n                function onRecordingError(err) {\n                    console.log('recordAudio():Audio Error: ' + err.code);\n                });\n\n            // Record audio\n            mediaRec.startRecord();\n\n            e.preventDefault();\n            e.stopPropagation();\n\n        }//recordAudio\n\n        //stop recording\n        function stopRecordAudio(e) {\n\n            //re-enable navigation buttons\n            header_btns.removeClass('ui-disabled');\n\n            //enable player buttons\n            stop_btn.addClass('ui-disabled');\n            record_btn.removeClass('ui-disabled');\n            play_btn.removeClass('hidden ui-disabled');\n            ongoing_recording_spinner.addClass('hidden');\n\n            record_btn.one('vclick', recordAudio);\n\n            //stop recording and release resources\n            mediaRec.stopRecord();\n            mediaRec.release();\n\n            e.preventDefault();\n            e.stopPropagation();\n\n        }\n\n        function stopPlayingAudio(e) {\n\n            console.log('Audio stopped');\n\n            //stop audio and release resources\n            current_audio.stop();\n            current_audio.release();\n\n            //re-enable navigation buttons\n            header_btns.removeClass('ui-disabled');\n\n            //re-enable player buttons\n            stop_btn.off().one('vclick', stopRecordAudio);\n            stop_btn.addClass('ui-disabled');\n            record_btn.removeClass('ui-disabled');\n            play_btn.removeClass('ui-disabled');\n\n        }\n\n        //play the audio\n        function playAudio() {\n\n            //disable navigation buttons while playing\n            header_btns.addClass('ui-disabled');\n\n            console.log('Playing... ' + current_path);\n\n            //unbind stopRecordAudio to bind stopPlayingAudio\n            stop_btn.off().one('vclick', stopPlayingAudio);\n            stop_btn.removeClass('ui-disabled');\n            play_btn.addClass('ui-disabled');\n            record_btn.addClass('ui-disabled');\n\n            function onPlayStatusChange(the_status) {\n\n                var status = the_status;\n\n                if (status === 4) {\n\n                    //re-enable navigation buttons\n                    header_btns.removeClass('ui-disabled');\n\n                    //re-enable player buttons\n                    stop_btn.addClass('ui-disabled');\n                    record_btn.removeClass('ui-disabled');\n                    play_btn.removeClass('ui-disabled');\n                }\n\n            }\n\n            current_audio = new Media(current_path, null, null, onPlayStatusChange);\n            current_audio.play();\n\n        }//playAudio\n\n    };\n\n    return module;\n\n}(EC.BranchInputTypes));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.BranchInputTypes = EC.BranchInputTypes || {};\nEC.BranchInputTypes = ( function(module) {\n\t\t\"use strict\";\n\n\t\tmodule.barcode = function(the_value, the_input) {\n\n\t\t\t//to cache dom lookups\n\t\t\tvar obj;\n\t\t\tvar span_label = $('span.label');\n\t\t\tvar clone = $('div.clone');\n\t\t\tvar double_entry;\n\t\t\tvar value = the_value;\n\t\t\tvar input = the_input;\n\t\t\tvar scanner = $('div#branch-barcode div#branch-input-barcode div#scanner');\n\t\t\tvar scanner_confirm = $('div#branch-barcode div#branch-input-barcode div#scanner-confirm');\n\t\t\tvar scan_result = $('div#branch-barcode div#branch-input-barcode input.scan-result');\n\t\t\tvar scan_result_confirm = $('div#branch-barcode div#branch-input-barcode input.scan-result-confirm');\n\n\t\t\t//update label text\n\t\t\tspan_label.text(input.label);\n\n\t\t\t//Localise\n\t\t\tif (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n\t\t\t\tEC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n\t\t\t}\n\n\t\t\t//Add attribute to flag the primary key input field\n\t\t\tif (parseInt(input.is_primary_key, 10) === 1) {\n\n\t\t\t\tspan_label.attr('data-primary-key', 'true');\n\n\t\t\t}\n\t\t\telse {\n\n\t\t\t\t//reset the attribute to empty if not a primary key (JQM caches pages and we\n\t\t\t\t// recycle views)\n\t\t\t\tspan_label.attr('data-primary-key', '');\n\t\t\t}\n\n\t\t\t//check if we need to replicate this input\n\t\t\tdouble_entry = (parseInt(input.has_double_check, 10) === 1) ? true : false;\n\n\t\t\t//reset buttons\n\t\t\tscanner.removeClass('ui-disabled');\n\t\t\tscanner_confirm.removeClass('ui-disabled');\n\n\t\t\tscan_result.val(value);\n\n\t\t\t//if in editing mode, do not allow changes either if the field is a primary key\n\t\t\t// or it triggers a jump\n\t\t\tif (window.localStorage.branch_edit_mode && input.is_primary_key === '1') {\n\n\t\t\t\t//disable scan button\n\t\t\t\tscanner.addClass('ui-disabled');\n\t\t\t\t$('div#branch-input-barcode p.primary-key-not-editable').removeClass(\"hidden\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$('div#branch-input-barcode p.primary-key-not-editable').addClass(\"hidden\");\n\t\t\t}\n\n\t\t\tif (double_entry) {\n\n\t\t\t\t//duplicate text input\n\t\t\t\tclone.removeClass('hidden');\n\t\t\t\tscan_result_confirm.val(value);\n\n\t\t\t\tif (window.localStorage.branch_edit_mode && input.is_primary_key === 1) {\n\n\t\t\t\t\t//disable clone scan button\n\t\t\t\t\tscanner_confirm.addClass('ui-disabled');\n\t\t\t\t}\n\n\t\t\t\t//add event handler to second scan button\n\t\t\t\tscanner_confirm.off().on('vclick', function() {\n\n\t\t\t\t\t//flag needed to handle case when user dismiss the barcode scanner\n\t\t\t\t\twindow.localStorage.is_dismissing_barcode = 1;\n\n\t\t\t\t\tcordova.plugins.barcodeScanner.scan(function(result) {\n\n\t\t\t\t\t\t//do not override value if the scan action is cancelled by the user\n\t\t\t\t\t\tif (!result.cancelled) {\n\t\t\t\t\t\t\tscan_result_confirm.val(result.text);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}, function(error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\n\t\t\t\t//add hidden class if missing\n\t\t\t\tclone.addClass('hidden');\n\t\t\t}\n\n\t\t\t//set handlers for scan button\n\t\t\tscanner.off().on('vclick', function() {\n\n\t\t\t\t//flag needed to handle case when user dismiss the barcode scanner\n\t\t\t\twindow.localStorage.is_dismissing_barcode = 1;\n\n\t\t\t\tcordova.plugins.barcodeScanner.scan(function(result) {\n\n\t\t\t\t\t//do not override value if the scan action is cancelled by the user\n\t\t\t\t\tif (!result.cancelled) {\n\t\t\t\t\t\tscan_result.val(result.text);\n\t\t\t\t\t}\n\n\t\t\t\t}, function(error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\n\t\t\t});\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputTypes));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.BranchInputTypes = EC.BranchInputTypes || {};\nEC.BranchInputTypes = ( function(module) {\"use strict\";\n\n\t\tmodule.checkbox = function(the_value, the_input) {\n\n\t\t\t//to cache dom lookups\n\t\t\tvar obj;\n\t\t\tvar span_label = $('div#branch-checkbox span.label');\n\t\t\tvar clone = $('div#branch-checkbox div.clone');\n\t\t\tvar double_entry;\n\t\t\tvar value = the_value;\n\t\t\tvar input = the_input;\n\t\t\tvar CHECKBOX_CHECKED = \"\";\n\t\t\tvar DISABLED = \"\";\n\t\t\tvar SELECTED = \"\";\n\t\t\tvar HTML = \"\";\n\n\t\t\t//update label text\n\t\t\tspan_label.text(input.label);\n\t\t\t\n\t\t\t//Localise\n\t\t\tif (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n\t\t\t\tEC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n\t\t\t}\n\n\t\t\t//Add attribute to flag the primary key input field\n\t\t\tif (parseInt(input.is_primary_key, 10) === 1) {\n\t\t\t\tspan_label.attr('data-primary-key', 'true');\n\t\t\t} else {\n\t\t\t\t//reset the attribute to empty if not a primary key (JQM caches pages and we recycle views)\n\t\t\t\tspan_label.attr('data-primary-key', '');\n\t\t\t}\n\n\t\t\t//check if we need to replicate this input\n\t\t\tdouble_entry = (parseInt(input.has_double_check, 10) === 1) ? true : false;\n\n\t\t\t//if in editing mode, do not allow changes either if the field is a primary key or it triggers a jump\n\t\t\tif (window.localStorage.branch_edit_mode && (input.is_primary_key === '1' || input.has_jump === '1')) {\n\t\t\t\tDISABLED = 'disabled=\"disabled\"';\n\t\t\t}\n\n\t\t\t//display all checkboxes options\n\t\t\t$(input.options).each(function(index) {\n\n\t\t\t\tvar name = \"choice\";\n\t\t\t\tvar option_value = this.value.trim();\n                var option_label = this.label.trim();\n\t\t\t\tvar option_id = 'checkbox-choice-' + (index + 1);\n\t\t\t\tvar i;\n\t\t\t\tvar iLength;\n\n\t\t\t\t//check if we have any value stored. For checkboxes, 'value' will be an array\n\t\t\t\tfor ( i = 0, iLength = value.length; i < iLength; i++) {\n\n\t\t\t\t\tCHECKBOX_CHECKED = \"\";\n\n\t\t\t\t\t//if any match is found, pre-select that checkbox in the markup\n\t\t\t\t\tif (value[i] === option_value) {\n\t\t\t\t\t\tCHECKBOX_CHECKED = 'checked=\"checked\"';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tHTML += '<label>';\n\t\t\t\tHTML += '<input type=\"checkbox\" ' + CHECKBOX_CHECKED + ' ' + DISABLED + ' name=\"' + option_label;\n\t\t\t\tHTML += '\" id=\"' + option_id;\n\t\t\t\tHTML += '\" value=\"' + option_value;\n\t\t\t\tHTML += '\" />' + option_label;\n\t\t\t\tHTML += '</label>';\n\n\t\t\t});\n\n\t\t\tspan_label.append(HTML);\n\t\t\t$('div#branch-input-checkbox').trigger(\"create\");\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputTypes));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.BranchInputTypes = EC.BranchInputTypes || {};\nEC.BranchInputTypes = ( function(module) {\n\t\t\"use strict\";\n\n\t\tmodule.date = function(the_value, the_input) {\n\n\t\t\tvar datepicker;\n\t\t\tvar ios_datepicker;\n\t\t\tvar span_label = $('div#branch-date span.label');\n\t\t\tvar clone = $('div#branch-date div.clone');\n\t\t\tvar double_entry;\n\t\t\tvar value = the_value;\n\t\t\tvar input = the_input;\n\t\t\tvar datebox_format;\n\t\t\tvar default_date;\n\n\t\t\t//update label text\n\t\t\tspan_label.text(input.label + \" - \" + input.datetime_format);\n\n\t\t\t//Localise\n\t\t\tif (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n\t\t\t\tEC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n\t\t\t}\n\n\t\t\t//Add attribute to flag the primary key input field\n\t\t\tif (parseInt(input.is_primary_key, 10) === 1) {\n\n\t\t\t\tspan_label.attr('data-primary-key', 'true');\n\n\t\t\t}\n\t\t\telse {\n\n\t\t\t\t//reset the attribute to empty if not a primary key (JQM caches pages and we\n\t\t\t\t// recycle views)\n\t\t\t\tspan_label.attr('data-primary-key', '');\n\t\t\t}\n\n\t\t\t//check if we need to replicate this input\n\t\t\tdouble_entry = (parseInt(input.has_double_check, 10) === 1) ? true : false;\n\n\t\t\t//Android Phonegap DatePicker plugin http://goo.gl/xLrqZl\n\t\t\tdatepicker = $('div#branch-input-date input.nativedatepicker');\n\n\t\t\t//iOS uses the HTML5 input type=\"date\"\n\t\t\tios_datepicker = $('div#branch-input-date input.ios-date');\n\n\t\t\t//hide immediate ios date input parent (JQM quirk, this is to hide the div\n\t\t\t// element border wrapping the input after JQM enhanced the markup)\n\t\t\tios_datepicker.parent().addClass(\"no-border\");\n\n\t\t\t/* Set current date in custom data attribute.\n\t\t\t * Important: since Epicollect for some bizzarre reason does not store the\n\t\t\t * timestamps, but a formatted date,\n\t\t\t * it is impossible to trigger the datapicker to the right data/time value after\n\t\t\t * a saving, as the timestamp is lost\n\t\t\t * i.e. if I save save 25th march 1988 just as 25/3, I will never get the year\n\t\t\t * back :/ and it will default to the current date\n\t\t\t * TODO: save date and time values with a timestamp attached\n\t\t\t */\n\n\t\t\tdatepicker.attr(\"data-raw-date\", new Date());\n\n\t\t\t/*show default date if input.value = input.datetime_format:\n\t\t\t *if the option to show the current date as default is selected in the web form\n\t\t\t * builder,\n\t\t\t * the input value gets the value of datetime_format when parsing the xml\n\t\t\t */\n\t\t\tif (value === input.datetime_format) {\n\t\t\t\tdatepicker.val(EC.Utils.parseDate(new Date(), input.datetime_format));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdatepicker.val(value);\n\t\t\t}\n\n\t\t\t/*****************************************************************************************\n\t\t\t * Android uses the Phonegap official DatePicker plugin\n\t\t\t ****************************************************************************************/\n\t\t\tif (window.device.platform === EC.Const.ANDROID) {\n\n\t\t\t\t/* bind input to 'vclick' insted of focus, as we set the input as readonly.\n\t\t\t\t * this solved problem on android 2.3 where the keyboard was showing because the\n\t\t\t\t * input is in focus when tapping \"cancel\"\n\t\t\t\t * on the DatePicker popup\n\t\t\t\t */\n\n\t\t\t\tdatepicker.off().on('focus', function(event) {\n\n\t\t\t\t\tvar datepicker = $(this);\n\t\t\t\t\tvar selected_date = new Date(datepicker.attr(\"data-raw-date\"));\n\n\t\t\t\t\t// Same handling for iPhone and Android\n\t\t\t\t\twindow.plugins.datePicker.show({\n\t\t\t\t\t\tdate : selected_date,\n\t\t\t\t\t\tmode : 'date', // date or time or blank for both\n\t\t\t\t\t\tallowOldDates : true\n\t\t\t\t\t}, function(returned_date) {\n\n\t\t\t\t\t\tvar new_date;\n\n\t\t\t\t\t\tif (returned_date !== undefined) {\n\t\t\t\t\t\t\tnew_date = new Date(returned_date);\n\n\t\t\t\t\t\t\tdatepicker.val(EC.Utils.parseDate(new_date, input.datetime_format));\n\t\t\t\t\t\t\tdatepicker.attr(\"data-raw-date\", new_date);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// This fixes the problem you mention at the bottom of this script with it not\n\t\t\t\t\t\t// working a second/third time around, because it is in focus.\n\t\t\t\t\t\tdatepicker.blur();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/*****************************************************************************************\n\t\t\t * iOS uses the official HTML5 input type=\"date\"\n\t\t\t ****************************************************************************************/\n\t\t\tif (window.device.platform === EC.Const.IOS) {\n\n\t\t\t\tdatepicker.off().on('vclick', function(event) {\n\t\t\t\t\tios_datepicker.focus();\n\t\t\t\t});\n\n\t\t\t\tios_datepicker.off().on('blur', function(event) {\n\n\t\t\t\t\tvar ios_date = ios_datepicker.val();\n\n\t\t\t\t\tdatepicker.val(EC.Utils.parseIOSDate(ios_date, input.datetime_format));\n\t\t\t\t\tdatepicker.attr(\"data-raw-date\", ios_date);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputTypes));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.BranchInputTypes = EC.BranchInputTypes || {};\nEC.BranchInputTypes = ( function(module) {\"use strict\";\n\t\n\tmodule.decimal = function(the_value, the_input) {\n\n\t\t\t\n\t\t\tvar obj;\n\t\t\tvar span_label = $('span.label');\n\t\t\tvar clone = $('div.clone');\n\t\t\tvar double_entry;\n\t\t\tvar value = the_value;\n\t\t\tvar input = the_input;\n\n\t\t\tvar min_range = $('span.min-range');\n\t\t\tvar max_range = $('span.max-range');\n\n\t\t\t//update label text\n\t\t\tspan_label.text(input.label);\n\t\t\t\n\t\t\t//Localise\n\t\t\tif (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n\t\t\t\tEC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n\t\t\t}\n\n\t\t\t//Add attribute to flag the primary key input field\n\t\t\tif (parseInt(input.is_primary_key, 10) === 1) {\n\n\t\t\t\tspan_label.attr('data-primary-key', 'true');\n\n\t\t\t} else {\n\n\t\t\t\t//reset the attribute to empty if not a primary key (JQM caches pages and we recycle views)\n\t\t\t\tspan_label.attr('data-primary-key', '');\n\t\t\t}\n\n\t\t\t//check if we need to replicate this input\n\t\t\tdouble_entry = (parseInt(input.has_double_check, 10) === 1) ? true : false;\n\n\t\t\t//re-enable input if needed\n\t\t\t$('div#branch-input-decimal input').removeAttr('disabled');\n\n\t\t\t//hide elements not needed\n\t\t\tclone.addClass('hidden');\n\t\t\tmin_range.addClass('hidden');\n\t\t\tmax_range.addClass('hidden');\n\n\t\t\tif (double_entry) {\n\n\t\t\t\t//duplicate textarea input\n\t\t\t\tclone.removeClass('hidden');\n\t\t\t\t$('div.clone input').val(value);\n\n\t\t\t\t//if in editing mode, do not allow changes either if the field is a primary key or it triggers a jump\n\t\t\t\tif (window.localStorage.branch_edit_mode && input.is_primary_key === 1) {\n\n\t\t\t\t\t$('div.clone input').attr('disabled', 'disabled');\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//show min range if any\n\t\t\tif (input.min_range !== \"\") {\n\n\t\t\t\tmin_range.removeClass('hidden');\n\t\t\t\tmin_range.text('Min: ' + input.min_range);\n\n\t\t\t}\n\n\t\t\t//show max range if any\n\t\t\tif (input.max_range !== \"\") {\n\n\t\t\t\tmax_range.removeClass('hidden');\n\t\t\t\tmax_range.text('Max: ' + input.max_range);\n\n\t\t\t}\n\n\t\t\t$('div#input-decimal input').val(value);\n\n\t\t\t//if in editing mode, do not allow changes either if the field is a primary key\n\t\t\tif (window.localStorage.branch_edit_mode && input.is_primary_key === 1) {\n\t\t\t\t$('div#branch-input-decimal input').attr('disabled', 'disabled');\n\t\t\t\t\t$('div#branch-input-decimal p.primary-key-not-editable').removeClass(\"hidden\");\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t$('div#branch-input-decimal p.primary-key-not-editable').addClass(\"hidden\");\n\t\t\t}\n\n\t\t};\n\t\t\n\treturn module;\n\t\n\t}(EC.BranchInputTypes));","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.BranchInputTypes = EC.BranchInputTypes || {};\nEC.BranchInputTypes = ( function(module) {\n        \"use strict\";\n\n        module.dropdown = function(the_value, the_input) {\n\n            //to cache dom lookups\n            var obj;\n            var span_label = $('div#branch-select span.label');\n            var clone = $('div.clone');\n            var double_entry;\n            var value = the_value;\n            var input = the_input;\n            var DISABLED = \"\";\n            var SELECTED = \"\";\n            var HTML = \"\";\n\n            //update label text\n            span_label.text(input.label);\n\n            //Localise\n            if (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n                EC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n            }\n\n            //Add attribute to flag the primary key input field\n            if (parseInt(input.is_primary_key, 10) === 1) {\n                span_label.attr('data-primary-key', 'true');\n            } else {\n                //reset the attribute to empty if not a primary key (JQM caches\n                // pages and we recycle views)\n                span_label.attr('data-primary-key', '');\n            }\n\n            //check if we need to replicate this input\n            double_entry = (parseInt(input.has_double_check, 10) === 1) ? true : false;\n\n            //if in editing mode, do not allow changes either if the field is a\n            // primary key or it triggers a jump\n            if (window.localStorage.branch_edit_mode && (input.is_primary_key === '1' || input.has_jump === '1')) {\n                DISABLED = 'disabled=\"disabled\"';\n            }\n\n            SELECTED = (value === \"\") ? 'selected' : \"\";\n\n            //TODO: check markup on jqm docs for select. Fastclick: is needclick\n            // needed?\n            HTML += '<select id=\"selection\" name=\"selection\" data-native-menu=\"true\" >';\n            HTML += '<option value =\"0\"' + SELECTED + '>' + EC.Const.NO_OPTION_SELECTED + '</option>';\n\n            $(input.options).each(function(index) {\n\n                var option_value = this.value;\n                var option_index = (index + 1);\n                var option_label = this.label;\n                var option_id = 'select-choice-' + (index + 1);\n\n                //check if we have a value cached and pre-select that input\n                SELECTED = (value === option_value) ? 'selected' : \"\";\n\n                HTML += '<option ' + SELECTED + ' ' + DISABLED + ' value =\"' + option_value + '\" data-index=\"' + option_index + '\">' + option_label + '</option>';\n            });\n\n            HTML += '</select>';\n\n            span_label.append(HTML);\n            $('div#branch-input-dropdown').trigger(\"create\");\n\n            /*****************************************************************************************************\n             *\tFollowing code is a hack to make the select native widget work on\n             * Android 4.4.2 (Nexus 5)\n             */\n            //Add needclick to all the markup as Fastclick is interfering and the\n            // native popup with the list of options is never triggered\n            // $(\"div#input-dropdown\").addClass(\"needsclick\");\n            // $(\"div#input-dropdown div.ui-select\").addClass(\"needsclick\");\n            // $(\"div#input-dropdown div.ui-btn\").addClass(\"needsclick\");\n            // $(\"div#input-dropdown div.ui-btn\n            // span.ui-btn-inner\").addClass(\"needsclick\");\n            // $(\"div#input-dropdown div.ui-btn span.ui-btn-inner\n            // span.ui-btn-text\").addClass(\"needsclick\");\n            // $(\"div#input-dropdown div.ui-btn span.ui-btn-inner\n            // span.ui-btn-text span\").addClass(\"needsclick\");\n            // $(\"div#input-dropdown div.ui-btn span.ui-btn-inner\n            // span.ui-icon\").addClass(\"needsclick\");\n\n            //Manually trigger a click on a select element. Best solution I came\n            // across\n            $(\"select\").on('vmousedown', function(e) {\n                $(this).focus().click();\n            });\n\n            /*****************************************************************************************************\n             * End hack\n             */\n\n        };\n\n        return module;\n\n    }(EC.BranchInputTypes));\n","/*jslint vars: true, nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.BranchInputTypes = EC.BranchInputTypes || {};\nEC.BranchInputTypes = ( function(module) {\"use strict\";\n\n\t\tmodule.integer = function(the_value, the_input) {\n\n\t\t\t//to cache dom lookups\n\t\t\tvar obj;\n\t\t\tvar span_label = $('div#branch-integer span.label');\n\t\t\tvar clone = $('div.clone');\n\t\t\tvar double_entry;\n\t\t\tvar value = parseInt(the_value, 10);\n\t\t\tvar input = the_input;\n\t\t\tvar min_range = $('div#branch-input-integer span.min-range');\n\t\t\tvar max_range = $('div#branch-input-integer span.max-range');\n\t\t\tvar input_holder = $('div#branch-input-integer input');\n\n\t\t\t//update label text\n\t\t\tspan_label.text(input.label);\n\t\t\t\n\t\t\t//Localise\n\t\t\tif (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n\t\t\t\tEC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n\t\t\t}\n\n\t\t\t//Add attribute to flag the primary key input field\n\t\t\tif (parseInt(input.is_primary_key, 10) === 1) {\n\n\t\t\t\tspan_label.attr('data-primary-key', 'true');\n\n\t\t\t} else {\n\n\t\t\t\t//reset the attribute to empty if not a primary key (JQM caches pages and we recycle views)\n\t\t\t\tspan_label.attr('data-primary-key', '');\n\t\t\t}\n\n\t\t\t//check if we need to replicate this input\n\t\t\tdouble_entry = (parseInt(input.has_double_check, 10) === 1) ? true : false;\n\n\t\t\t//re-enable input if needed\n\t\t\tinput_holder.removeAttr('disabled');\n\n\t\t\tif (window.device.platform === EC.Const.IOS) {\n\t\t\t\t//trigger numeric keyboard on iOS\n\t\t\t\t$('div#branch-input-integer input').attr('pattern', '[0-9]*');\n\t\t\t}\n\n\t\t\t//hide elements not needed\n\t\t\tclone.addClass('hidden');\n\t\t\tmin_range.addClass('hidden');\n\t\t\tmax_range.addClass('hidden');\n\n\t\t\t//check if we need to render a double entry for this input\n\t\t\tif (double_entry) {\n\n\t\t\t\t//duplicate integer input\n\t\t\t\tclone.removeClass('hidden');\n\t\t\t\t$('div.clone input').val(value);\n\n\t\t\t\t//if in editing mode, do not allow changes either if the field is a primary key\n\t\t\t\tif (window.localStorage.branch_edit_mode && input.is_primary_key === 1) {\n\n\t\t\t\t\t$('div.clone input').attr('disabled', 'disabled');\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t//show min range if any\n\t\t\tif (input.min_range !== \"\") {\n\n\t\t\t\tmin_range.removeClass('hidden');\n\t\t\t\tmin_range.text('Min: ' + input.min_range);\n\n\t\t\t}\n\n\t\t\t//show max range if any\n\t\t\tif (input.max_range !== \"\") {\n\n\t\t\t\tmax_range.removeClass('hidden');\n\t\t\t\tmax_range.text('Max: ' + input.max_range);\n\n\t\t\t}\n\n\t\t\tinput_holder.val(value);\n\n\t\t\t//if in editing mode, do not allow changes either if the field is a primary key\n\t\t\tif (window.localStorage.branch_edit_mode && input.is_primary_key === 1) {\n\t\t\t\tinput_holder.attr('disabled', 'disabled');\n\t\t\t\t$('div#branch-input-integer p.primary-key-not-editable').removeClass(\"hidden\");\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t$('div#branch-input-integer p.primary-key-not-editable').addClass(\"hidden\");\n\t\t\t}\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputTypes)); ","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.BranchInputTypes = EC.BranchInputTypes || {};\nEC.BranchInputTypes = (function (module) {\n    'use strict';\n\n    module.location = function (the_value, the_input) {\n\n\n        var span_label = $('span.label');\n        var value = the_value;\n        var input = the_input;\n        var requests = [];\n        var geolocation_request;\n\n        var is_first_attempt = true;\n        //set unlimited timeout for watch position to avoid timeout error on iOS when the device does not move\n        // see http://goo.gl/tYsBSC, http://goo.gl/jYQhgr, http://goo.gl/8oR1g2\n        var timeout = (window.device.platform === EC.Const.IOS) ? Infinity : 30000;\n\n        //update label text\n        span_label.text(input.label);\n\n        //Localise\n        if (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n            EC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n        }\n\n        var set_location_btn = $('div#branch-location div#branch-input-location div#branch-set-location');\n        var set_location_result = $('textarea#branch-set-location-result');\n        var accuracy_result = $('div#branch-location  div#branch-input-location div.current-accuracy-result');\n        var accuracy_tip = $('div#branch-location  div#branch-input-location div.location-accuracy-tip');\n\n        //hide feedback when showing the view the first time\n        $(accuracy_result).addClass('hidden');\n        $(accuracy_tip).addClass('hidden');\n\n        //set previous location value if any\n        set_location_result.val(value);\n\n        function _showAcquiredLocation() {\n\n            // clearAllRequests();\n\n            $(accuracy_result).find('span').text(Math.floor(location.accuracy));\n            $(accuracy_result).removeClass('hidden');\n            $(accuracy_tip).removeClass('hidden');\n\n            EC.Notification.hideProgressDialog();\n\n            set_location_result.val(//\n                'Latitude: ' + location.latitude + ',\\n' + //\n                'Longitude: ' + location.longitude + ',\\n' + //\n                'Altitude: ' + location.altitude + ',\\n' + //\n                'Accuracy: ' + location.accuracy + ',\\n' + //\n                'Altitude Accuracy: ' + location.altitude_accuracy + ',\\n' + //\n                'Heading: ' + location.heading + '\\n');\n            //\n\n            if (!EC.Utils.isChrome()) {\n                EC.Notification.showToast(EC.Localise.getTranslation('location_acquired'), 'short');\n            }\n            set_location_btn.one('vclick', _getLocation);\n\n\n        }\n\n        function requestPosition() {\n\n            console.log('requestPosition called');\n            //on first attempt, get a quick and rough location just to get started\n            //We do not use getCurrentPosition as it tends to give back a cached position when is it called, not looking for a new one each time\n            if (is_first_attempt) {\n                geolocation_request = navigator.geolocation.watchPosition(onGCPSuccess, onGCPError, {\n                    maximumAge: 0,\n                    timeout: timeout,\n                    enableHighAccuracy: true\n                });\n            }\n            else {\n\n                /*\n                 on subsequent calls, check position for 3 secs and return.\n                 this will improve cases when watchPositionretunr immediately with the same value, as it might return more than once during the 3 secs period\n                 */\n\n                geolocation_request = navigator.geolocation.watchPosition(onGCPSuccess, onGCPError, {\n                    maximumAge: 0,\n                    timeout: timeout,\n                    enableHighAccuracy: true\n                });\n\n\n                window.setTimeout(function () {\n                        window.navigator.geolocation.clearWatch(geolocation_request);\n\n                        _showAcquiredLocation();\n\n                        console.log('setTimeout called');\n                    },\n                    3000 //stop checking after 3 seconds (value is milliseconds)\n                );\n            }\n        }\n\n        var _getLocation = function () {\n\n            set_location_btn.off('vclick');\n            requests = [];\n\n\n            //check id GPS is enabled on the device\n            $.when(EC.Utils.isGPSEnabled()).then(function () {\n\n                //gps is on\n                EC.Notification.showProgressDialog(EC.Localise.getTranslation('locating'), EC.Localise.getTranslation('wait'));\n\n                //On Android, mostly on old devices, halt the execution to solve loader spinner not hiding after a gps lock\n                if (window.device.platform === EC.Const.ANDROID) {\n                    //if the device is older than KitKat I assume it is slow to hide the spinning loader and I need the execution halt to clear race conditions\n                    if (!(EC.Const.KITKAT_REGEX.test(window.device.version) || EC.Const.LOLLIPOP_REGEX)) {\n                        EC.Utils.sleep(2000);\n                    }\n                }\n\n                requestPosition();\n\n            }, function () {\n                console.log('gps NOT enabled');\n\n                //no gps...do we have at least an internet connection?\n                //TODO: replace with location services network\n                //if (!EC.Utils.hasConnection()) {\n\n                //console.log('No internet connection');\n\n                EC.Notification.showAlert(EC.Localise.getTranslation('error'), EC.Localise.getTranslation('gps_disabled'));\n\n                //  }\n            });\n\n        };\n\n        var onGCPSuccess = function (position) {\n\n            console.log('onGCPSuccess called, accuracy: ' + position.coords.accuracy);\n            //get HTML5 geolocation component values replacing null with '' for not available components\n            location.latitude = (position.coords.latitude === null) ? '' : position.coords.latitude;\n            location.longitude = (position.coords.longitude === null) ? '' : position.coords.longitude;\n            location.altitude = (position.coords.altitude === null) ? '' : position.coords.altitude;\n            location.accuracy = (position.coords.accuracy === null) ? '' : position.coords.accuracy;\n            location.altitude_accuracy = (position.coords.altitudeAccuracy === null) ? '' : position.coords.altitudeAccuracy;\n            location.heading = (position.coords.heading === null) ? '' : position.coords.heading;\n\n\n        };\n\n        // onError Callback receives a PositionError object\n        //\n        var onGCPError = function (error) {\n\n            var empty = '';\n\n            window.navigator.geolocation.clearWatch(geolocation_request);\n\n            // clearAllRequests();\n\n            EC.Notification.hideProgressDialog();\n\n            console.log(JSON.stringify(error));\n\n            if (error.code === 3) {\n                EC.Notification.showAlert(EC.Localise.getTranslation('error'), error.message + EC.Localise.getTranslation('location_fail'));\n\n            } else if (error.code === 1) {\n\n                if (window.device.platform === EC.Const.IOS) {\n                    EC.Notification.showAlert(EC.Localise.getTranslation('error'), EC.Localise.getTranslation('location_service_fail'));\n                }\n            } else {\n                EC.Notification.showAlert(EC.Localise.getTranslation('error'), EC.Localise.getTranslation('unknow_error'));\n            }\n\n            //set location object to empty values\n            set_location_result.val(//\n                'Latitude: ' + empty + ',\\n' + //\n                'Longitude: ' + empty + ',\\n' + //\n                'Altitude: ' + empty + ',\\n' + //\n                'Accuracy: ' + empty + ',\\n' + //\n                'Altitude Accuracy: ' + empty + ',\\n' + //\n                'Heading: ' + empty + '\\n');\n            //\n\n            set_location_btn.one('vclick', _getLocation);\n        };\n\n        //bind set location button\n        set_location_btn.off().one('vclick', _getLocation);\n\n    };\n\n    return module;\n\n}(EC.BranchInputTypes));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery, Camera*/\nvar EC = EC || {};\nEC.BranchInputTypes = EC.BranchInputTypes || {};\nEC.BranchInputTypes = (function (module) {\n    'use strict';\n\n    var app_storage_dir;\n\n    module.photo = function (the_value, the_input) {\n\n        var span_label = $('div#branch-photo span.label');\n        var value = the_value;\n        var input = the_input;\n        var camera_btn = $('div#branch-input-photo div#camera-btn');\n        var store_image_uri = $('div#branch-input-photo input#stored-image-uri');\n        var cache_image_uri = $('div#branch-input-photo input#cached-image-uri');\n        var image_full_path_uri;\n\n        //clear canvas from previous images\n        var canvas_portrait_dom = $('div#branch-input-photo #canvas-portrait');\n        var canvas_landscape_dom = $('div#branch-input-photo #canvas-landscape');\n        var canvas_portrait = $('div#branch-input-photo #canvas-portrait')[0];\n        var canvas_landscape = $('div#branch-input-photo #canvas-landscape')[0];\n\n        var context_portrait = canvas_portrait.getContext('2d');\n        context_portrait.clearRect(0, 0, canvas_portrait.width, canvas_portrait.height);\n\n        var context_landscape = canvas_landscape.getContext('2d');\n        context_landscape.clearRect(0, 0, canvas_landscape.width, canvas_landscape.height);\n\n        //Localise\n        if (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n            EC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n        }\n\n        // //on iOS, close image popup on orientation change\n        if (EC.Const.IOS) {\n            //TODO\n        }\n\n        $('div#canvas-wrapper').off().on('vclick', function (e) {\n\n            var href = $('div#branch-input-photo input#cached-image-uri').val();\n            var iOS_popup = $('#branch-photo-popup');\n\n            console.log(href);\n\n            //if cached image url is empty, get stored image url\n            if (href === '') {\n                href = app_storage_dir + $('div#branch-input-photo input#stored-image-uri').val();\n            }\n\n            if (window.device) {\n                switch (window.device.platform) {\n\n                    //on Android we show the image as a opo up using swipebox\n                    case EC.Const.ANDROID:\n                        e.preventDefault();\n                        $.swipebox([{\n                            href: href\n                        }]);\n                        break;\n\n                    //on iOS we show a built in JQM popup, as swipebox has\n                    // got issues\n                    case EC.Const.IOS:\n                        iOS_popup.find('img').attr('src', href);\n\n                        /*\n                         * let's use a timeout otherwise the popup is not\n                         * centered on the first tap, because the\n                         * image is not loaded. Not the prettiest solution,\n                         * but since the image is loaded locally\n                         * and always the same size, I can assume 100 ms will\n                         * work everytime on iPhones\n                         *\n                         * see here\n                         * http://stackoverflow.com/questions/21304763/jquery-mobile-popup-not-centered-on-first-click\n                         *\n                         */\n\n                        window.setTimeout(function () {\n                            iOS_popup.popup('open');\n                        }, 100);\n\n                        $(window).on('orientationchange', function (event) {\n                            console.log('called orientationchange');\n\n                            //close popup, as it is not scaled/positioned\n                            // properly\n                            iOS_popup.popup('close');\n                        });\n\n                        break;\n                }\n\n            }\n\n        });\n\n        //Render thumbnail on <canvas>\n        var _renderThumb = function (the_image_uri) {\n\n            //load taken image on <canvas> tag\n            var image = new Image();\n            var canvas;\n            var context;\n            var source = the_image_uri;\n\n            image.src = source;\n\n            image.onerror = function () {\n                console.log('Image failed!');\n            };\n\n            image.onload = function () {\n\n                //resize image to fit in canvas -> it is not working properly!\n                console.log('on load called');\n                var width = this.width;\n                var height = this.height;\n                var thumb_height;\n                var thumb_width;\n                var canvas;\n\n                if (height > width) {\n\n                    //portrait\n                    canvas = canvas_portrait;\n                    thumb_width = 188;\n                    thumb_height = 250;\n                    canvas_landscape_dom.addClass('hidden');\n                    canvas_portrait_dom.removeClass('hidden');\n\n                }\n                else {\n\n                    //landscape\n                    canvas = canvas_landscape;\n                    thumb_width = 250;\n                    thumb_height = 188;\n                    canvas_portrait_dom.addClass('hidden');\n                    canvas_landscape_dom.removeClass('hidden');\n                }\n\n                context = canvas.getContext('2d');\n                context.clearRect(0, 0, canvas.width, canvas.height);\n\n                context.save();\n\n                //scale image based on device pixel density\n                // context.scale(window.devicePixelRatio, window.devicePixelRatio);\n                context.imageSmoothingEnabled = false;\n\n                context.drawImage(this, 0, 0, thumb_width, thumb_height);\n\n                context.restore();\n\n            };\n            //image.onload\n\n            console.log(JSON.stringify(source));\n\n        };\n\n        //hide both canvas\n        canvas_landscape_dom.addClass('hidden');\n        canvas_portrait_dom.addClass('hidden');\n\n        //unbind camera button event to avoid multiple calls to Camera API\n        camera_btn.off('vclick');\n\n        //update label text\n        span_label.text(input.label);\n\n        //if a value is stored when editing, on the first load add it to hidden input\n        // field,  to be shown if no cached value is set\n        if (window.localStorage.branch_edit_mode) {\n\n            if (value.stored === undefined) {\n                store_image_uri.val(value);\n                value = {\n                    cached: '',\n                    stored: value\n                };\n            }\n            else {\n\n                store_image_uri.val(value.stored);\n            }\n\n        }\n        else {\n            //clear any previous stored path in the DOM, otherwise it get cached and it causes the same image to be overriden when adding a new entry\n            store_image_uri.val('');\n        }\n\n        console.log('value.stored ' + JSON.stringify(value.stored));\n\n        //If a cache value is set, add it to hidden field\n        cache_image_uri.val(value.cached || '');\n        console.log('cache_image_uri: ' + cache_image_uri.val());\n\n        //Show cached image if any, otherwise the stored image, if any\n        if (value.cached === '') {\n\n            console.log('cached value empty');\n\n            if (value.stored !== '') {\n\n                //build full path to get image from private app folder\n                switch (window.device.platform) {\n\n                    case EC.Const.ANDROID:\n                        image_full_path_uri = EC.Const.ANDROID_APP_PRIVATE_URI + EC.Const.PHOTO_DIR + window.localStorage.project_name + '/' + value.stored;\n                        app_storage_dir = EC.Const.ANDROID_APP_PRIVATE_URI + EC.Const.PHOTO_DIR + window.localStorage.project_name + '/';\n\n                        break;\n                    case EC.Const.IOS:\n                        image_full_path_uri = EC.Const.IOS_APP_PRIVATE_URI + EC.Const.PHOTO_DIR + window.localStorage.project_name + '/' + value.stored;\n                        app_storage_dir = 'file://' + EC.Const.IOS_APP_PRIVATE_URI + EC.Const.PHOTO_DIR + window.localStorage.project_name + '/';\n\n                        break;\n\n                }\n\n                console.log('image_full_path_uri: ' + image_full_path_uri);\n\n                _renderThumb(image_full_path_uri);\n\n            }\n\n        }\n        else {\n\n            //render the cached image\n            _renderThumb(value.cached);\n        }\n\n        //Set camera options - anything more than 1024 x 728 will crash\n        var source = Camera.PictureSourceType.CAMERA;\n        var camera_options = {\n            quality: 50, //anything more than this will cause memory leaks\n            destinationType: Camera.DestinationType.FILE_URI,\n            sourceType: source,\n            encodingType: Camera.EncodingType.JPEG,\n            mediaType: Camera.MediaType.PICTURE,\n            correctOrientation: true,\n            saveToPhotoAlbum: false,\n            targetWidth: 1024, //more than this resoution and it will happily crash\n            targetHeight: 768\n        };\n\n        //open camera app on click\n        camera_btn.on('vclick', function () {\n\n            navigator.camera.getPicture(onGPSuccess, onGPError, camera_options);\n\n        });\n\n        //Success callback\n        var onGPSuccess = function (the_image_uri) {\n\n            console.log('image_uri: ' + the_image_uri);\n\n            var image_uri = the_image_uri;\n\n            //render the new image on canvas\n            _renderThumb(image_uri);\n\n            //save cached filename in hidden input field\n            console.log('image uri is' + image_uri);\n\n            $('div#branch-input-photo input#cached-image-uri').val(image_uri);\n\n        };\n\n        //Error callback\n        var onGPError = function (error) {\n            console.log('Error', 'Failed because: ' + error);\n        };\n    };\n\n    return module;\n\n}(EC.BranchInputTypes));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.BranchInputTypes = EC.BranchInputTypes || {};\nEC.BranchInputTypes = ( function(module) {\"use strict\";\n\n\t\tmodule.radio = function(the_value, the_input) {\n\t\t\t\n\t\t\tvar obj;\n\t\t\tvar span_label = $('div#branch-radio div#branch-input-radio span.label');\n\t\t\tvar double_entry;\n\t\t\tvar value = the_value;\n\t\t\tvar input = the_input;\n\t\t\tvar HTML = \"\";\n\t\t\tvar RADIO_CHECKED = \"\";\n\t\t\tvar DISABLED = \"\";\n\n\t\t\t//update label text\n\t\t\tspan_label.text(input.label);\n\t\t\t\n\t\t\t//Localise\n\t\t\tif (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n\t\t\t\tEC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n\t\t\t}\n\n\t\t\t//Add attribute to flag the primary key input field\n\t\t\tif (parseInt(input.is_primary_key, 10) === 1) {\n\t\t\t\tspan_label.attr('data-primary-key', 'true');\n\n\t\t\t} else {\n\t\t\t\t//reset the attribute to empty if not a primary key (JQM caches pages and we recycle views)\n\t\t\t\tspan_label.attr('data-primary-key', '');\n\t\t\t}\n\n\t\t\t//if in editing mode, do not allow changes either if the field is a primary key or it triggers a jump\n\t\t\tif (window.localStorage.branch_edit_mode && (input.is_primary_key === '1' || input.has_jump === '1')) {\n\t\t\t\tDISABLED = 'disabled=\"disabled\"';\n\t\t\t}\n\n\t\t\tHTML += '<fieldset data-role=\"controlgroup\">';\n\n\t\t\t//render list of options\n\t\t\t$(input.options).each(function(index) {\n\n\t\t\t\t    //increase value by 1, as we use value = 0 when no option is selected (like for select/dropdown) We are using the index as radio jumps are mapped against the index of the value\n                var option_value = this.value;\n                var option_index = (index + 1);\n                var option_label = this.label;\n\t\t\t\tvar option_id = 'radio-choice-' + (index + 1);\n\t\t\t\n\t\t\t\tRADIO_CHECKED = (value === option_value) ? 'checked=\"checked\"' : \"\";\n\n\t\t\t\tHTML += '<input type=\"radio\" name=\"radio-options\" id=\"' + option_id + '\" value=\"' + option_value + '\"' + RADIO_CHECKED + ' ' + DISABLED + ' data-index=\"' + option_index + '\">';\n                HTML += '<label for=\"' + option_id + '\">' + option_label + '</label>';\n\n\t\t\t});\n\n\t\t\tHTML += '</fieldset>';\n\t\t\t\n\t\t\t//append radio buttons and trigger layout\t\n\t\t\tspan_label.append(HTML);\n\t\t\t$('div#branch-input-radio').trigger(\"create\");\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputTypes));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.BranchInputTypes = EC.BranchInputTypes || {};\nEC.BranchInputTypes = ( function(module) {\"use strict\";\n\t\n\tmodule.text = function(the_value, the_input) {\n\n\t\t\t//to cache dom lookups\n\t\t\tvar obj;\n\t\t\tvar span_label = $('div#branch-text div#branch-input-text span.label');\n\t\t\tvar clone = $('div#branch-text div#branch-input-text div.clone');\n\t\t\tvar double_entry;\n\t\t\tvar value = the_value;\n\t\t\tvar input = the_input;\n\n\t\t\t//update label text\n\t\t\tspan_label.text(input.label);\n\n\t\t\t//Add attribute to flag the primary key input field\n\t\t\tif (parseInt(input.is_primary_key, 10) === 1) {\n\t\t\t\tspan_label.attr('data-primary-key', 'true');\n\n\t\t\t} else {\n\n\t\t\t\t//reset the attribute to empty if not a primary key (JQM caches pages and we recycle views)\n\t\t\t\tspan_label.attr('data-primary-key', '');\n\t\t\t}\n\n\t\t\t//check if we need to replicate this input\n\t\t\tdouble_entry = (parseInt(input.has_double_check, 10) === 1) ? true : false;\n\n\t\t\t//re-enable input if needed\n\t\t\t$('div#branch-input-text input').removeAttr('disabled');\n\n\t\t\tif (double_entry) {\n\n\t\t\t\t//duplicate text input\n\t\t\t\tclone.removeClass('hidden');\n\t\t\t\t$('div.clone input').val(value);\n\n\t\t\t\t//if in editing mode, do not allow changes  if the field is a primary key\n\t\t\t\tconsole.log( typeof input.is_primary_key);\n\t\t\t\tconsole.log( typeof input.has_jump);\n\n\t\t\t\tif (window.localStorage.branch_edit_mode && input.is_primary_key === 1) {\n\n\t\t\t\t\t$('div.clone input').attr('disabled', 'disabled');\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t//add hidden class if missing\n\t\t\t\tclone.addClass('hidden');\n\n\t\t\t}\n\n\t\t\t$('div#branch-input-text input').val(value);\n\n\t\t\t//if it is a genkey field, disable input and pre-fill it with the genkey\n\t\t\tif (input.is_genkey === 1 && value === \"\") {\n\n\t\t\t\t$('div#branch-input-text input').attr('disabled', 'disabled').val(EC.Utils.getGenKey());\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//if in branch editing mode, do not allow changes if the field is a primary key \n\t\t\tif (window.localStorage.branch_edit_mode && input.is_primary_key === 1) {\n\t\t\t\t$('div#branch-input-text input').attr('disabled', 'disabled');\n\t\t\t\t$('div#branch-input-text p.primary-key-not-editable').removeClass(\"hidden\");\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t$('div#branch-input-text p.primary-key-not-editable').addClass(\"hidden\");\n\t\t\t}\n\n\t\t};\n\n\t\n\treturn module;\n\t\n}(EC.BranchInputTypes));","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.BranchInputTypes = EC.BranchInputTypes || {};\nEC.BranchInputTypes = ( function(module) {\"use strict\";\n\n\t\tmodule.textarea = function(the_value, the_input) {\n\n\t\t\tvar obj;\n\t\t\tvar span_label = $('span.label');\n\t\t\tvar clone = $('div.clone');\n\t\t\tvar double_entry;\n\t\t\tvar value = the_value;\n\t\t\tvar input = the_input;\n\n\t\t\t//update label text\n\t\t\tspan_label.text(input.label);\n\t\t\t\n\t\t\t//Localise\n\t\t\tif (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n\t\t\t\tEC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n\t\t\t}\n\n\t\t\t//Add attribute to flag the primary key input field\n\t\t\tif (parseInt(input.is_primary_key, 10) === 1) {\n\n\t\t\t\tspan_label.attr('data-primary-key', 'true');\n\n\t\t\t} else {\n\n\t\t\t\t//reset the attribute to empty if not a primary key (JQM caches pages and we recycle views)\n\t\t\t\tspan_label.attr('data-primary-key', '');\n\t\t\t}\n\n\t\t\t//check if we need to replicate this input\n\t\t\tdouble_entry = (parseInt(input.has_double_check, 10) === 1) ? true : false;\n\n\t\t\t//re-enable input if needed\n\t\t\t$('div#branch-input-textarea textarea').removeAttr('disabled');\n\n\t\t\tif (double_entry) {\n\n\t\t\t\t//duplicate textarea input\n\t\t\t\tclone.removeClass('hidden');\n\t\t\t\t$('div.clone textarea').val(value);\n\n\t\t\t\t//if in editing mode, do not allow changes  if the field is a primary key\n\t\t\t\tif (window.localStorage.branch_edit_mode && input.is_primary_key === 1) {\n\n\t\t\t\t\t$('div.clone textarea').attr('disabled', 'disabled');\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t//add hidden class if missing\n\t\t\t\tclone.addClass('hidden');\n\n\t\t\t}\n\n\t\t\t//Set value\n\t\t\t$('div#branch-input-textarea textarea').val(value);\n\n\t\t\t//if in editing mode, do not allow changes either if the field is a primary key\n\t\t\tif (window.localStorage.branch_edit_mode && input.is_primary_key === 1) {\n\n\t\t\t\t$('div#branch-input-textarea textarea').attr('disabled', 'disabled');\n\t\t\t\t$('div#branch-input-textarea p.primary-key-not-editable').removeClass(\"hidden\");\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t$('div#branch-input-textarea p.primary-key-not-editable').addClass(\"hidden\");\n\t\t\t}\n\t\t\t\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputTypes)); ","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device*/\n\nvar EC = EC || {};\nEC.BranchInputTypes = EC.BranchInputTypes || {};\nEC.BranchInputTypes = ( function(module) {\n\t\t\"use strict\";\n\n\t\tmodule.time = function(the_value, the_input) {\n\n\t\t\tvar timepicker;\n\t\t\tvar ios_timepicker;\n\t\t\tvar span_label = $('div#branch-input-time span.label');\n\t\t\tvar clone = $('div.clone');\n\t\t\tvar double_entry;\n\t\t\tvar value = the_value;\n\t\t\tvar input = the_input;\n\t\t\tvar datebox_format;\n\n\t\t\t//update label text\n\t\t\tspan_label.text(input.label + \" - \" + input.datetime_format);\n\n\t\t\t//Localise\n\t\t\tif (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n\t\t\t\tEC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n\t\t\t}\n\n\t\t\t//Add attribute to flag the primary key input field\n\t\t\tif (parseInt(input.is_primary_key, 10) === 1) {\n\n\t\t\t\tspan_label.attr('data-primary-key', 'true');\n\n\t\t\t}\n\t\t\telse {\n\n\t\t\t\t//reset the attribute to empty if not a primary key (JQM caches pages and we\n\t\t\t\t// recycle views)\n\t\t\t\tspan_label.attr('data-primary-key', '');\n\t\t\t}\n\n\t\t\t//check if we need to replicate this input\n\t\t\tdouble_entry = (parseInt(input.has_double_check, 10) === 1) ? true : false;\n\n\t\t\t//Android Phonegap timepicker plugin http://goo.gl/xLrqZl\n\t\t\ttimepicker = $('div#branch-input-time input.nativedatepicker');\n\n\t\t\t//iOS uses the HTML5 input type=\"time\"\n\t\t\tios_timepicker = $('div#branch-input-time input.ios-time');\n\n\t\t\t//hide immediate ios time input parent (JQM quirk, this is to hide the div\n\t\t\t// element border wrapping the input after JQM enhanced the markup)\n\t\t\tios_timepicker.parent().addClass(\"no-border\");\n\n\t\t\t/*show default date if input.value = input.datetime_format:\n\t\t\t *if the option to show the current date as default is selected in the web form\n\t\t\t * builder,\n\t\t\t * the input value gets the value of datetime_format when parsing the xml\n\t\t\t */\n\t\t\tif (input.datetime_format === input.default_value) {\n\t\t\t\ttimepicker.val(EC.Utils.parseTime(new Date(), input.datetime_format));\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//show cached value\n\t\t\t\ttimepicker.val(value);\n\t\t\t}\n\n\t\t\t/*****************************************************************************************\n\t\t\t * Android uses the Phonegap official DatePicker plugin\n\t\t\t ****************************************************************************************/\n\t\t\tif (window.device.platform === EC.Const.ANDROID) {\n\t\t\t\t/* bind input to 'vclick' insted of focus, as we set the input as readonly.\n\t\t\t\t * this solved problem on android 2.3 where the keyboard was showing because the\n\t\t\t\t * input is in focus when tapping \"cancel\"\n\t\t\t\t * on the DatePicker popup\n\t\t\t\t */\n\t\t\t\ttimepicker.off().on('focus', function(event) {\n\n\t\t\t\t\tvar timepicker = $(this);\n\t\t\t\t\tvar selected_date = Date.parse(timepicker.val()) || new Date();\n\n\t\t\t\t\t// Same handling for iPhone and Android\n\t\t\t\t\twindow.plugins.datePicker.show({\n\t\t\t\t\t\tdate : selected_date,\n\t\t\t\t\t\tmode : 'time', // date or time or blank for both\n\t\t\t\t\t\tallowOldDates : true\n\t\t\t\t\t}, function(returned_date) {\n\n\t\t\t\t\t\tvar new_date;\n\n\t\t\t\t\t\tif (returned_date !== undefined) {\n\n\t\t\t\t\t\t\tnew_date = new Date(returned_date);\n\n\t\t\t\t\t\t\ttimepicker.val(EC.Utils.parseTime(new_date, input.datetime_format));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// This fixes the problem you mention at the bottom of this script with it not\n\t\t\t\t\t\t// working a second/third time around, because it is in focus.\n\t\t\t\t\t\ttimepicker.blur();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/*****************************************************************************************\n\t\t\t * iOS uses the official HTML5 input type=\"time\", only hours and minutes are\n\t\t\t * returned\n\t\t\t ****************************************************************************************/\n\t\t\tif (window.device.platform === EC.Const.IOS) {\n\n\t\t\t\ttimepicker.off().on('vclick', function(event) {\n\n\t\t\t\t\tios_timepicker.focus();\n\n\t\t\t\t});\n\n\t\t\t\tios_timepicker.off().on('blur', function(event) {\n\n\t\t\t\t\tvar ios_time = ios_timepicker.val();\n\n\t\t\t\t\t//get seconds (based on current time)\n\t\t\t\t\tvar date = new Date(event.timeStamp);\n\t\t\t\t\tvar seconds = date.getSeconds();\n\n\t\t\t\t\t//add seconds to have a string like HH:mm:ss\n\t\t\t\t\tios_time = ios_time + \":\" + seconds;\n\n\t\t\t\t\ttimepicker.val(EC.Utils.parseIOSTime(ios_time, input.datetime_format));\n\t\t\t\t\ttimepicker.attr(\"data-raw-date\", ios_time);\n\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputTypes));\n","/*global $, jQuery, LocalFileSystem, cordova*/\nvar EC = EC || {};\nEC.BranchInputTypes = EC.BranchInputTypes || {};\nEC.BranchInputTypes = (function (module) {\n    'use strict';\n\n    module.video = function (the_value, the_input) {\n\n        //to cache dom lookups\n        var span_label = $('div#branch-video div#branch-input-video span.label');\n        var value = the_value;\n        var input = the_input;\n        var video_btn = $('div#branch-video div#branch-input-video div#video-btn');\n        var play_video_btn = $('div#branch-video div#branch-input-video div#play-video-btn');\n        var store_video_uri = $('div#branch-video div#branch-input-video input#stored-video-uri');\n        var cache_video_uri = $('div#branch-video div#branch-input-video input#cached-video-uri');\n        var video_full_path_uri;\n        var cached_path;\n        var video_sd_path;\n        var ios_video_player_wrapper = $('div#branch-input-video div#ios-video-player-wrapper');\n        var ios_video_player = $('div#branch-input-video video#ios-video-player');\n\n        var _renderVideo = function (the_video_file_path) {\n            play_video_btn.attr('data-video-path', the_video_file_path);\n            play_video_btn.removeClass('ui-disabled');\n        };\n\n        //hide play button on ios, also hide video wrapper\n        if (window.device.platform === EC.Const.IOS) {\n            $(play_video_btn, ios_video_player_wrapper).addClass('hidden');\n        }\n\n        //update label text\n        span_label.text(input.label);\n\n        //Localise\n        if (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n            EC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n        }\n\n        //if a value is stored, on the first load add it to hidden input field,  to be\n        // shown if no cached value is set\n        if (window.localStorage.edit_mode) {\n\n            if (value.stored === undefined) {\n                store_video_uri.val(value);\n                value = {\n                    cached: '',\n                    stored: value\n                };\n            }\n            else {\n\n                store_video_uri.val(value.stored);\n            }\n\n        }\n\n        console.log('value.stored ' + JSON.stringify(value.stored));\n\n        //If a cache value is set, add it to hidden field\n        cache_video_uri.val(value.cached || '');\n        console.log('cache_video_uri: ' + cache_video_uri.val());\n\n        //Show cached video if any, otherwise the stored video, if any\n        if (value.cached === '') {\n\n            console.log('cached value empty');\n\n            if (value.stored !== '') {\n\n                //build full path to get video from private app folder depending on platform\n                switch (window.device.platform) {\n                    case EC.Const.ANDROID:\n\n                        video_full_path_uri = EC.Const.ANDROID_APP_PRIVATE_URI + EC.Const.VIDEO_DIR + window.localStorage.project_name + '/' + value.stored;\n\n                        /** Copy video to cache folder to make it playable (rename it using timestamp).\n                         *    Due to permission issues, on Android files are not accessible by other\n                         * application\n                         *  Since Android support for <video> is pretty weak, we need to use an external\n                         * video player app top play the video\n                         *  (Whatever app capable of playing the video is installed on the device will be\n                         * triggered via an intent)\n                         */\n\n                        EC.Notification.showProgressDialog();\n                        $.when(EC.File.copyVideo(video_full_path_uri)).then(function (the_cached_filename) {\n\n                            //file has been copied, update view setting it as cached file to play\n                            cache_video_uri.val(the_cached_filename);\n                            play_video_btn.attr('data-video-path', the_cached_filename);\n                            play_video_btn.removeClass('ui-disabled');\n\n                            EC.Notification.hideProgressDialog();\n\n                        });\n                        break;\n\n                    case EC.Const.IOS:\n                        //build full path (file is stored in persisten storage (Documents folder))\n                        video_full_path_uri = EC.Const.IOS_APP_PRIVATE_URI + EC.Const.VIDEO_DIR + window.localStorage.project_name + '/' + value.stored;\n\n                        //add source to HTML5 video tag\n                        ios_video_player.attr('src', video_full_path_uri);\n\n                        /*this is causing the video to open automatically on iOS7,\n                         * it is here because the video preview does not work on iOS 8 without it\n                         */\n                        if (parseFloat(window.device.version) >= 8) {\n                            ios_video_player.load();\n                        }\n\n                        //show video player wrapper\n                        ios_video_player_wrapper.removeClass('hidden');\n                        break;\n                }\n\n            }\n            else {\n\n                play_video_btn.addClass('ui-disabled');\n                ios_video_player_wrapper.addClass('hidden');\n            }\n\n        }\n        else {\n\n            switch (window.device.platform) {\n\n                case EC.Const.ANDROID:\n                    //render the cached video\n                    _renderVideo(value.cached);\n                    break;\n\n                case EC.Const.IOS:\n                    ios_video_player_wrapper.removeClass('hidden');\n                    break;\n\n            }\n        }\n\n        //request temporary folder from file system based on platform\n        //todo: this will change on iOS with the next release to match Android I suppose\n        if (window.device.platform === EC.Const.IOS) {\n\n            window.requestFileSystem(LocalFileSystem.TEMPORARY, 0, function (the_file_system) {\n\n                console.log(JSON.stringify(the_file_system));\n                cached_path = the_file_system.root.nativeURL;\n                console.log('nativeURL: ' + cached_path);\n            }, function (error) {\n                console.log(JSON.stringify(error));\n            });\n\n        }\n        else {\n            //on Android only\n            window.resolveLocalFileSystemURL(cordova.file.externalCacheDirectory, function (the_file_system) {\n\n                console.log(JSON.stringify(the_file_system));\n                cached_path = the_file_system.nativeURL;\n                console.log('nativeURL: ' + cached_path);\n            }, function (error) {\n                console.log(JSON.stringify(error));\n            });\n        }\n\n        //Success callback\n        var onCaptureVideoSuccess = function (the_media_object) {\n\n            var cache_video_uri = $('div#branch-video div#branch-input-video input#cached-video-uri');\n\n            console.log(JSON.stringify(the_media_object[0]));\n\n            video_sd_path = the_media_object[0].fullPath;\n\n            EC.Notification.showProgressDialog();\n\n            //move video to cache folder (temporary storage), as by default on Android is saved in the DCIM/Camera folder\n            $.when(EC.File.moveVideo(video_sd_path, cache_video_uri.val())).then(function (the_cached_video_path) {\n\n                if (window.device.platform === EC.Const.IOS) {\n\n                    ios_video_player_wrapper.removeClass('hidden');\n\n                    //request temporary folder from file system\n                    window.requestFileSystem(LocalFileSystem.TEMPORARY, 0, function (the_file_system) {\n\n                        //imp! since Cordova 3.5+ 'fullPath' became nativeURL\n                        var temp_cache_path = the_file_system.root.nativeURL;\n\n                        var video_full_path = temp_cache_path + '/' + the_cached_video_path;\n\n                        ios_video_player.attr('src', video_full_path);\n\n                        cache_video_uri.val(the_cached_video_path);\n                        EC.Notification.hideProgressDialog();\n\n                    }, function (error) {\n                        console.log(JSON.stringify(error));\n                        EC.Notification.hideProgressDialog();\n                    });\n                }\n\n                if (window.device.platform === EC.Const.ANDROID) {\n\n                    //update cached video uri to use always the same name\n                    //when taking more videos for the same input and avoid several cached videos\n\n                    cache_video_uri.val(the_cached_video_path);\n                    play_video_btn.attr('data-video-path', the_cached_video_path);\n                    play_video_btn.removeClass('ui-disabled');\n                    EC.Notification.hideProgressDialog();\n                }\n\n            });\n\n        };\n\n        //Error callback\n        var onCaptureVideoError = function (error) {\n            console.log(error.message);\n        };\n\n        //play button handler\n        play_video_btn.off().on('vclick', function () {\n\n            var current_cached_video = $(this).attr('data-video-path');\n\n            //request temporary folder from file system based on platform\n            //todo this will chnage with new Cordova iOS releases to match Android probably\n            if (window.device.platform === EC.Const.IOS) {\n                window.requestFileSystem(LocalFileSystem.TEMPORARY, 0, function (the_file_system) {\n\n                    var temp_cache_path = the_file_system.root.nativeURL;\n                    var video_full_path = temp_cache_path + '/' + current_cached_video;\n\n                    window.plugins.videoPlayer.play(video_full_path);\n\n                }, function (error) {\n                    console.log(JSON.stringify(error));\n                });\n\n            }\n            else {\n                //Android only\n                window.resolveLocalFileSystemURL(cordova.file.externalCacheDirectory, function (the_file_system) {\n\n                    var temp_cache_path = the_file_system.nativeURL;\n                    var video_full_path = temp_cache_path + '/' + current_cached_video;\n\n                    window.plugins.videoPlayer.play(video_full_path);\n\n                }, function (error) {\n                    console.log(JSON.stringify(error));\n                });\n            }\n\n        });\n\n        //open camera app on click\n        video_btn.off().on('vclick', function () {\n\n            var options = {\n                limit: 1\n            };\n\n            // start video capture\n            navigator.device.capture.captureVideo(onCaptureVideoSuccess, onCaptureVideoError, options);\n        });\n\n    };\n\n    return module;\n\n}(EC.BranchInputTypes));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/*\n * @module EC\n * @submodule BranchInputs\n *\n */\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\t/*\n\t\t * get cached bracnh input value from localStorage by the passed position\n\t\t *\n\t\t * @method getCachedBranchInputValue\n\t\t * @param {int} the input position attribute in the form input sequence\n\t\t * @return {Object} {_id: <the input id>, type: <the input type>, value: <the current value cached>, position : <the input position property>}\n\t\t */\n\t\tmodule.getCachedInputValue = function(the_position) {\n\n\t\t\tvar branch_values;\n\t\t\tvar position = parseInt(the_position, 10);\n\t\t\tvar index = position - 1;\n\t\t\tvar i;\n\t\t\tvar iLength;\n\t\t\tvar empty_value = {\n\t\t\t\t_id : \"\",\n\t\t\t\ttype : \"\",\n\t\t\t\tvalue : EC.Const.SKIPPED,\n\t\t\t\tposition : \"\",\n\t\t\t\tis_primary_key : \"\"\n\t\t\t};\n\n\t\t\t//catch Chrome error `Uncaught SyntaxError: Unexpected end of input` when parsing empty content\n\t\t\ttry {\n\t\t\t\tbranch_values = JSON.parse(window.localStorage.branch_inputs_values);\n\n\t\t\t\t//if index is out of bounds\n\t\t\t\tif (branch_values[index] === undefined) {\n\t\t\t\t\treturn empty_value;\n\t\t\t\t}\n\n\t\t\t\t//search all values where the passed position matches\n\t\t\t\tiLength = branch_values.length;\n\t\t\t\tfor (i = 0; i < iLength; i++) {\n\n\t\t\t\t\t//if values[i] is null, this input was skipped by a jump so create an empty one\n\t\t\t\t\tif (branch_values[i] === null) {\n\n\t\t\t\t\t\tbranch_values[i] = empty_value;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//@bug on Android 2.3 :/ be careful with this comparison\n\t\t\t\t\tif (parseInt(branch_values[i].position, 10) === position) {\n\n\t\t\t\t\t\tif (window.localStorage.branch_edit_mode) {\n\n\t\t\t\t\t\t\twindow.localStorage.branch_edit_id = branch_values[i]._id;\n\t\t\t\t\t\t\twindow.localStorage.branch_edit_type = branch_values[i].type;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//return the value object found\n\t\t\t\t\t\treturn branch_values[i];\n\n\t\t\t\t\t}\n\n\t\t\t\t}//end for each input values\n\n\t\t\t\t//return an empty value if no position match found, meaning the value was not cache because skipped by a jump\n\t\t\t\treturn empty_value;\n\n\t\t\t} catch(error) {\n\t\t\t\t//Handle errors here\n\t\t\t\tconsole.log(error);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/*\n * @module EC\n * @submodule BranchInputs\n *\n */\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\tmodule.getCloneValue = function(the_type) {\n\n\t\t\tvar type = the_type;\n\t\t\tvar clone_value;\n\n\t\t\tswitch(type) {\n\n\t\t\t\tcase EC.Const.TEXT:\n\t\t\t\t\tclone_value = $('div.clone input#branch-text-clone').val();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.TEXTAREA:\n\t\t\t\t\tclone_value = $('div.clone textarea#branch-textarea-clone').val();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.INTEGER:\n\t\t\t\t\tclone_value = $('div.clone input#branch-integer-clone').val();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.DECIMAL:\n\t\t\t\t\tclone_value = $('div.clone input#branch-decimal-clone').val();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.BARCODE:\n\t\t\t\t\tclone_value = $('div#branch-input-barcode div.clone input#scan-result-confirm').val();\n\t\t\t\t\tbreak;\n\n\t\t\t}//switch\n\n\t\t\treturn clone_value.trim();\n\n\t\t};\n\t\t//getCloneValue\n\n\t\treturn module;\n\n\t}(EC.BranchInputs)); ","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/*\n * @module EC\n * @submodule BranchInputs\n *\n */\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\t/* Get the current branch input value based on the input type\n\t\t *\n\t\t * @return - a single value or an array of values based on the type passed\n\t\t */\n\t\tmodule.getCurrentValue = function(the_type) {\n\n\t\t\tvar type = the_type;\n\t\t\tvar values = [];\n\t\t\tvar checkboxes_values = [];\n\t\t\tvar current_value;\n\t\t\tvar got_value;\n\t\t\tvar input_holder;\n\n\t\t\tswitch(type) {\n\n\t\t\t\tcase EC.Const.TEXT:\n\t\t\t\t\tvalues.push($('div#branch-input-text input').val());\n\t\t\t\t\tgot_value = values[0].trim();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.TEXTAREA:\n\t\t\t\t\tvalues.push($('div#branch-input-textarea textarea').val());\n\t\t\t\t\tgot_value = values[0].trim();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.INTEGER:\n\t\t\t\t\tvalues.push($('div#branch-input-integer input').val());\n\t\t\t\t\tgot_value = values[0].trim();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.DECIMAL:\n\t\t\t\t\tvalues.push($('div#branch-input-decimal input#decimal-main').val());\n\t\t\t\t\tgot_value = values[0].trim();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.DATE:\n\t\t\t\t\tvalues.push($('div#branch-input-date input').val());\n\t\t\t\t\tgot_value = values[0];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.TIME:\n\t\t\t\t\tvalues.push($('div#branch-input-time input').val());\n\t\t\t\t\tgot_value = values[0];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.RADIO:\n\n\t\t\t\t\tinput_holder = $('div#branch-input-radio input[type=radio]:checked');\n\n\t\t\t\t\t/* single selection radio: grab both value and \"label\":\n\t\t\t\t\t * value is needed for the jumps/validation and label will be saved and displayed to users\n\t\t\t\t\t */\n\t\t\t\t\tcurrent_value = {\n\t\t\t\t\t\tvalue : \"\",\n\t\t\t\t\t\tindex : \"\"\n\t\t\t\t\t};\n\n\t\t\t\t\tcurrent_value.value = input_holder.val();\n\t\t\t\t\t   current_value.index = input_holder.attr(\"data-index\");\n\n\t\t\t\t\t//if no value selected among the radio options, create an empty object with NO_OPTION_SELECTED label\n                    if (current_value.value === undefined) {\n                        current_value.value = EC.Const.NO_OPTION_SELECTED;\n                        current_value.index = EC.Const.NO_OPTION_SELECTED;\n                    } else {\n                        current_value.value.trim();\n                        current_value.index.trim();\n                    }\n\t\t\t\t\t\n\n\t\t\t\t\tvalues.push(current_value);\n\n\t\t\t\t\tgot_value = values[0];\n\t\t\t\t\tbreak;\n\n\t\t\t\t//multiple selection checkboxes\n\t\t\t\tcase EC.Const.CHECKBOX:\n\n\t\t\t\t\t//loop through all the selected checkboxes\n\t\t\t\t\t$('div#branch-input-checkbox input[type=checkbox]:checked').each(function() {\n\n\t\t\t\t\t\tcheckboxes_values.push({\n\t\t\t\t\t\t\tvalue : $(this).val().trim(),\n\t\t\t\t\t\t\tlabel : $(this).parent().text().trim()\n\t\t\t\t\t\t});\n\n\t\t\t\t\t});\n\n\t\t\t\t\t//cache empty string if no checkboxes are selected\n\t\t\t\t\tvalues.push((checkboxes_values.length === 0) ? EC.Const.NO_OPTION_SELECTED : checkboxes_values);\n\n\t\t\t\t\tgot_value = values[0];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.DROPDOWN:\n\n\t\t\t\t\tinput_holder = $('div#branch-input-dropdown select option:selected');\n\n\t\t\t\t\t/* single selection dropdown\" grab both value and \"label\":\n\t\t\t\t\t * value is needed for the jumps/validation and label will be saved and displayed to users\n\t\t\t\t\t */\n\t\t\t\t\tcurrent_value = {\n\t\t\t\t\t\tvalue : \"\",\n\t\t\t\t\t\tindex : \"\"\n\t\t\t\t\t};\n\n\t\t\t\t\tcurrent_value.value = input_holder.val();\n\t\t\t\t\tcurrent_value.index = input_holder.attr('data-index');\n\n\t\t\t\t\t//if the value is \"0\", for consistency set it to a default for unselected option\n                    if (current_value.index === \"0\") {\n                        current_value.index = EC.Const.NO_OPTION_SELECTED;\n                    }\n\n\t\t\t\t\tvalues.push(current_value);\n\t\t\t\t\tgot_value = values[0];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.BARCODE:\n\t\t\t\t\tcurrent_value = $('div#branch-input-barcode input.scan-result').val();\n\t\t\t\t\tvalues.push(current_value);\n\t\t\t\t\t//console.log(\"barcode current value is: \" + current_value);\n\t\t\t\t\tgot_value = values[0];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.LOCATION:\n\t\t\t\t\tcurrent_value = $('div#branch-input-location textarea#branch-set-location-result').val();\n\t\t\t\t\tvalues.push(current_value);\n\t\t\t\t\tgot_value = values[0];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.AUDIO:\n\n\t\t\t\t\tif (EC.Utils.isChrome()) {\n\n\t\t\t\t\t\tcurrent_value = {\n\t\t\t\t\t\t\tcached : \"...audio cached  uri...\",\n\t\t\t\t\t\t\tstored : \"...audio stored uri...\"\n\t\t\t\t\t\t};\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t//console.log(\"getting audio file values\");\n\n\t\t\t\t\t\tcurrent_value = {\n\t\t\t\t\t\t\tcached : $('div#branch-input-audio input#cached-audio-uri').val(),\n\t\t\t\t\t\t\tstored : $('div#branch-input-audio input#stored-audio-uri').val()\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t//console.log('current_value ' + JSON.stringify(current_value));\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvalues.push(current_value);\n\t\t\t\t\tgot_value = values[0];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.VIDEO:\n\n\t\t\t\t\tif (EC.Utils.isChrome()) {\n\n\t\t\t\t\t\tcurrent_value = {\n\t\t\t\t\t\t\tcached : \"...video cached  uri...\",\n\t\t\t\t\t\t\tstored : \"...video stored uri...\"\n\t\t\t\t\t\t};\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.log(\"getting video file values\");\n\n\t\t\t\t\t\tcurrent_value = {\n\t\t\t\t\t\t\tcached : $('div#branch-input-video input#cached-video-uri').val(),\n\t\t\t\t\t\t\tstored : $('div#branch-input-video input#stored-video-uri').val()\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconsole.log('current_value ' + JSON.stringify(current_value));\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvalues.push(current_value);\n\t\t\t\t\tgot_value = values[0];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.PHOTO:\n\n\t\t\t\t\t//keep track of both cache value(image uri currently on canvas) and store value (image uri on the database)\n\t\t\t\t\tif (EC.Utils.isChrome()) {\n\n\t\t\t\t\t\tcurrent_value = {\n\t\t\t\t\t\t\tcached : \"placeholder.jpg\",\n\t\t\t\t\t\t\tstored : \"placeholder.jpg\"\n\t\t\t\t\t\t};\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcurrent_value = {\n\t\t\t\t\t\t\tcached : $('div#branch-input-photo input#cached-image-uri').val(),\n\t\t\t\t\t\t\tstored : $('div#branch-input-photo input#stored-image-uri').val()\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconsole.log('current_value ' + JSON.stringify(current_value));\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvalues.push(current_value);\n\t\t\t\t\tgot_value = values[0];\n\t\t\t\t\tbreak;\n\n\t\t\t}//switch\n\n\t\t\treturn got_value;\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/**\n * @module EC\n * @submodule EC.Inputs\n */\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\t/**\n\t\t * @method isEmptyPrimaryKey: Check whether a primary key exists in the array of branch values we are abut to save.\n\t\t */\n\t\tmodule.isEmptyPrimaryKey = function() {\n\n\t\t\tvar is_empty_primary_key = true;\n\t\t\tvar branch_inputs_values = JSON.parse(window.localStorage.branch_inputs_values);\n\t\t\tvar i;\n\t\t\tvar iLength;\n\n\t\t\tif (branch_inputs_values) {\n\t\t\t\tiLength = branch_inputs_values.length;\n\t\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\t\tif (branch_inputs_values[i].is_primary_key === 1) {\n\t\t\t\t\t\tis_empty_primary_key = (branch_inputs_values[i].value === \"\") ? true : false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn is_empty_primary_key;\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/*\n * @module EC\n * @submodule BranchInputs\n *\n */\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\t/**\n\t\t * @method setCachedBranchInputValue Set the current branch input value in localStorage, in the array branch_inputs_values\n\t\t *\n\t\t * (the value is then fetched from localStorage when the user navigate the branch form inputs back and forth\n\t\t * and displayed on screen)\n\t\t */\n\n\t\tmodule.setCachedInputValue = function(the_value, the_position, the_type, is_primary_key_flag) {\n\n\t\t\tvar wls = window.localStorage;\n\t\t\tvar branch_values;\n\t\t\tvar value = the_value;\n\t\t\tvar checkbox_values = [];\n\t\t\tvar position = the_position;\n\t\t\tvar index = position - 1;\n\t\t\tvar type;\n\t\t\tvar _id;\n\t\t\tvar is_primary_key = is_primary_key_flag;\n\t\t\tvar is_genkey_hidden = EC.Utils.isBranchFormGenKeyHidden();\n\t\t\tvar i;\n\t\t\tvar iLength;\n\n\t\t\tif (wls.branch_edit_mode) {\n\n\t\t\t\t_id = wls.branch_edit_id;\n\t\t\t\ttype = wls.branch_edit_type;\n\n\t\t\t} else {\n\n\t\t\t\t_id = '';\n\t\t\t\ttype = the_type;\n\n\t\t\t}\n\n\t\t\t//if the value is an object from either dropdown or radio inputs, cache the label only\n\t\t\tif (type === EC.Const.DROPDOWN || type === EC.Const.RADIO) {\n\t\t\t\tvalue = value.value;\n\t\t\t}\n\n\t\t\t//if the value is an array from checkboxes, cache an array of the labels\n\t\t\tif (type === EC.Const.CHECKBOX) {\n\n\t\t\t\t//if any checkbox was selected, get it, otherwise do nothing and let the value be EC.Const.NO_OPTION_SELECTED\n\t\t\t\tif (value !== EC.Const.NO_OPTION_SELECTED) {\n\n\t\t\t\t\tiLength = value.length;\n\t\t\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\t\t\tcheckbox_values.push(value[i].value);\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = checkbox_values;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//catch Chrome error `Uncaught SyntaxError: Unexpected end of input` when parsing empty content\n\t\t\ttry {\n\t\t\t\tbranch_values = JSON.parse(wls.branch_inputs_values);\n\t\t\t} catch(error) {\n\t\t\t\t//Handle errors here\n\t\t\t\tbranch_values = [];\n\t\t\t}\n\n\t\t\t//TODO: check against values length??? try when hidden key is last element of the form\n\t\t\tif (branch_values[index] !== null && index < branch_values.length) {\n\n\t\t\t\t//if the values already is cached in branch_inputs_values AND it is a primary_key AND it is a hidden auto generated key, do not override it but use that same value\n\t\t\t\t//This happens when the user is editing a branch form with an autogen key hidden, we do no want to override it\n\t\t\t\tif (branch_values[index].is_primary_key === 1 && is_genkey_hidden === 1) {\n\t\t\t\t\tvalue = branch_values[index].value;\n\t\t\t\t} else {\n\n\t\t\t\t\tbranch_values[index] = {\n\t\t\t\t\t\t_id : _id,\n\t\t\t\t\t\ttype : type,\n\t\t\t\t\t\tvalue : value,\n\t\t\t\t\t\tposition : position,\n\t\t\t\t\t\tis_primary_key : is_primary_key\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tbranch_values[index] = {\n\t\t\t\t\t_id : _id,\n\t\t\t\t\ttype : type,\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tposition : position,\n\t\t\t\t\tis_primary_key : is_primary_key\n\t\t\t\t};\n\t\t\t}\n\n\t\t\twls.branch_inputs_values = JSON.stringify(branch_values);\n\t\t\tconsole.log(\"branch_input_values: \" + wls.branch_inputs_values, true);\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.BranchInputs = EC.BranchInputs || {};\nEC.BranchInputs = ( function(module) {\"use strict\";\n\n\t\tvar _isUniqueValue = function(the_value, the_branch_form_name) {\n\n\t\t\tvar cached_branch_entry_keys;\n\t\t\tvar current_branch_form_keys;\n\t\t\tvar i;\n\t\t\tvar iLength;\n\t\t\tvar value = the_value;\n\t\t\tvar branch_form_name = the_branch_form_name;\n\t\t\tvar unique = true;\n\n\t\t\t//get Branch primary keys\n\t\t\ttry {\n\t\t\t\tcached_branch_entry_keys = JSON.parse(window.localStorage.cached_branch_entry_keys);\n\t\t\t} catch (error) {\n\t\t\t\tcached_branch_entry_keys = [];\n\t\t\t}\n\n\t\t\tiLength = cached_branch_entry_keys.length;\n\t\t\tif (iLength > 0) {\n\n\t\t\t\t//get primary keys for the current form\n\t\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\t\tif (cached_branch_entry_keys[i].branch_form_name === branch_form_name) {\n\n\t\t\t\t\t\tcurrent_branch_form_keys = cached_branch_entry_keys[i].primary_keys;\n\n\t\t\t\t\t\t//check if the current value clashes a branch primary key\n\t\t\t\t\t\tif (current_branch_form_keys.indexOf(value) !== -1) {\n\t\t\t\t\t\t\tunique = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn unique;\n\t\t};\n\n\t\tmodule.validateValue = function(the_input, the_value, the_position) {\n\n\t\t\tvar self = this;\n\t\t\tvar input = the_input;\n\t\t\tvar current_value = the_value;\n\t\t\tvar current_position = the_position;\n\t\t\tvar clone_value = \"\";\n\t\t\tvar is_primary_key = $('span.label').attr('data-primary-key');\n\t\t\tvar validation = {};\n\n\t\t\t//if we need to check for a double entry, get clone value\n\t\t\tif (parseInt(input.has_double_check, 10) === 1) {\n\t\t\t\tclone_value = self.getCloneValue(input.type);\n\t\t\t}\n\n\t\t\t//validate input\n\t\t\tvalidation = EC.Utils.isValidValue(input, current_value, clone_value);\n\n\t\t\tif (!validation.is_valid) {\n\t\t\t\t//value not valid, return\n\t\t\t\treturn validation;\n\t\t\t}\n\n\t\t\t//check if this input value is a primary key field: if it is, check uniqueness (skip when we are editing)\n\t\t\tif (is_primary_key === 'true' && !window.localStorage.branch_edit_mode) {\n\n\t\t\t\tif (!_isUniqueValue(current_value)) {\n\n\t\t\t\t\t//primary key value already exist, return\n\t\t\t\t\tvalidation = {\n\t\t\t\t\t\tis_valid : false,\n\t\t\t\t\t\tmessage : \"Value already exists!\"\n\t\t\t\t\t};\n\n\t\t\t\t\t//on Chrome native alert is not working: dump to console error message\n\t\t\t\t\tconsole.log(\"Error: value already exists\");\n\n\t\t\t\t\treturn validation;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn validation;\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.BranchInputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true */\n/*global $, jQuery, cordova, device*/\n\nvar EC = EC || {};\nEC.Download = EC.Download || {};\nEC.Download = ( function() {\n\t\t\"use strict\";\n\n\t\tvar project_server_url;\n\t\tvar project_name;\n\t\tvar project_id;\n\t\tvar form_name;\n\t\tvar form_id;\n\t\tvar chosen_form_id;\n\t\tvar chosen_form_name;\n\t\tvar entries;\n\t\tvar data;\n\n\t\tfunction _commitRemoteEntry(the_single_remote_entry) {\n\n\t\t\t$.when(EC.Create.commitRemoteEntry(project_id, form_id, the_single_remote_entry)).then(function() {\n\n\t\t\t\tif (entries.length === 0) {\n\n\t\t\t\t\tif (data.length === 0) {\n\n\t\t\t\t\t\tEC.Notification.showToast(\"All data downloaded\", \"short\");\n\n\t\t\t\t\t\t//@bug on iOS, spinner loader not hiding, force to hide\n\t\t\t\t\t\t// it here calling it directly with no timeout\n\t\t\t\t\t\tif (window.device.platform === EC.Const.IOS) {\n\t\t\t\t\t\t\twindow.ActivityIndicator.hide();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//clear cached object for this form (table)\n\t\t\t\t\t\twindow.localStorage.removeItem(\"dre_local_entries_keys\");\n\t\t\t\t\t\twindow.localStorage.removeItem(\"dre_inputs\");\n\n\t\t\t\t\t\t//back to forms list\n\t\t\t\t\t\tEC.Routing.changePage(window.localStorage.back_nav_url);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\n\t\t\t\t\t\tentries = data.splice(0, 500);\n\t\t\t\t\t\t_commitRemoteEntry(entries.shift());\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_commitRemoteEntry(entries.shift());\n\t\t\t\t}\n\n\t\t\t}, function() {\n\n\t\t\t\t/* When downloading remote entries, if parent entry is missing on the device database the user needs to download from the parent table first\n\t\t\t\t* to keep the database referential integrity\n\t\t\t\t*/\n\n\t\t\t\t//TODO: get parent form name\n\t\t\t\tvar parent_form = EC.Utils.getParentFormByChildID(chosen_form_id);\n\n\t\t\t\tEC.Notification.hideProgressDialog();\n\t\t\t\tEC.Notification.showAlert(\"Error\", \"Parent keys for \" + chosen_form_name + \" are missing on device database, please download \" + parent_form.name + \" entries first\");\n\n\t\t\t});\n\n\t\t}\n\n\t\tvar _performRequest = function(the_url) {\n\n\t\t\tvar url = the_url;\n\t\t\tvar hash;\n\n\t\t\t$.ajax({\n\t\t\t\turl : url, //url\n\t\t\t\ttype : 'get', //method type post or get\n\t\t\t\tcrossDomain : true,\n\t\t\t\ttimeout : 60000, // stop after 60 seconds\n\t\t\t\tdataType : 'json', //return data type\n\t\t\t\tsuccess : function(the_data) {\n\n\t\t\t\t\tdata = the_data;\n\n\t\t\t\t\t//console.log(JSON.stringify(data));\n\n\t\t\t\t\tif (data.length === 0) {\n\t\t\t\t\t\t//no entries on the server yet, go back to form list\n\t\t\t\t\t\tEC.Notification.showAlert(\"Sorry\", \"No remote entries for the selected form yet!\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tentries = data.splice(0, 500);\n\t\t\t\t\t\t_commitRemoteEntry(entries.shift());\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror : function(request, status, error) {\n\n\t\t\t\t\tEC.Notification.hideProgressDialog();\n\n\t\t\t\t\t//@bug on the server, which is sending a full html page as\n\t\t\t\t\t// response when project is private\n\t\t\t\t\tif (request.responseText) {\n\t\t\t\t\t\tif (request.responseText.trim().charAt(0) === \"<\") {\n\t\t\t\t\t\t\tEC.Notification.showAlert(\"Sorry, private project\", \"This project is set as private therefore you cannot download data\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (status === \"timeout\" && error === \"timeout\") {\n\t\t\t\t\t\tEC.Notification.showAlert(\"Error\", \"Server Timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\t//show request error\n\t\t\t\t\tconsole.log(status + \", \" + error);\n\t\t\t\t\tconsole.log(request);\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t};\n\n\t\tvar fetchRemoteData = function() {\n\n\t\t\tEC.Notification.showProgressDialog();\n\n\t\t\t//get request ajax\n\t\t\t_performRequest(project_server_url + project_name + \"/\" + chosen_form_name + \".json\");\n\n\t\t};\n\n\t\tvar renderDownloadView = function() {\n\n\t\t\tvar forms = JSON.parse(window.localStorage.forms);\n\t\t\tvar i;\n\t\t\tvar j;\n\t\t\tvar iLength = forms.length;\n\t\t\tvar jLength = iLength;\n\t\t\tvar HTML = \"\";\n\t\t\tvar dom_list = $('div#download div#download-forms');\n\t\t\tvar page = $('#download');\n\t\t\tvar form_btn;\n\t\t\tvar form_tree;\n\t\t\tvar hash = \"forms.html?project=\" + project_id + \"&name=\" + project_name;\n\t\t\tvar back_btn = $(\"div#download div[data-role='header'] div[data-href='back-btn']\");\n\n\t\t\tproject_id = window.localStorage.project_id;\n\t\t\tproject_name = window.localStorage.project_name;\n\t\t\tproject_server_url = window.localStorage.project_server_url;\n\n\t\t\t//set back_nav_url for navigating back to forms list\n\t\t\twindow.localStorage.back_nav_url = \"forms.html?project=\" + project_id + \"&name=\" + project_name;\n\n\t\t\tvar _form_btn_handler = function() {\n\n\t\t\t\t//get chosen form data\n\t\t\t\tchosen_form_name = $(this).find(\"span\").text();\n\t\t\t\tchosen_form_id = $(this).attr(\"id\");\n\n\t\t\t\t//update form tree in localStorage\n\t\t\t\tform_tree = EC.Utils.getParentAndChildForms(chosen_form_id);\n\t\t\t\twindow.localStorage.form_tree = JSON.stringify(form_tree);\n\t\t\t\tform_id = chosen_form_id;\n\n\t\t\t\tEC.Notification.askConfirm(\"Download remote data\", \"Are you sure to proceed? It might take some time\", \"EC.Download.fetchRemoteData\");\n\t\t\t};\n\n\t\t\t//handle back button hash\n\t\t\tback_btn.off().one('vclick', function(e) {\n\t\t\t\tEC.Routing.changePage(window.localStorage.back_nav_url);\n\t\t\t});\n\n\t\t\t//build buttons\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\tHTML += '<div id=\"' + forms[i]._id + '\" class=\"embedded-btn\">';\n\t\t\t\tHTML += '<i class=\"fa fa-download  fa-fw fa-ep-embedded-btn\"></i>';\n\t\t\t\tHTML += '<span class=\"v-nav-item-label\">' + forms[i].name + '</span>';\n\t\t\t\tHTML += '</div>';\n\t\t\t}\n\n\t\t\t//add buttons to dom\n\t\t\tdom_list.append(HTML);\n\n\t\t\t//bind buttons\n\t\t\tfor ( j = 0; j < jLength; j++) {\n\t\t\t\tform_btn = $(\"div#download div#download-forms div#\" + forms[j]._id);\n\t\t\t\tform_btn.off().on('vclick', _form_btn_handler);\n\t\t\t}\n\t\t};\n\n\t\treturn {\n\t\t\tfetchRemoteData : fetchRemoteData,\n\t\t\trenderDownloadView : renderDownloadView\n\t\t};\n\n\t}());\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/**\n * @module EC\n * @submodule Entries\n */\nvar EC = EC || {};\nEC.Entries = EC.Entries || {};\nEC.Entries = ( function(module) {\"use strict\";\n\n\t\tmodule.getBranchEntriesList = function() {\n\n\t\t\t/* hierarchy_entry_key_value is the current value of the primary key for the form we want to enter branches to;\n\t\t\t * we need it as we need to link the branch entries to a single hierarchy form entry (like it is its parent)\n\t\t\t */\n\t\t\tvar parent_key_position = EC.Inputs.getPrimaryKeyRefPosition();\n\t\t\tvar hierarchy_entry_key_value = EC.Inputs.getMainFormCurrentKeyValue(parent_key_position);\n\t\t\tvar project_id = parseInt(window.localStorage.project_id, 10);\n\t\t\tvar branch_form = JSON.parse(window.localStorage.branch_form);\n\t\t\tvar offset = 0;\n\n\t\t\t//look for branch entries\n\t\t\t$.when(EC.Select.getBranchEntries(project_id, branch_form.name, hierarchy_entry_key_value, 0)).then(function(the_branch_entries) {\n\n\t\t\t\tif (the_branch_entries.length > 0) {\n\t\t\t\t\t//entries found, render list\n\t\t\t\t\tEC.Entries.renderBranchEntriesList(the_branch_entries);\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\t//no branch entries, user probably deleted all of them, go back to hierarchy form\n\t\t\t\t\tEC.BranchInputs.backToHierarchyForm();\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Entries));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/**\n * @module EC\n * @submodule Entries\n */\nvar EC = EC || {};\nEC.Entries = EC.Entries || {};\nEC.Entries = ( function(module) {\n        \"use strict\";\n\n        /**\n         *\n         * @param {String} the_hash_to_parse: Query string like\n         * \"branch_form_name=awesome_form&entry_key=1297f543-fe9e-4c01-e5a0-10512e7968b0\"\n         */\n        module.getBranchEntryValues = function(the_hash_to_parse) {\n\n            //get branch form name and entry key parsing the href\n            var hash = the_hash_to_parse.split('?');\n            var parent;\n            var is_child_form_nav = window.localStorage.is_child_form_nav;\n            var form = hash[1].split('&');\n            var branch_form_name = form[0].replace(\"branch_form_name=\", \"\");\n            var entry_key = form[1].replace(\"entry_key=\", \"\");\n            var project_id = window.localStorage.project_id;\n\n            /* hierarchy_entry_key_value is the current value of the primary key\n             * for the form we want to enter branches to\n             * we need it as we need to link the branch entries to a single main\n             * form entry (like it is its parent)\n             */\n            var parent_key_position = EC.Inputs.getPrimaryKeyRefPosition();\n            var hierarchy_entry_key_value = EC.Inputs.getMainFormCurrentKeyValue(parent_key_position);\n\n            //cache hash to go back to branch-entry-values list when leaving an\n            // edit action\n            window.localStorage.branch_entry_values_url = \"branch-entry-values.html?branch_form_name=\" + branch_form_name + \"&entry_key=\" + entry_key;\n\n            //Select all values stored for this entry THEN render view\n            $.when(EC.Select.getBranchEntryValues(project_id, branch_form_name, entry_key, hierarchy_entry_key_value)).then(function(the_values) {\n\n                //get inputs to map values against labels for dropdown, radio and\n                // checkbox\n                $.when(EC.Select.getBranchInputs(branch_form_name, project_id)).then(function(branch_inputs, has_jumps) {\n\n                    //set inputs in memory\n                    EC.BranchInputs.setInputs(branch_inputs, has_jumps);\n\n                    EC.Entries.renderBranchEntryValues(the_values);\n\n                    window.localStorage.removeItem(\"branch_has_new_jump_sequence\");\n\n                });\n\n            });\n\n        };\n\n        return module;\n\n    }(EC.Entries));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/**\n * @module EC\n * @submodule Entries\n */\nvar EC = EC || {};\nEC.Entries = EC.Entries || {};\nEC.Entries = ( function(module) {\n        \"use strict\";\n\n        /**\n         * @method getEntryValues Fetches the list of values for a single entry\n         * (form)\n         * @param {String} the_hash_to_parse Info about which data to fetch\n         * \"#values?form=1&entry_key=Kingston&direction=forward\"\n         *\n         * #values we are requesting a list of values\n         * form=1 The form id\n         * entry_key=Kingston The value of the primary key for the selected entry\n         * direction=forwardThe direction the user is navigating to\n         *\n         */\n        module.getEntryValues = function(the_hash_to_parse) {\n\n            //get form id and entry key parsing the href\n            var hash = the_hash_to_parse.split('?');\n            var wls = window.localStorage;\n            var breadcrumbs_trail = [];\n            var parent;\n            var parent_path;\n            var nav_parent_path;\n            var is_child_form_nav = wls.is_child_form_nav;\n            var form = hash[1].split('&');\n            var form_id = form[0].replace(\"form=\", \"\");\n            var entry_key = form[1].replace(\"entry_key=\", \"\");\n            var direction = form[2].replace(\"direction=\", \"\");\n            var form_name = wls.form_name;\n            var form_tree = JSON.parse(wls.form_tree);\n            var entries_totals = [];\n            var children;\n            var current_view_url_parts;\n\n            //cache current page url for navigation purposes\n            current_view_url_parts = the_hash_to_parse.split(\"/\");\n            wls.current_view_url = current_view_url_parts[current_view_url_parts.length - 1];\n\n            //update entry key in localStorage\n            wls.entry_key = entry_key;\n\n            //cache url to go back to entry-values list when leaving an edit\n            // action\n            wls.back_edit_nav_url = \"entry-values.html?form=\" + form_id + \"&entry_key=\" + entry_key + \"&direction=\" + EC.Const.EDITING;\n\n            //try if a parent is defined, in that case we are selecting a child\n            // entry from a child form list\n            try {\n                parent = form[3].replace(\"parent=\", \"\");\n\n                //remove any breadcrumbs for navigation\n                wls.removeItem(\"breadcrumbs\");\n\n            } catch (e) {\n                parent = \"\";\n                console.log(e);\n            }\n\n            //get breadcrumb trail, first iteration will be \"\" when it is the top\n            // form on the tree\n            try {\n                breadcrumbs_trail = JSON.parse(wls.breadcrumbs);\n            } catch (error) {\n                breadcrumbs_trail = [];\n            }\n\n            /* Get parent path from breadcrumbs (if not defined in localStorage\n             * by a Store Edit action)\n             * When saving a form, window.localStorage.parent_path is set in\n             * EC.Inputs.buildRows\n             * We need that value to uniquely identify a set of entries when\n             * navigating down the tree structure.\n             * It will be like key|key|key... so the full path to the root.\n             */\n            nav_parent_path = wls.parent_path;\n            if (nav_parent_path === undefined) {\n                parent_path = (breadcrumbs_trail[0] === \"\") ? breadcrumbs_trail.join(EC.Const.ENTRY_ROOT_PATH_SEPARATOR).substring(1) : breadcrumbs_trail.join(EC.Const.ENTRY_ROOT_PATH_SEPARATOR);\n            } else {\n                //a parent path is defined, therefore we are coming back from the\n                // inputs page after a \"Store Edit\" action\n                parent_path = nav_parent_path;\n            }\n\n            //update breadcrumb trail based on navigation direction\n            switch(direction) {\n\n                case EC.Const.FORWARD:\n                    breadcrumbs_trail.push(entry_key);\n\n                    break;\n                case EC.Const.BACKWARD:\n                    breadcrumbs_trail.pop();\n                    break;\n                case EC.Const.EDITING:\n                    console.log(\"back from editing\");\n                    //do nothing\n                    break;\n                case EC.Const.VIEW:\n\n                    breadcrumbs_trail.push(entry_key);\n\n                    break;\n\n            }\n\n            wls.setItem(\"breadcrumbs\", JSON.stringify(breadcrumbs_trail));\n            //window.localStorage.setItem(\"entries_totals\",\n            // JSON.stringify(breadcrumbs_trail));\n\n            //get current form tree (parent and child form based on the active\n            // one)\n            form_tree = EC.Utils.getParentAndChildForms(form_id);\n\n            if (parent !== \"\") {\n\n                parent_path = (parent_path === \"\") ? parent : parent + EC.Const.ENTRY_ROOT_PATH_SEPARATOR + parent_path;\n            }\n\n            //if parent_path at this point is equal to the entry key, set it to\n            // \"\" (It happens when tapping \"Store Edit\" after editing a form)\n            if (parent_path === entry_key) {\n                parent_path = \"\";\n\n                //remove last element from breadcrumb trail\n                breadcrumbs_trail = JSON.parse(wls.breadcrumbs);\n                breadcrumbs_trail.pop();\n                wls.setItem(\"breadcrumbs\", JSON.stringify(breadcrumbs_trail));\n            }\n\n            //remove parent_path flag to restore normal navigation\n            // (backward-forward)\n            wls.removeItem(\"parent_path\");\n\n            //reset offset for entries pagination\n            //wls.QUERY_ENTRIES_OFFSET = 0;\n\n            //Select all values stored for this entry\n            $.when(EC.Select.getEntryValues(form_id, entry_key, parent_path)).then(function(the_values) {\n\n                //get inputs to map values against labels for dropdown, radio and\n                // checkbox\n                $.when(EC.Select.getInputs(form_id)).then(function(inputs, has_jumps) {\n\n                    //set inputs in memory\n                    EC.Inputs.setInputs(inputs, has_jumps);\n\n                    //Render entry values list\n                    EC.Entries.renderEntryValues(the_values);\n\n                });\n\n            });\n\n        };\n\n        return module;\n\n    }(EC.Entries));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n\n/**\n * @module EC\n * @submodule Entries\n */\nvar EC = EC || {};\nEC.Entries = EC.Entries || {};\nEC.Entries = ( function(module) {\"use strict\";\n\n\t\t/**\n\t\t *\n\t\t * @param {String} the_hash_to_parse Query string with information about which data will need to be fetched\n\t\t * like \"#entries?form=1&name=University&entry_key=&direction=backward\"\n\t\t *\n\t\t * #entries indicates we are requesting a list of entries\n\t\t * form=1 The form id we are requesting entries for\n\t\t * name=University The form name\n\t\t * direction=backward The direction the user is navigating to (either forward or backward)\n\t\t */\n\t\tmodule.getList = function(the_hash_to_parse) {\n\n\t\t\tvar form_id;\n\t\t\tvar form;\n\t\t\tvar form_name;\n\t\t\tvar form_tree;\n\t\t\tvar entry_key;\n\t\t\tvar direction;\n\t\t\tvar children;\n\t\t\tvar breadcrumbs_trail = [];\n\t\t\tvar entries_totals = [];\n\t\t\tvar parent_path;\n\t\t\tvar nav_parent_path;\n\t\t\tvar offset = 0;\n\t\t\tvar parent_offset = 0;\n\t\t\tvar children_offset = 0;\n\t\t\tvar total;\n\t\t\tvar current_view_url_parts;\n\t\t\tvar wls = window.localStorage;\n\n\t\t\t//cache current page url for navigation purposes\n\t\t\tcurrent_view_url_parts = the_hash_to_parse.split(\"/\");\n\t\t\twls.current_view_url = current_view_url_parts[current_view_url_parts.length - 1];\n\n\t\t\t//get form id parsing the href hash\n\t\t\tvar hash = the_hash_to_parse.split('?');\n\n\t\t\tnav_parent_path = wls.parent_path;\n\n\t\t\tform = hash[1].split('&');\n\t\t\tform_id = form[0].replace(\"form=\", \"\");\n\t\t\tform_name = form[1].replace(\"name=\", \"\");\n\t\t\tentry_key = form[2].replace(\"entry_key=\", \"\");\n\t\t\tdirection = form[3].replace(\"direction=\", \"\");\n\n\t\t\tchildren = parseInt(form[4].replace(\"children=\", \"\"), 10);\n\n\t\t\t//get breadcrumb trail, first iteration will be \"\" when it is the top form on the tree\n\t\t\tbreadcrumbs_trail = JSON.parse(wls.getItem(\"breadcrumbs\")) || breadcrumbs_trail;\n\n\t\t\t//get total of entries, first iteration generate empty object\n\t\t\tentries_totals = JSON.parse(wls.getItem(\"entries_totals\")) || entries_totals;\n\n\t\t\t//update breadcrumb trail and totals based on navigation direction\n\t\t\tswitch(direction) {\n\n\t\t\t\tcase EC.Const.FORWARD:\n\n\t\t\t\t\tbreadcrumbs_trail.push(entry_key);\n\n\t\t\t\t\tif (entries_totals.length === breadcrumbs_trail.length - 1) {\n\t\t\t\t\t\tentries_totals.push({\n\t\t\t\t\t\t\tform : form_name,\n\t\t\t\t\t\t\tentry_key : entry_key,\n\t\t\t\t\t\t\tentries_total : children\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//delete cached entries when going forward\n\t\t\t\t\twindow.localStorage.removeItem('cached_entries_list');\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase EC.Const.BACKWARD:\n\t\t\t\t\tbreadcrumbs_trail.pop();\n\t\t\t\t\tentries_totals.pop();\n\t\t\t\t\tbreak;\n\t\t\t\tcase EC.Const.EDITING:\n\t\t\t\t\t//to do\n\t\t\t\t\tbreak;\n\t\t\t\tcase EC.Const.ADDING:\n\t\t\t\t\t//to do\n\t\t\t\t\tbreak;\n\t\t\t\tcase EC.Const.VIEW:\n\t\t\t\t\tbreadcrumbs_trail.pop();\n\t\t\t\t\t//to do\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\twls.setItem(\"breadcrumbs\", JSON.stringify(breadcrumbs_trail));\n\t\t\twls.setItem(\"entries_totals\", JSON.stringify(entries_totals));\n\n\t\t\t//get current form tree (parent and child form based on the active one)\n\t\t\tform_tree = EC.Utils.getParentAndChildForms(form_id);\n\t\t\twls.form_id = form_id;\n\t\t\twls.form_name = form_name;\n\t\t\twls.form_tree = JSON.stringify(form_tree);\n\n\t\t\t//select all entries for selected form based on tree structure\n\t\t\tif ((form_tree.parent > 0 && entry_key === \"\" && nav_parent_path === undefined) || wls.is_child_form_nav) {\n\n\t\t\t\t//we did not select the top form, select all the entries for the selected child form\n\t\t\t\tEC.Select.getChildEntries(form_id, parent_offset, children_offset);\n\n\t\t\t\t//set a flag to indicate we are in \"child form navigation mode\" i.e. user selected a child form in the forms list\n\t\t\t\twls.is_child_form_nav = 1;\n\n\t\t\t} else {\n\n\t\t\t\t//top form was selected, remove child form navigation flag\n\t\t\t\twls.removeItem(\"is_child_form_nav\");\n\n\t\t\t\tif (nav_parent_path) {\n\n\t\t\t\t\tconsole.log(nav_parent_path);\n\n\t\t\t\t\tparent_path = nav_parent_path;\n\n\t\t\t\t} else {\n\t\t\t\t\tparent_path = (breadcrumbs_trail[0] === \"\") ? breadcrumbs_trail.join(EC.Const.ENTRY_ROOT_PATH_SEPARATOR).substring(1) : breadcrumbs_trail.join(EC.Const.ENTRY_ROOT_PATH_SEPARATOR);\n\n\t\t\t\t}\n\n\t\t\t\t//set parameters for pagination\n\t\t\t\twls.load_more_parameters = JSON.stringify({\n\t\t\t\t\tform_id : form_id,\n\t\t\t\t\tparent_path : parent_path\n\t\t\t\t});\n\n\t\t\t\t//TODO: if there are entries cached and we are navigating back from a VIEW action, render the cached list\n\n\t\t\t\tif (direction === EC.Const.VIEW && window.localStorage.cached_entries_list) {\n\t\t\t\t\t//EC.Entries.renderCachedList();\n\t\t\t\t\tEC.Entries.renderList(JSON.parse(window.localStorage.cached_entries_list));\n\t\t\t\t} else {\n\n\t\t\t\t\t//if entry_key=\"\" we are requesting the list of all entries (parent will be 0), typical when we are in the 'Forms' screen and select the top form\n\t\t\t\t\t$.when(EC.Select.getEntries(form_id, parent_path, offset)).then(function(the_entries) {\n\t\t\t\t\t\tEC.Entries.renderList(the_entries);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Entries));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/**\n * @module EC\n * @submodule Entries\n *\n * Deals with:\n * -getting the list of entries for a form and render it\n * -getting list of values for a single entry and render it\n * -getting and rendering list of child entries, i.e. list of entries for a child\n * form grouped by the parent form. (When the user selects a form which is not\n * the top one)\n * -unsync a single entry (to be re-uploaded if needed)\n * -delete all entries for a form\n * -delete all media for a form, but keeping the data\n * -delete all synced entries, to free space on the device. It deletes only the\n * entries fully synced, (data + media)\n *\n */\nvar EC = EC || {};\nEC.Entries = EC.Entries || {};\nEC.Entries = (function (module) {\n    'use strict';\n    /**\n     * @method unsyncEntry\n     *\n     * unsync a single entry\n     */\n    module.unsyncEntry = function () {\n\n        var rows_to_unsync = JSON.parse(window.localStorage.inputs_values);\n        var project_id = parseInt(window.localStorage.project_id, 10);\n        var entry_key = window.localStorage.entry_key;\n\n        //unsync all the value rows for this entry\n        $.when(EC.Update.unsyncOneHierarchyEntry(rows_to_unsync, entry_key, project_id)).then(function () {\n\n            //close panel\n            $('.entry-values-options').panel('close');\n\n            //disable unsync btn\n            $('div#entry-values div.entry-values-options ul li#unsync-entry').addClass('ui-disabled');\n\n            EC.Notification.showToast(EC.Localise.getTranslation('entry_unsynced'), 'short');\n\n        }, function () {\n\n            EC.Notification.showAlert(EC.Localise.getTranslation('error'), EC.Localise.getTranslation('generic_error'));\n        });\n\n    };\n\n    module.unsyncAllEntries = function () {\n\n        var forms = JSON.parse(window.localStorage.forms);\n        var project_id = parseInt(window.localStorage.project_id, 10);\n\n        //get all the rows to unsync\n        $.when(EC.Update.unsyncAllEntries(forms, project_id)).then(function () {\n            //close panel\n            $('div#forms div#project-options').panel('close');\n\n            //disable unsync entries button\n            $('div#forms div#project-options ul li#unsync-all-data').addClass('ui-disabled');\n\n            //disable delete sync entries button\n            $('div#forms div#project-options ul li#delete-synced-entries').addClass('ui-disabled');\n\n            EC.Notification.showToast(EC.Localise.getTranslation('all_data_synced'), 'short');\n\n        }, function () {\n            //close panel\n            $('div#forms div#project-options').panel('close');\n            EC.Notification.showAlert(EC.Localise.getTranslation('error'), EC.Localise.getTranslation('generic_error'));\n        });\n\n    };\n\n    /**\n     * @method deleteAllEntries Call model class to delete all the entris for\n     * the currently selected project\n     */\n    module.deleteAllEntries = function () {\n\n        var project_name = window.localStorage.project_name;\n\n        $.when(EC.Delete.deleteAllEntries(EC.Const.DELETE, project_name)).then(function () {\n\n            //disable related btns (we do not have any entries for this\n            // project now)\n            $('div#forms div#project-options ul li#delete-all-entries').addClass('ui-disabled');\n            $('div#forms div#project-options ul li#delete-synced-entries').addClass('ui-disabled');\n            $('div#forms div#project-options ul li#delete-media-files').addClass('ui-disabled');\n            $('div#forms div#project-options ul li#unsync-all-data').addClass('ui-disabled');\n\n            //update UI\n            var forms_list_items = $('div#forms-list ul li');\n\n            //update entry count bubbles in forms list\n            forms_list_items.each(function (i) {\n\n                if (i === 0) {\n                    //set top form children count to 0\n                    $(this).find('a').find('span.ui-li-count.ui-btn-up-c.ui-btn-corner-all').text('0');\n\n                }\n                else {\n                    //disable children forms and hide bubble count\n                    $(this).addClass('ui-disabled');\n                    $(this).find('a').find('span.ui-li-count.ui-btn-up-c.ui-btn-corner-all').remove();\n\n                }\n\n            });\n\n            //success\n            $('#project-options').panel('close');\n            EC.Notification.hideProgressDialog();\n            EC.Notification.showToast(EC.Localise.getTranslation('all_entries_deleted'), 'short');\n\n        }, function () {\n            //error occurred\n            $('#project-options').panel('close');\n            EC.Notification.hideProgressDialog();\n            EC.Notification.showAlert(EC.Localise.getTranslation('error'), EC.Localise.getTranslation('generic_error'));\n        });\n    };\n\n    /**\n     * @method deleteAllMedia Call model class to delete all the media files\n     * for the currently selected project\n     *\n     */\n    module.deleteAllMedia = function () {\n\n        var project_name = window.localStorage.project_name;\n        var forms = JSON.parse(window.localStorage.forms);\n\n        if (!EC.Utils.isChrome()) {\n\n            //delete media files (if any), project not deleted so 2nd argument is set to\n            // false\n            $.when(EC.File.deleteAllMedia(project_name, false, [EC.Const.PHOTO_DIR, EC.Const.AUDIO_DIR, EC.Const.VIDEO_DIR])).then(function () {\n                EC.Entries.allMediaDeletedFeedback(true);\n            });\n\n        }\n        else {\n            //in Chrome, just update database setting values to empty strings\n            // - just for debugging\n            EC.Update.emptyMediaValues(forms);\n        }\n    };\n\n    /**\n     * @method allEntriesDeletedFeedback\n     * @param {boolean} is_positive State if the entries are deleted\n     * successfully or not\n     */\n    module.allEntriesDeletedFeedback = function (is_positive) {\n\n    };\n\n    /**\n     * @method allMediaDeletedFeedback Display feedback to user after media\n     * deletion\n     * @param {boolean} is_positive State if the media are deleted\n     * successfully or not\n     */\n    module.allMediaDeletedFeedback = function (is_positive) {\n\n        //close panel\n        $('#project-options').panel('close');\n\n        EC.Notification.hideProgressDialog();\n        if (is_positive) {\n\n            //disable delete media button\n            $('div#forms div#project-options ul li#delete-media-files').addClass('ui-disabled');\n\n            EC.Notification.showToast(EC.Localise.getTranslation('all_media_deleted'), 'short');\n        }\n        else {\n            EC.Notification.showAlert(EC.Localise.getTranslation('error'), EC.Localise.getTranslation('generic_error'));\n        }\n    };\n\n    /**\n     * @method deleteAllSynced Calls model class to delete all the entries\n     * fully synced (data + media)\n     */\n    module.deleteAllSynced = function () {\n\n        var forms = JSON.parse(window.localStorage.forms);\n        var project_name = window.localStorage.project_name;\n        var project_id = parseInt(window.localStorage.project_id, 10);\n\n        //delete synced entries and media\n        $.when(EC.Delete.deleteAllSynced(project_id, project_name, forms)).then(function () {\n            _allSyncedDeletedFeedback(true);\n        }, function () {\n            _allSyncedDeletedFeedback(false);\n        });\n\n    };\n\n    /**\n     * @method allSyncedDeletedFeedback Display feedback to user after\n     * deleting synced entries\n     * @param {boolean} is_positive States id the synced entries are deleted\n     * successufully or not\n     */\n    var _allSyncedDeletedFeedback = function (is_positive) {\n\n        var forms_list = $('div#forms-list ul li');\n        var deleted_entries = JSON.parse(window.localStorage.deleted_entries);\n        var count;\n        var current_count_holder;\n        var current_form_list_item;\n\n        //close panel\n        $('#project-options').panel('close');\n\n        //update entries count on DOM to show the user the correct amount\n        // after deletion\n        if (is_positive) {\n            forms_list.each(function (i) {\n\n                var new_count;\n\n                current_form_list_item = $(this).find('a');\n                current_count_holder = current_form_list_item.find('span.ui-li-count');\n\n                new_count = parseInt(current_count_holder.text(), 10) - deleted_entries[i];\n\n                console.log('new_count' + new_count);\n\n                current_count_holder.text(new_count);\n\n                if (new_count === 0 && i > 0) {\n                    current_form_list_item.addClass('ui-disabled');\n                }\n\n            });\n            EC.Notification.showToast(EC.Localise.getTranslation('all_synced_deleted'), 'short');\n        }\n        else {\n            EC.Notification.showAlert(EC.Localise.getTranslation('error'), EC.Localise.getTranslation('generic_error'));\n        }\n    };\n\n    module.deleteEntry = function () {\n\n        var rows_to_delete = JSON.parse(window.localStorage.inputs_values);\n        var entry_key = window.localStorage.entry_key;\n        var form_id = window.localStorage.form_id;\n        var project_name = window.localStorage.project_name;\n\n        //get hash from data-hef attribute\n        window.localStorage.back_nav_url = $('div#entry-values div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab i').attr('data-href');\n\n        //remove cache entries to request list gain after entry deletion\n        window.localStorage.removeItem('cached_entries_list');\n\n        //delete all the rows for this entry\n        $.when(EC.Delete.deleteEntry(project_name, rows_to_delete, entry_key, form_id)).then(function (is_positive) {\n\n            if (is_positive) {\n                EC.Notification.showToast(EC.Localise.getTranslation('entry_deleted'), 'short');\n                EC.Routing.changePage(window.localStorage.back_nav_url);\n            }\n            else {\n                EC.Notification.showAlert(EC.Localise.getTranslation('error'), EC.Localise.getTranslation('generic'));\n            }\n        });\n\n    };\n\n    /*\n     * Delete a single branch entry and linked files\n     */\n    module.deleteBranchEntry = function () {\n\n        var rows_to_delete = JSON.parse(window.localStorage.branch_inputs_values);\n\n        //delete all the rows for this branch entry and linked files (if any)\n        $.when(EC.Delete.deleteBranchEntry(rows_to_delete)).then(function () {\n\n            EC.Notification.showToast(EC.Localise.getTranslation('branch_entry_deleted'), 'short');\n\n            window.localStorage.removeItem('branch_edit_mode');\n\n            EC.Routing.changePage('branch-entries-list.html');\n\n        }, function () {\n            EC.Notification.showAlert(EC.Localise.getTranslation('error'), EC.Localise.getTranslation('generic'));\n        });\n\n    };\n\n    module.addEntry = function () {\n\n        var form_id = parseInt(window.localStorage.form_id, 10);\n\n        EC.Notification.showProgressDialog();\n\n        $.when(EC.Select.getInputs(form_id)).then(function (inputs, has_jumps, has_location) {\n\n            //set inputs in memory\n            EC.Inputs.setInputs(inputs, has_jumps, has_location);\n\n            //render first input on the list or the selected position (-1) if\n            // we are editing\n            EC.Inputs.prepareFirstInput((window.localStorage.edit_position === undefined) ? inputs[0] : inputs[window.localStorage.edit_position - 1]);\n        });\n    };\n\n    module.exportAllEntriesToCSV = function () {\n\n        var project_id = window.localStorage.project_id;\n        var forms = JSON.parse(window.localStorage.forms);\n\n        EC.Notification.showProgressDialog();\n        $.when(EC.Export.saveProjectDataToCSV(project_id, forms)).then(function (response) {\n\n            var filename = response.filename;\n            var folder = response.folder;\n\n            //close panel\n            $('#project-options').panel('close');\n            EC.Notification.hideProgressDialog();\n            EC.Notification.showAlert(EC.Localise.getTranslation('success'), filename + ' saved in folder: ' + folder);\n        });\n    };\n\n    return module;\n\n}(EC.Entries));\n\n","/*global $, jQuery*/\n/**\n * @module EC\n * @submodule Entries\n */\n\nvar EC = EC || {};\nEC.Entries = EC.Entries || {};\nEC.Entries = (function (module) {\n    'use strict';\n\n    /**\n     *  Bind Action Bar buttons tap events\n     */\n    var _bindBackBtn = function () {\n\n        var back_btn = $('div[data-role=\"header\"] div[data-href=\"back-btn\"]');\n        var back_btn_label = $('div[data-role=\"header\"] div[data-href=\"back-btn\"] span.form-name');\n        var form_name = window.localStorage.form_name;\n\n        back_btn_label.text('Back to ' + form_name.trunc(EC.Const.FORM_NAME_MAX_LENGTH));\n\n        back_btn.off().one('vclick', function (e) {\n            window.localStorage.back_from_branch = 1;\n            EC.BranchInputs.backToHierarchyForm();\n        });\n\n    };\n\n    var _buildList = function (the_branch_form_name, the_entries) {\n\n        var branch_form_name = the_branch_form_name;\n        var entries = the_entries;\n        var i;\n        var iLength = entries.length;\n        var HTML = '';\n\n        for (i = 0; i < iLength; i++) {\n\n            //if no title set, use value of primary key as title\n            entries[i].full_title = (entries[i].full_title === '') ? entries[i].entry_key : entries[i].full_title;\n\n            HTML += '<li data-icon=\"false\">';\n            HTML += '<a href=\"branch-entry-values.html?branch_form_name=' + branch_form_name + '&entry_key=' + entries[i].entry_key + '\">';\n            HTML += entries[i].full_title;\n            HTML += '</a>';\n            HTML += '</li>';\n        }//for\n\n        return HTML;\n\n    };\n\n    module.renderBranchEntriesList = function (the_entries) {\n\n        var self = this;\n        var entries = the_entries;\n        var dom_list = $('div#branch-entries-list ul');\n        var branch_form = JSON.parse(window.localStorage.branch_form);\n        var load_more_btn = $('div#branch-entries div#branch-entries-list div.more-items-btn');\n        var load_more_spinner = $('div#branch-entries div#branch-entries-list div.more-items-btn-spinner');\n        var offset = parseInt(window.localStorage.QUERY_ENTRIES_OFFSET, 10);\n        var limit = parseInt(window.localStorage.QUERY_LIMIT, 10);\n        var current_entries_total;\n        var HTML;\n\n        //reset entries offset\n        window.localStorage.QUERY_ENTRIES_OFFSET = 0;\n\n        //bind action bar buttons for this page\n        _bindBackBtn();\n\n        //show branch form name in the top bar\n        $('div.branch-form-name div.ui-block-a span.ui-btn-active span.ui-btn-inner').text(branch_form.name);\n\n        //show 'Show more' button if we have more entries to display\n        if (current_entries_total > (offset + limit)) {\n            load_more_btn.removeClass('hidden');\n        } else {\n            load_more_btn.addClass('hidden');\n        }\n\n        //bind 'show more button'\n        load_more_btn.off().on('vclick', function (e) {\n\n            //hide button and show loader\n            $(this).addClass('hidden');\n            load_more_spinner.removeClass('hidden');\n\n            //increase offset\n            offset = parseInt(window.localStorage.QUERY_ENTRIES_OFFSET, 10);\n            offset += parseInt(window.localStorage.QUERY_LIMIT, 10);\n            window.localStorage.QUERY_ENTRIES_OFFSET = offset;\n\n            //get more entries\n            self.getMoreEntries(offset);\n\n        });\n\n        //empty current list\n        dom_list.empty();\n\n        HTML = _buildList(branch_form.name, entries);\n\n        dom_list.append(HTML);\n        dom_list.listview('refresh');\n\n        //hide spinning loader\n        EC.Notification.hideProgressDialog();\n\n    };\n\n    module.getMoreBranchEntries = function (the_offset) {\n\n        var load_more_parameters = JSON.parse(window.localStorage.load_more_parameters);\n        var form_id = load_more_parameters.form_id;\n        var parent_path = load_more_parameters.parent_path;\n        var offset = the_offset;\n\n        EC.Select.getEntries(form_id, parent_path, offset);\n    };\n\n    module.appendMoreBranchEntries = function (the_entries) {\n\n        var dom_list = $('div#entries-list ul');\n        var entries = the_entries;\n        var form_id = parseInt(window.localStorage.form_id, 10);\n        var HTML;\n        var offset = parseInt(window.localStorage.QUERY_ENTRIES_OFFSET, 10);\n        var limit = parseInt(window.localStorage.QUERY_LIMIT, 10);\n        var totals;\n        var current_entries_total;\n\n        //get total of entries\n        totals = JSON.parse(window.localStorage.entries_totals);\n        current_entries_total = totals[totals.length - 1].entries_total;\n\n        HTML = _buildList(form_id, entries);\n\n        dom_list.append(HTML);\n        dom_list.listview('refresh');\n        dom_list.trigger('updatelayout');\n\n        //show button and hide loader\n        $('div#entries div#entries-list div.more-items-btn-spinner').addClass('hidden');\n\n        if (current_entries_total > (offset + limit)) {\n            $('div#entries div#entries-list div.more-items-btn').removeClass('hidden');\n        }\n    };\n\n    return module;\n\n}(EC.Entries));\n","/*global $, jQuery, cordova, device*/\n\n/**\n * @module EC\n * @submodule Entries\n */\nvar EC = EC || {};\n\nEC.Entries = (function (module) {\n    'use strict';\n\n    var _bindActionBarBtns = function () {\n\n        var back_btn = $('div#branch-entry-values div[data-role=\"header\"] div[data-href=\"back-btn\"]');\n        var back_btn_label = $('div#branch-entry-values div[data-role=\"header\"] div[data-href=\"back-btn\"] span.form-name');\n        var ctx_menu_btn = $('div#branch-entry-values div[data-role=\"controlgroup\"] i[data-href=\"branch-entry-values-options\"]');\n        var delete_branch_entry_btn = $('div#branch-entry-values div#branch-entry-values-options ul li#delete-branch-entry');\n        var entry_value_edit_btn = $('div#branch-entry-values div#branch-entry-values-list ul');\n        var form_name = window.localStorage.form_name;\n        var branch_form = JSON.parse(window.localStorage.branch_form);\n        var project_id = window.localStorage.project_id;\n        var unsync_entry_btn = $('div#entry-values div#entry-values-options ul li#unsync-entry');\n\n        back_btn_label.text('Back to ' + branch_form.name.trunc(EC.Const.FORM_NAME_MAX_LENGTH) + ' entries');\n\n        back_btn.off().one('vclick', function (e) {\n\n            //go back to branch entries list\n            window.localStorage.removeItem('branch_edit_mode');\n            EC.Routing.changePage(EC.Const.BRANCH_ENTRIES_LIST_VIEW);\n        });\n\n        entry_value_edit_btn.off().on('vclick', 'i', function (e) {\n\n            var hash = $(e.target).parent().attr('data-href');\n\n            EC.Notification.showProgressDialog();\n\n            if (hash) {\n\n                //set edit position\n                window.localStorage.branch_edit_position = parseInt(hash.replace('?position=', ''), 10);\n\n                //get list of inputs for the branch form and render the first\n                // one on screen\n                EC.BranchInputs.getList(branch_form.name, project_id);\n\n            }\n\n            e.preventDefault();\n\n        });\n\n        delete_branch_entry_btn.off().on('vclick', function (e) {\n            EC.Notification.askConfirm(EC.Localise.getTranslation('delete_branch_entry'), EC.Localise.getTranslation('delete_entry_confirm'), 'EC.Entries.deleteBranchEntry');\n        });\n\n        ctx_menu_btn.off().on('vclick', function (e) {\n\n            var panel = $('div#branch-entry-values-options');\n\n            panel.panel('open');\n\n\n            //Closing panel globally: there is bug (panel does not close tapping off the panel) using the built in jqm methods, so this hack is needed\n            //docs: http://demos.jquerymobile.com/1.3.2/widgets/panels/\n            $('.ui-panel-dismiss-open').off().on('vclick', function () {\n                panel.panel('close');\n            });\n        });\n    };\n\n    /**\n     *\n     * @param {String} the_values: values array\n     */\n    module.renderBranchEntryValues = function (the_values) {\n\n        //build HTML\n        var HTML = '';\n        var i;\n        var iLength;\n        var values = the_values;\n        var branch_inputs_values = [];\n        var branch_inputs_trail = [];\n        var dom_list = $('div#branch-entry-values-list ul');\n        var form_id = parseInt(window.localStorage.form_id, 10);\n        var branch_form = JSON.parse(window.localStorage.branch_form);\n        var allow_download_edits = window.localStorage.allow_download_edits;\n        var project_name = window.localStorage.project_name;\n        var data_synced = 0;\n        var formatted_location;\n        var current_entries_total;\n        var totals;\n        var is_genkey_hidden = EC.Utils.isBranchFormGenKeyHidden();\n        var is_primary_key;\n        var branch_inputs = EC.BranchInputs.getInputs();\n        var labels;\n        var dropdown_label;\n        var radio_label;\n\n        //bind buttons\n        _bindActionBarBtns();\n\n        //empty current list\n        dom_list.empty();\n\n        //show branch form name in the top bar\n        $('div.branch-form-name div.ui-block-a span.ui-btn-active span.ui-btn-inner').text(branch_form.name);\n\n        for (i = 0, iLength = values.length; i < iLength; i++) {\n\n            data_synced += values[i].is_data_synced;\n\n            //check if the current value is a primary key (it is only when\n            // entry_key === value)\n            is_primary_key = (values[i].value === values[i].entry_key) ? 1 : 0;\n\n            /*\n             * Build input_values array. by default a value is a single value\n             * (string)\n             * Media value is an object which contains the path to the stored\n             * file and the path to the cached file (if any)\n             * Checkbox values are saved as csv, but they are converted back\n             * to array\n             */\n            switch (values[i].type) {\n\n                //Checkbox values are saved as csv values: they are converted\n                // back to array\n                case EC.Const.CHECKBOX:\n                    branch_inputs_values.push({\n                        _id: values[i]._id,\n                        type: values[i].type,\n                        value: values[i].value.split(','),\n                        position: values[i].position,\n                        is_primary_key: is_primary_key\n                    });\n                    break;\n\n                //Media files values need to be in the form {cached: '',\n                // stored: <the_filename>}\n                case EC.Const.PHOTO :\n                    branch_inputs_values.push({\n                        _id: values[i]._id,\n                        type: values[i].type,\n                        value: {\n                            cached: '',\n                            stored: values[i].value\n                        },\n                        position: values[i].position,\n                        is_primary_key: is_primary_key\n                    });\n                    break;\n\n                //Media files values need to be in the form {cached: '',\n                // stored: <the_filename>}\n                case EC.Const.AUDIO :\n                    branch_inputs_values.push({\n                        _id: values[i]._id,\n                        type: values[i].type,\n                        value: {\n                            cached: '',\n                            stored: values[i].value\n                        },\n                        position: values[i].position,\n                        is_primary_key: is_primary_key\n                    });\n                    break;\n\n                //Media files values need to be in the form {cached: '',\n                // stored: <the_filename>}\n                case EC.Const.VIDEO :\n                    branch_inputs_values.push({\n                        _id: values[i]._id,\n                        type: values[i].type,\n                        value: {\n                            cached: '',\n                            stored: values[i].value\n                        },\n                        position: values[i].position,\n                        is_primary_key: is_primary_key\n                    });\n                    break;\n\n                default:\n                    branch_inputs_values.push({\n                        _id: values[i]._id,\n                        type: values[i].type,\n                        value: values[i].value,\n                        position: values[i].position,\n                        is_primary_key: is_primary_key\n                    });\n            }//switch\n\n            //build input_trail array to be used for navigation between\n            // inputs (skip _skipp3d_ values, to retain jump sequence)\n            if (values[i].value !== EC.Const.SKIPPED) {\n\n                branch_inputs_trail.push({\n                    position: values[i].position,\n                    label: values[i].label\n                });\n\n                //build list of values (_skipp3d_ values are skipped)\n                HTML += '<li data-role=\"list-divider\">';\n                HTML += values[i].label;\n                HTML += '</li>';\n                HTML += '<li class=\"entry-value-btn-wrapper\">';\n\n                //format media and location values for displaying purposes\n                switch (values[i].type) {\n\n                    //show labels for checkbox choices, as tey are saved as\n                    // values\n                    case EC.Const.CHECKBOX:\n\n                        labels = EC.Utils.mapLabelToValue(values[i], branch_inputs);\n                        HTML += '<span class=\"h-entry-value-label\">' + labels.join(', ') + '</span>';\n\n                        break;\n\n                    case EC.Const.DROPDOWN:\n\n                        dropdown_label = EC.Utils.mapLabelToValue(values[i], branch_inputs);\n                        HTML += '<span class=\"h-entry-value-label\">' + dropdown_label + '</span>';\n\n                        break;\n\n                    case EC.Const.RADIO:\n\n                        radio_label = EC.Utils.mapLabelToValue(values[i], branch_inputs);\n                        HTML += '<span class=\"h-entry-value-label\">' + radio_label + '</span>';\n\n                        break;\n\n                    case EC.Const.LOCATION:\n\n                        var location = values[i].value;\n                        location = location.split(',');\n\n                        var j;\n                        var jLength = location.length;\n\n                        for (j = 0; j < jLength; j++) {\n\n                            HTML += '<span class=\"h-entry-value-label\">' + location[j] + '<span>';\n\n                        }\n                        break;\n\n                    case EC.Const.PHOTO:\n\n                        if (values[i].value !== '') {\n                            HTML += '<span class=\"h-entry-value-label\">' + EC.Localise.getTranslation(EC.Const.PHOTO_AVAILABLE_LABEL) + '</span>';\n                        } else {\n                            HTML += '<span class=\"h-entry-value-label\">' + EC.Localise.getTranslation(EC.Const.PHOTO_NOT_AVAILABLE_LABEL) + '</span>';\n                        }\n\n                        break;\n\n                    case EC.Const.AUDIO:\n\n                        if (values[i].value !== '') {\n                            HTML += '<span class=\"h-entry-value-label\">' + EC.Localise.getTranslation(EC.Const.AUDIO_AVAILABLE_LABEL) + '</span>';\n                        } else {\n                            HTML += '<span class=\"h-entry-value-label\">' + EC.Localise.getTranslation(EC.Const.AUDIO_NOT_AVAILABLE_LABEL) + '</span>';\n                        }\n\n                        break;\n\n                    case EC.Const.VIDEO:\n\n                        if (values[i].value !== '') {\n                            HTML += '<span class=\"h-entry-value-label\">' + EC.Localise.getTranslation(EC.Const.VIDEO_AVAILABLE_LABEL) + '</span>';\n                        } else {\n                            HTML += '<span class=\"h-entry-value-label\">' + EC.Localise.getTranslation(EC.Const.VIDEO_NOT_AVAILABLE_LABEL) + '</span>';\n                        }\n\n                        break;\n\n                    default:\n                        HTML += '<span class=\"h-entry-value-label\">' + values[i].value + '</span>';\n\n                }\n\n                HTML += '<div class=\"entry-value-embedded-btn\" data-href=\"?position=' + values[i].position + '\">';\n\n                //deal with remote entries and disable edit button if no\n                // editable\n                if (values[i].is_remote === 1) {\n\n                    if (allow_download_edits === '1') {\n                        HTML += '<i class=\"fa fa-edit  fa-fw fa-ep-entry-value-embedded-btn\"></i>';\n                    } else {\n                        HTML += '<i class=\"fa fa-edit  fa-fw fa-ep-entry-value-embedded-btn ui-disabled\"></i>';\n                    }\n\n                } else {\n                    HTML += '<i class=\"fa fa-edit  fa-fw fa-ep-entry-value-embedded-btn\"></i>';\n                }\n\n                HTML += '</div>';\n                HTML += '</li>';\n\n            }//if NOT skipped\n\n        }//for\n\n        //add values to localStorage 'branch_inputs_values', to be used to\n        // pre-populate fields when editing\n        window.localStorage.branch_inputs_values = JSON.stringify(branch_inputs_values);\n\n        //add values to localStorage 'branch_inputs_trail', to navigate back\n        // and forth input fields when editing\n        window.localStorage.branch_inputs_trail = JSON.stringify(branch_inputs_trail);\n\n        dom_list.append(HTML);\n        dom_list.listview('refresh');\n\n        //Set 'editing mode' flag for branches\n        window.localStorage.branch_edit_mode = 1;\n\n        EC.Notification.hideProgressDialog();\n\n    };\n\n    return module;\n\n}(EC.Entries));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device*/\n/**\n * @module EC\n * @submodule Entries\n */\n\nvar EC = EC || {};\nEC.Entries = ( function (module) {\n    \"use strict\";\n\n    var wls;\n\n    /**\n     *  Bind Action Bar buttons tap events\n     */\n    var _bindActionBarBtns = function () {\n\n        var nav_drawer_btn = $(\"div#entries div[data-role='header'] div[data-href='entries-nav-btn']\");\n        var home_btn = $(\"div#entries div[data-role='header'] div[data-href='home']\");\n        var settings_btn = $('div#entries div[data-role=\"header\"] div#entries-nav-drawer ul li div[data-href=\"settings\"]');\n        var add_entry_btn = $(\"div#entries div[data-role='header'] i[data-href='add-entry']\");\n        var inactive_tab = $('div#entries div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab');\n\n        //bind left sidebar open/close\n        nav_drawer_btn.off().on('vclick', function (e) {\n\n            var panel = $(\"#entries-nav-drawer\");\n\n            panel.panel(\"open\");\n\n            home_btn.off().one('vclick', function (e) {\n                //reset offset, as when going back we make a new request for the first entries\n                wls.QUERY_ENTRIES_OFFSET = 0;\n\n                //trigger a pgae refresh when navigating back to project list\n                wls.back_nav_url = \"#refresh\";\n                EC.Routing.changePage(EC.Const.INDEX_VIEW);\n            });\n\n            // //bind add project button (action bar)\n            settings_btn.off().one('vclick', function (e) {\n                window.localStorage.reached_settings_view_from = $.mobile.activePage.attr(\"id\");\n                EC.Routing.changePage(EC.Const.SETTINGS_VIEW);\n            });\n\n            //Closing panel globally: there is bug (panel does not close tapping off the panel) using the built in jqm methods, so this hack is needed\n            //docs: http://demos.jquerymobile.com/1.3.2/widgets/panels/\n            $('.ui-panel-dismiss-open').off().on('vclick', function () {\n                panel.panel('close');\n            });\n\n        });\n\n        //open inputs\n        add_entry_btn.off().on('vclick', function (e) {\n            EC.Entries.addEntry();\n        });\n\n        inactive_tab.off().on('vclick', function (e) {\n\n            var project_id = wls.project_id;\n            var project_name = wls.project_name;\n\n            //get url from data-hef attribute\n            var page = $('div#entries div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab i').attr(\"data-href\");\n\n            EC.Routing.changePage(page);\n\n        });\n\n    };\n\n    module.renderCachedList = function () {\n\n        //build HTML\n        var HTML = \"\";\n        var back_href = \"\";\n        var back_children;\n        var i;\n        var iLength;\n        var dom_list = $('div#entries-list ul');\n        var empty_entries_list = $(\"div#entries div#entries-list div#empty-entries-list\");\n        var empty_entries_list_form_name = $(\"div#entries div#entries-list div#empty-entries-list p span.form-name\");\n        var page = $('#entries');\n        var header = $('div#entries div[data-role=\"header\"] div[data-href=\"entries-nav-btn\"] span.project-name');\n        var trail;\n        var inactive_label = \"\";\n        var dom_back_home_btn = $('div#entries a.back-home');\n        var action_bar_btn = $('div#entries div#entries-actionbar');\n        var active_tab = $('div#entries div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.active-tab span');\n        var inactive_tab = $('div#entries div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab');\n        var inactive_tab_hash = $('div#entries div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab i');\n        var inactive_tab_label = $('div#entries div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab span');\n        var form_id;\n        var form_name;\n        var form_tree;\n        var project_name;\n        var load_more_btn = $('div#entries div#entries-list div.more-items-btn');\n        var load_more_spinner = $('div#entries div#entries-list div.more-items-btn-spinner');\n        var self = this;\n        var offset;\n        var limit;\n        var current_entries_total;\n        var totals;\n\n        wls = window.localStorage;\n        form_id = parseInt(wls.form_id, 10);\n        form_name = wls.form_name;\n        form_tree = JSON.parse(wls.form_tree);\n        project_name = wls.project_name;\n        offset = parseInt(wls.QUERY_ENTRIES_OFFSET, 10);\n        limit = parseInt(wls.QUERY_LIMIT, 10);\n\n        //reset entries offset\n        //TODO: do not do if cached...\n        //wls.QUERY_ENTRIES_OFFSET = 0;\n\n        //request pagination when going back\n        totals = JSON.parse(wls.entries_totals);\n        current_entries_total = totals[totals.length - 1].entries_total;\n        //request pagination when going back\n        back_children = (totals.length > 1) ? totals[totals.length - 2].entries_total : 0;\n\n        //bind action bar buttons for this page\n        _bindActionBarBtns();\n\n        //show action bar buttons\n        action_bar_btn.show();\n\n        //show \"Show more\" button if we have more entries to display\n        if (current_entries_total > (offset + limit)) {\n            load_more_btn.removeClass('hidden');\n        } else {\n            load_more_btn.addClass('hidden');\n        }\n\n        //bind \"show more button\"\n        load_more_btn.off().on('vclick', function (e) {\n\n            /**\n             * Embedded spinning loader works only on iOS, do not know why\n             */\n\n            if (window.device.platform === EC.Const.IOS) {\n                //hide button and show loader\n                $(this).addClass('hidden');\n                load_more_spinner.removeClass('hidden');\n            }\n\n            if (window.device.platform === EC.Const.ANDROID) {\n                EC.Notification.showProgressDialog();\n            }\n\n            //increase offset\n            offset = parseInt(wls.QUERY_ENTRIES_OFFSET, 10);\n            offset += parseInt(wls.QUERY_LIMIT, 10);\n            wls.QUERY_ENTRIES_OFFSET = offset;\n\n            //get more entries\n            self.getMoreEntries(offset);\n\n        });\n\n        //empty current list\n        dom_list.empty();\n\n        //add project name to header\n        header.text(project_name.trunc(EC.Const.PROJECT_NAME_MAX_LENGTH));\n\n        //check if this form is at the top of the tree so the back button will go back to the form page (#forms)\n        if (form_tree.parent === 0) {\n\n            inactive_label = \"Forms\";\n\n            //build url\n            back_href = \"forms.html?project=\" + wls.project_id + \"&name=\" + wls.project_name;\n\n        } else {\n\n            //this is a nested form, so we need to go back to the previous form in the stack based on what entry was selected\n            trail = JSON.parse(wls.breadcrumbs);\n\n            //breadcrumb label will indicate form and last element of the breadcrumb trail\n            inactive_label = form_tree.pname + \": \" + trail[trail.length - 1];\n\n            //back button will have parent form and parent entry key (which is the next to last element in the breadcrumb trail)\n            //and number of children (parent entries when going back) for pagination\n            back_href += 'entries-list.html?form=' + form_tree.parent;\n            back_href += '&name=' + form_tree.pname;\n            back_href += '&entry_key=' + trail[trail.length - 2];\n            back_href += '&direction=' + EC.Const.BACKWARD;\n            back_href += '&children=' + back_children;\n        }\n\n        //update active tab name with the current active form\n        active_tab.text(form_name);\n\n        //update inactive tab\n        inactive_tab_label.text(inactive_label);\n        inactive_tab_hash.attr(\"data-href\", back_href);\n\n        dom_list.append(window.localStorage.cached_entries_list);\n\n        //add form name to localStorage\n        wls.form_name = form_name;\n        wls.form_id = form_id;\n\n        //remove navigation objects\n        wls.removeItem(\"inputs_values\");\n        wls.removeItem(\"inputs_trail\");\n        wls.removeItem(\"current_position\");\n        wls.removeItem(\"back_edit_nav_url\");\n\n        //reset \"editing mode\" flags\n        wls.removeItem(\"edit_mode\");\n        wls.removeItem(\"edit_position\");\n        wls.removeItem(\"edit_type\");\n        wls.removeItem(\"edit_id\");\n\n        EC.Notification.hideProgressDialog();\n    };\n\n    return module;\n\n}(EC.Entries));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/**\n * @module EC\n * @submodule Entries\n */\nvar EC = EC || {};\nEC.Entries = EC.Entries || {};\nEC.Entries = ( function (module) {\n    \"use strict\";\n\n    /**\n     * @method renderChildEntriesList Renders the list of entries for a child form grouped by the immediate parent form primary key\n     * It is triggered when the user selects a form other than the top one (the main parent)\n     *\n     * @param {Array} the_child_entries Array that contains the values of the primry key and all the children per each child form\n     * {parent: the value of the immediate parent primary key\n\t\t *  children (Array): {entry_key: the value of the primary key for this child,\n\t\t * full_title: all the title values in csv,\n\t\t * nested_children_count: the total of children belonging to this child entry, to be shown in the bubble count\n\t\t * }\n\t\t */\n\n    var wls;\n\n    var _bindActionBarBtns = function () {\n\n        var nav_drawer_btn = $(\"div#entries div[data-role='header'] div[data-href='entries-nav-btn']\");\n        var home_btn = $(\"div#entries div[data-role='header'] div[data-href='home']\");\n        var settings_btn = $('div#entries div[data-role=\"header\"] div#entries-nav-drawer ul li div[data-href=\"settings\"]');\n        var add_entry_btn = $(\"div#entries div[data-role='header'] i[data-href='add-entry']\");\n        var inactive_tab = $('div#entries div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab');\n\n        //bind left sidebar open/close\n        nav_drawer_btn.off().on('vclick', function (e) {\n\n            var panel = $(\"#entries-nav-drawer\");\n\n            panel.panel(\"open\");\n\n            home_btn.off().one('vclick', function (e) {\n                //reset offset, as when going back we make a new request for the first entries\n                wls.QUERY_ENTRIES_OFFSET = 0;\n\n                //trigger a pgae refresh when navigating back to project list\n                wls.back_nav_url = \"#refresh\";\n                EC.Routing.changePage(EC.Const.INDEX_VIEW);\n            });\n\n            // //bind add project button (action bar)\n            settings_btn.off().one('vclick', function (e) {\n                wls.reached_settings_view_from = $.mobile.activePage.attr(\"id\");\n                EC.Routing.changePage(EC.Const.SETTINGS_VIEW);\n            });\n\n            //Closing panel globally: there is bug (panel does not close tapping off the panel) using the built in jqm methods, so this hack is needed\n            //docs: http://demos.jquerymobile.com/1.3.2/widgets/panels/\n            $('.ui-panel-dismiss-open').off().on('vclick', function () {\n                panel.panel('close');\n            });\n\n        });\n\n        inactive_tab.off().on('vclick', function (e) {\n            //get url from data-hef attribute\n            var back_url = $('div#entries div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab i').attr(\"data-href\");\n            EC.Routing.changePage(back_url);\n        });\n\n    };\n\n    var _buildChildEntriesList = function (the_form_id, the_form_tree, the_entries) {\n\n        var form_id = the_form_id;\n        var form_tree = the_form_tree;\n        var entries = the_entries;\n        var full_parent = [];\n        var i;\n        var j;\n        var iLength;\n        var jLength;\n        var HTML = \"\";\n\n        //list child entries grouped by immediate parent\n        for (i = 0, iLength = entries.length; i < iLength; i++) {\n\n            HTML += '<div class=\"parent-entry-divider\">';\n            HTML += '<span>';\n\n            //show only the immediate parent parsing the full parent\n            full_parent = entries[i].parent.split(EC.Const.ENTRY_ROOT_PATH_SEPARATOR);\n            HTML += full_parent[full_parent.length - 1];\n\n            HTML += '</span>';\n            HTML += '<a id=\"' + entries[i].parent + '\" class=\"context-add-child-entry\" href=\"#\"  data-ajax=\"false\">';\n            HTML += '<i class=\"fa fa-plus-square-o fa-ep fa-ep-in-list\" data-href=\"add-project\"></i>';\n            HTML += '</a>';\n            HTML += '</div>';\n\n            //show all children\n            jLength = entries[i].children.length;\n\n            for (j = 0; j < jLength; j++) {\n\n                //each element will have the entry key in 'data-entry-key' and the parent key as a class to load the primary keys in memory when adding a new entry from here\n                HTML += '<li data-entry-key=\"' + entries[i].children[j].entry_key + '\" class=\"' + entries[i].parent + '\" data-icon=\"false\">';\n                HTML += '<a href=\"entry-values.html?form=' + form_id + '&entry_key=' + entries[i].children[j].entry_key + '&direction=' + EC.Const.FORWARD + '&parent=' + entries[i].parent + '\">';\n                HTML += entries[i].children[j].full_title;\n                HTML += '</a>';\n\n                // here we need to display the total of direct childrens for this entry (if not the last form)\n                if (form_tree.child !== 0) {\n\n                    HTML += '<span class=\"ui-li-count\">';\n                    HTML += entries[i].children[j].nested_children_count;\n                    HTML += '</span>';\n                }\n                HTML += '</li>';\n\n            }\n\n        }//for\n\n        //cache the last rendered parent (for pagination purposes) We will use this value when the user taps on \"Show more\"\n        window.localStorage.last_parent = entries[entries.length - 1].parent;\n\n        return HTML;\n\n    };\n\n    module.renderChildEntriesList = function (the_child_entries) {\n\n        //build HTML\n        var HTML = \"\";\n        var back_href;\n        var i;\n        var iLength;\n        var j;\n        var jLength;\n        var entries = the_child_entries;\n        var dom_list = $('div#entries-list ul');\n        var dom_back_home_btn = $('div#entries a.back-home');\n        var action_bar_btn = $('div#entries div#entries-actionbar');\n        var active_tab = $('div#entries div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.active-tab span');\n        var inactive_tab = $('div#entries div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab');\n        var inactive_tab_hash = $('div#entries div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab i');\n        var inactive_tab_label = $('div#entries div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab span');\n        var page = $('#entries');\n        var header = $('div#entries div[data-role=\"header\"] div[data-href=\"back-btn\"] span.project-name');\n        var trail;\n        var active_label = \"\";\n        var inactive_label = \"\";\n        var form_id = parseInt(window.localStorage.form_id, 10);\n        var form_name = window.localStorage.form_name;\n        var form_tree = JSON.parse(window.localStorage.form_tree);\n        var project_id = window.localStorage.project_id;\n        var project_name = window.localStorage.project_name;\n        var load_more_btn = $('div#entries div#entries-list div.more-items-btn');\n        var load_more_spinner = $('div#entries div#entries-list div.more-items-btn-spinner');\n        var children_offset = parseInt(window.localStorage.QUERY_CHILD_ENTRIES_OFFSET, 10);\n        var parent_offset = parseInt(window.localStorage.QUERY_PARENT_ENTRIES_OFFSET, 10);\n        var entries_total;\n        var self = this;\n\n        wls = window.localStorage;\n\n        //reset breadcrumbs, as if the user adds an entry from a child list, we will grab the full parent path from the dom, as we are not navigating the forms manually\n        wls.breadcrumbs = JSON.stringify([\"\"]);\n\n        //bind action bar buttons for this page\n        _bindActionBarBtns(form_id, form_tree, entries);\n\n        //empty current list\n        dom_list.empty();\n\n        //hide action bar button (top right, add and menu)\n        action_bar_btn.hide();\n\n        if (entries.length > 0) {\n            HTML = _buildChildEntriesList(form_id, form_tree, entries.slice(0));\n\n        } else {\n\n            /*no more child entries (when user deleted all the entries one by one from child entries list)\n             so redirect to forms list*/\n            EC.Forms.getList(\"forms.html?project=\" + project_id + \"&name=\" + project_name);\n\n        }\n\n        //add project name to header\n        header.text(project_name.trunc(EC.Const.PROJECT_NAME_MAX_LENGTH));\n\n        //check if this form is at the top of the tree so the back button will go back to the form page (#forms)\n        inactive_label = \"Forms\";\n\n        //build back button hash\n        back_href = \"forms.html?project=\" + wls.project_id + \"&name=\" + wls.project_name;\n        wls.back_nav_url = back_href;\n\n        //update active tab name with the current active form\n        active_label = form_name;\n\n        //update active tab name with the current active form\n        active_tab.text(form_name);\n\n        //update inactive tab\n        inactive_tab_label.text(inactive_label);\n        inactive_tab_hash.attr(\"data-href\", back_href);\n\n        //append list and change page\n        dom_list.append(HTML);\n        dom_list.listview('refresh');\n\n        //attach delegate event to all links to add a child entry for the selected parent\n        dom_list.off().on('vclick', \"a.context-add-child-entry\", function () {\n\n            //add parent of selected itme in breadcrumbs\n            var breadcrumbs_trail = JSON.parse(wls.getItem(\"breadcrumbs\")) || [];\n            breadcrumbs_trail.push($(this).attr(\"id\"));\n            wls.breadcrumbs = JSON.stringify(breadcrumbs_trail);\n\n            EC.Entries.addEntry();\n\n        });\n\n        //show \"Show more\" button if we have more entries to display\n        entries_total = EC.Utils.getFormByID(form_id).entries;\n        if (entries_total > (children_offset + wls.QUERY_LIMIT)) {\n            load_more_btn.removeClass('hidden');\n        } else {\n            load_more_btn.addClass('hidden');\n        }\n\n        //bind \"show more button\"\n        load_more_btn.off().on('vclick', function (e) {\n\n            //hide button and show loader\n            $(this).addClass('hidden');\n            load_more_spinner.removeClass('hidden');\n\n            //increase offset\n            children_offset = parseInt(wls.QUERY_CHILD_ENTRIES_OFFSET, 10);\n            children_offset += parseInt(wls.QUERY_LIMIT, 10);\n            wls.QUERY_CHILD_ENTRIES_OFFSET = children_offset;\n\n            //get more entries\n            self.getMoreChildEntries(form_id, children_offset);\n\n        });\n\n        //set handler for context add button (in a child entries list)\n        $('div#entries a.context-add-btn').off().on('vclick', function (e) {\n\n            var parent_key = $(this).attr('id');\n            var primary_keys = [];\n            var breadcrumb_trail = [];\n\n            //get all <li> but exclude list dividers\n            var selected_list = $(this).parent().parent().find(\"li:not('.custom-divider')\");\n\n            //manually add parent key in breadcrumb trail as we are adding an entry from a child entries list\n            breadcrumb_trail = parent_key.split(EC.Const.ENTRY_ROOT_PATH_SEPARATOR);\n            wls.breadcrumbs = JSON.stringify(breadcrumb_trail);\n\n            //collect all primary key from data-entry-key attribute for selected list\n            selected_list.each(function (i) {\n\n                if ($(this).hasClass(parent_key)) {\n\n                    console.log($(this).attr('data-entry-key'));\n                    primary_keys.push($(this).attr('data-entry-key'));\n\n                }\n            });\n\n            //store primary keys (for validate against duplication)\n            wls.primary_keys = JSON.stringify(primary_keys);\n\n            navigator.notification.activityStart(\"\", \"Loading...\");\n\n        });\n\n        //add form name to localStorage\n        wls.form_name = form_name;\n        wls.form_id = form_id;\n\n        //reset \"editing mode\" flags\n        wls.removeItem(\"edit_mode\");\n        wls.removeItem(\"edit_position\");\n        wls.removeItem(\"edit_type\");\n        wls.removeItem(\"edit_id\");\n\n        //reset inputs values and trail\n        wls.removeItem(\"inputs_values\");\n        wls.removeItem(\"inputs_trail\");\n\n        //reset child full parent path\n        wls.removeItem(\"child_full_parent_path\");\n\n        //hide spinning loader\n        EC.Notification.hideProgressDialog();\n\n    };\n\n    module.getMoreChildEntries = function (the_form_id, the_children_offset) {\n\n        var form_id = the_form_id;\n        var children_offset = the_children_offset;\n\n        //EC.Select.getChildEntries(form_id, parent_offset, children_offset);\n        EC.Select.getMoreChildEntries(form_id, children_offset);\n    };\n\n    module.appendMoreChildEntries = function (the_entries) {\n\n        var entries = the_entries;\n        var i;\n        var j;\n        var iLength = entries.length;\n        var jLength;\n        var dom_list = $('div#entries-list ul');\n        var form_id = window.localStorage.form_id;\n        var form_tree = JSON.parse(window.localStorage.form_tree);\n        var load_more_btn = $('div#entries-list .more-items-btn');\n        var HTML = \"\";\n        var children_offset = parseInt(window.localStorage.QUERY_CHILD_ENTRIES_OFFSET, 10);\n        var entries_total = EC.Utils.getFormByID(form_id).entries;\n        var query_limit = parseInt(window.localStorage.QUERY_LIMIT, 10);\n\n        for (i = 0, iLength = entries.length; i < iLength; i++) {\n\n            //Check if we still have entries to append to the current parent\n            if (entries[i].parent === window.localStorage.last_parent) {\n\n                //show all children\n                jLength = entries[i].children.length;\n                for (j = 0; j < jLength; j++) {\n\n                    //each element will have the entry key in 'data-entry-key' and the parent key as a class to load the primary keys in memory when adding a new entry from here\n                    HTML += '<li data-entry-key=\"' + entries[i].children[j].entry_key + '\" class=\"' + entries[i].parent + '\" data-icon=\"false\">';\n                    HTML += '<a href=\"#values?form=' + form_id + '&entry_key=' + entries[i].children[j].entry_key + '&direction=' + EC.Const.FORWARD + '&parent=' + entries[i].parent + '\">';\n                    HTML += entries[i].children[j].full_title;\n                    HTML += '</a>';\n\n                    // here we need to display the total of direct childrens for this entry (if not the last form)\n                    if (form_tree.child !== 0) {\n\n                        HTML += '<span class=\"ui-li-count\">';\n                        HTML += entries[i].children[j].nested_children_count;\n                        HTML += '</span>';\n                    }\n                    HTML += '</li>';\n\n                }\n\n            }\n\n            //attach new parent and its entries\n            else {\n\n                //show parent key value as divider and context button to add an entry\n                HTML += '<li data-role=\"list-divider\">';\n                HTML += entries[i].parent;\n                HTML += '<a id=\"' + entries[i].parent + '\" class=\"context-add-btn\" href=\"views/inputs.html\"  data-ajax=\"false\">';\n                HTML += '<i class=\"fa fa-plus-square-o fa-ep fa-fw fa-ep-in-list\" data-href=\"add-project\"></i>';\n                HTML += '</a>';\n                HTML += '</li>';\n\n                //show all children\n                jLength = entries[i].children.length;\n\n                for (j = 0; j < jLength; j++) {\n\n                    //each element will have the entry key in 'data-entry-key' and the parent key as a class to load the primary keys in memory when adding a new entry from here\n                    HTML += '<li data-entry-key=\"' + entries[i].children[j].entry_key + '\" class=\"' + entries[i].parent + '\" data-icon=\"false\">';\n                    HTML += '<a href=\"#values?form=' + form_id + '&entry_key=' + entries[i].children[j].entry_key + '&direction=' + EC.Const.FORWARD + '&parent=' + entries[i].parent + '\">';\n                    HTML += entries[i].children[j].full_title;\n                    HTML += '</a>';\n\n                    // here we need to display the total of direct childrens for this entry (if not the last form)\n                    if (form_tree.child !== 0) {\n\n                        HTML += '<span class=\"ui-li-count\">';\n                        HTML += entries[i].children[j].nested_children_count;\n                        HTML += '</span>';\n                    }\n                    HTML += '</li>';\n\n                }\n\n            }\n\n        }//for\n\n        //keep track of last parent which entries are listed on screen (it will be the first parent to search entries for when tapping \"Show More\")\n        window.localStorage.last_parent = entries[entries.length - 1].parent;\n\n        //append list\n        dom_list.append(HTML);\n        dom_list.listview(\"refresh\");\n        dom_list.trigger(\"updatelayout\");\n\n        //show button and hide loader (if there are more entries to show)\n        $('div#entries div#entries-list div.more-items-btn-spinner').addClass('hidden');\n        if (entries_total > (children_offset + query_limit)) {\n            $('div#entries div#entries-list div.more-items-btn').removeClass('hidden');\n        }\n\n    };\n\n    return module;\n\n}(EC.Entries));\n","/*global $, jQuery, cordova, device*/\n/**\n * @module EC\n * @submodule Entries\n */\nvar EC = EC || {};\nEC.Entries = EC.Entries || {};\nEC.Entries = (function (module) {\n    'use strict';\n\n    /**\n     * @method renderEntryValues Render a list of all the values for a single\n     * entry\n     * @param {the_values} array of values for a single entry (basically a\n     * form filled in)\n     * { _id: the row id\n         *  created_on: timestamp when entry was saved forst time\n         *  entry_key: value of primary key\n         *  form_id: id of the form\n         *  input_id: id of the input\n         *  is_data_synced: if the value is data synced\n         *  is_media_synced: if the value is media synced\n         *  is_title: if this vaue is part of the title\n         *  label: label for the field\n         *  parent: value of the parent primary key\n         *  position: the position of this field in the form fields sequence\n         *  ref: the field ref\n         *  type: the input type\n         *  value: the input value}\n     */\n\n    var unsync_entry_btn;\n    var wls;\n    var _bindActionBarBtns = function () {\n\n        var nav_drawer_btn = $('div#entry-values div[data-role=\"header\"] div[data-href=\"entry-values-nav-btn\"]');\n        var home_btn = $('div#entry-values div[data-role=\"header\"] div[data-href=\"home\"]');\n        var settings_btn = $('div#entry-values div[data-role=\"header\"] div#entry-values-nav-drawer ul li div[data-href=\"settings\"]');\n        var ctx_menu_btn = $('div#entry-values div[data-role=\"header\"] div.ui-btn-right[data-href=\"entry-values-options\"]');\n        var delete_entry_btn = $('div#entry-values div.entry-values-options ul li#delete-entry');\n        var inactive_tab = $('div#entry-values div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab');\n        var entry_value_btn = $('div#entry-values div#entry-values-list ul');\n        var input_page_href = window.localStorage.input_page_href;\n\n        //get hold of unsync button\n        unsync_entry_btn = $('div#entry-values div.entry-values-options ul li#unsync-entry');\n\n        //bind left sidebar open/close\n        nav_drawer_btn.off().on('vclick', function (e) {\n\n            var panel = $('#entry-values-nav-drawer');\n            panel.panel('open');\n\n            home_btn.off().one('vclick', function (e) {\n                //trigger a pgae refresh when navigating back to project list\n                wls.back_nav_url = '#refresh';\n                EC.Routing.changePage(EC.Const.INDEX_VIEW);\n            });\n\n            //bind add project button (action bar)\n            settings_btn.off().one('vclick', function (e) {\n                window.localStorage.reached_settings_view_from = $.mobile.activePage.attr('id');\n                EC.Routing.changePage(EC.Const.SETTINGS_VIEW);\n            });\n\n            //Closing panel globally: there is bug (panel does not close tapping off the panel) using the built in jqm methods, so this hack is needed\n            //docs: http://demos.jquerymobile.com/1.3.2/widgets/panels/\n            $('.ui-panel-dismiss-open').off().on('vclick', function () {\n                panel.panel('close');\n            });\n\n        });\n\n        inactive_tab.off().on('vclick', function (e) {\n            //get url from data-hef attribute\n            var page = $('div#entry-values div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab i').attr('data-href');\n            EC.Routing.changePage(page);\n            //window.history.back(-1);\n        });\n\n        entry_value_btn.off().on('vclick', 'i', function (e) {\n\n            var hash = $(e.target).parent().attr('data-href');\n            var edit_position = parseInt(hash.replace('?position=', ''), 10);\n\n            window.localStorage.edit_position = edit_position;\n            window.localStorage.edit_mode = 1;\n\n            //cache back_nav_hash, to be used for navigate back after an edit\n            // action\n            window.localStorage.back_nav_url = $('div#entry-values div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab i').attr('data-href');\n\n            //open inputs page at the right input position\n            EC.Entries.addEntry();\n\n            e.preventDefault();\n\n        });\n\n        //attach event to context menu to button unsync this entry\n        unsync_entry_btn.off().on('vclick', function (e) {\n            EC.Notification.askConfirm(EC.Localise.getTranslation('unsync_entry'), EC.Localise.getTranslation('unsync_entry_confirm'), 'EC.Entries.unsyncEntry');\n        });\n\n        delete_entry_btn.off().on('vclick', function (e) {\n            EC.Notification.askConfirm(EC.Localise.getTranslation('delete_entry'), EC.Localise.getTranslation('delete_entry_with_children_confirm'), 'EC.Entries.deleteEntry');\n        });\n\n        ctx_menu_btn.off().on('vclick', function (e) {\n\n            var panel = $('.entry-values-options');\n\n            panel.panel('open');\n\n\n            //Closing panel globally: there is bug (panel does not close tapping off the panel) using the built in jqm methods, so this hack is needed\n            //docs: http://demos.jquerymobile.com/1.3.2/widgets/panels/\n            $('.ui-panel-dismiss-open').off().on('vclick', function () {\n                panel.panel('close');\n            });\n        });\n    };\n\n    module.renderEntryValues = function (the_values) {\n\n        //build HTML\n        var HTML = '';\n        var back_href;\n        var back_children;\n        var i;\n        var iLength;\n        var values = the_values;\n        var inputs_values = [];\n        var inputs_trail = [];\n        var dom_list = $('div#entry-values-list ul');\n        var page = $('#entry-values');\n        var header = $('div#entry-values div[data-role=\"header\"] div[data-href=\"entry-values-nav-btn\"] span.project-name');\n        var active_key = '';\n        var entry_key = window.localStorage.entry_key;\n        var active_tab_label = $('div#entry-values div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.active-tab span');\n        var inactive_tab = $('div#entry-value div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab');\n        var inactive_tab_hash = $('div#entry-values div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab i');\n        var inactive_tab_label = $('div#entry-values div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab span');\n        var form_id = parseInt(window.localStorage.form_id, 10);\n        var form_name = window.localStorage.form_name;\n        var form_tree = JSON.parse(window.localStorage.form_tree);\n        var trail;\n        var allow_download_edits = window.localStorage.allow_download_edits;\n        var project_name = window.localStorage.project_name;\n        var data_synced = 0;\n        var formatted_location;\n        var current_entries_total;\n        var totals;\n        var branch_values;\n        var is_genkey_hidden = EC.Utils.isFormGenKeyHidden(form_id);\n        var is_primary_key;\n        var inputs = EC.Inputs.getInputs();\n        var labels;\n        var dropdown_label;\n        var radio_label;\n\n        wls = window.localStorage;\n\n        //stop background watch position if any\n        window.navigator.geolocation.clearWatch(wls.watch_position);\n        window.localStorage.form_has_location = 0;\n\n        //bind buttons\n        _bindActionBarBtns();\n\n        //Add selected entry key value as the active key (it is the default if no title specified)\n        active_key = entry_key;\n\n        //empty current list\n        dom_list.empty();\n\n        for (i = 0, iLength = values.length; i < iLength; i++) {\n\n            data_synced += values[i].is_data_synced;\n\n            //check if the current value is a primary key (it is onlt when\n            // entry_key === value)\n            is_primary_key = (values[i].value === values[i].entry_key) ? 1 : 0;\n\n\n            //do we have at least a title field? If so, show the first title field value as active key\n            if (parseInt(values[i].is_title, 10) === 1 && active_key === entry_key) {\n                active_key = values[i].value;\n            }\n\n            /*\n             * Build input_values array. by default a value is a single value\n             * (string)\n             * Media value is an object which contains the path to the stored\n             * file and the path to the cached file (if any)\n             * Checkbox values are saved as csv, but they are converted back\n             * to array\n             * Branch values represent the branch form name and its total of\n             * entries\n             */\n            switch (values[i].type) {\n\n                //Checkbox values are saved as csv values: they are converted\n                // back to array\n                case EC.Const.CHECKBOX:\n                    inputs_values.push({\n                        _id: values[i]._id,\n                        type: values[i].type,\n                        value: values[i].value.split(','),\n                        position: values[i].position,\n                        is_primary_key: is_primary_key\n                    });\n                    break;\n\n                //Media files values need to be in the form {cached: '',\n                // stored: <the_filename>}\n                case EC.Const.PHOTO :\n                    inputs_values.push({\n                        _id: values[i]._id,\n                        type: values[i].type,\n                        value: {\n                            cached: '',\n                            stored: values[i].value\n                        },\n                        position: values[i].position,\n                        is_primary_key: is_primary_key\n                    });\n                    break;\n\n                //Media files values need to be in the form {cached: '',\n                // stored: <the_filename>}\n                case EC.Const.AUDIO :\n                    inputs_values.push({\n                        _id: values[i]._id,\n                        type: values[i].type,\n                        value: {\n                            cached: '',\n                            stored: values[i].value\n                        },\n                        position: values[i].position,\n                        is_primary_key: is_primary_key\n                    });\n                    break;\n\n                //Media files values need to be in the form {cached: '',\n                // stored: <the_filename>}\n                case EC.Const.VIDEO :\n                    inputs_values.push({\n                        _id: values[i]._id,\n                        type: values[i].type,\n                        value: {\n                            cached: '',\n                            stored: values[i].value\n                        },\n                        position: values[i].position,\n                        is_primary_key: is_primary_key\n                    });\n                    break;\n\n                case EC.Const.BRANCH:\n\n                    branch_values = values[i].value.split(',');\n                    inputs_values.push({\n                        _id: values[i]._id,\n                        type: values[i].type,\n                        value: {\n                            branch_form_name: branch_values[0],\n                            branch_total_entries: parseInt(branch_values[1], 10)\n                        },\n                        position: values[i].position,\n                        is_primary_key: is_primary_key\n                    });\n\n                    break;\n\n                default:\n                    inputs_values.push({\n                        _id: values[i]._id,\n                        type: values[i].type,\n                        value: values[i].value,\n                        position: values[i].position,\n                        is_primary_key: is_primary_key\n                    });\n            }//switch\n\n            /* build input_trail array to be used for navigation between\n             * inputs be aware that:\n             *\n             * - _skipp3d_ values are skipped, to retain jump sequence when\n             * listing values\n             * - if is_genkey_hidden is set to 1 and the value is a primary\n             * key, do not show it\n             *  (values[i].value === values[i].entry_key) i strue only if\n             * that value is the the primary key\n             */\n\n            if (values[i].value !== EC.Const.SKIPPED && !(is_genkey_hidden === 1 && values[i].value === values[i].entry_key)) {\n\n                inputs_trail.push({\n                    position: values[i].position,\n                    label: values[i].label\n                });\n\n                //build list of values (_skipp3d_ values are skipped)\n                HTML += '<li data-role=\"list-divider\">';\n                HTML += values[i].label;\n                HTML += '</li>';\n                HTML += '<li class=\"entry-value-btn-wrapper\">';\n\n                //format media and location values for displaying purposes\n                switch (values[i].type) {\n\n                    //show labels for checkbox choices, as tey are saved as\n                    // values\n                    case EC.Const.CHECKBOX:\n\n                        console.log('CHECKBOX');\n                        console.log(values[i]);\n\n                        labels = EC.Utils.mapLabelToValue(values[i], inputs);\n                        HTML += '<span class=\"h-entry-value-label\">' + labels.join(', ') + '</span>';\n\n                        break;\n\n                    case EC.Const.DROPDOWN:\n\n                        console.log('DROPDOWN');\n                        console.log(values[i]);\n\n                        if (values[i].value !== '0') {\n                            dropdown_label = EC.Utils.mapLabelToValue(values[i], inputs);\n                        }\n                        else {\n                            dropdown_label = '';\n                        }\n\n                        HTML += '<span class=\"h-entry-value-label\">' + dropdown_label + '</span>';\n\n                        break;\n\n                    case EC.Const.RADIO:\n\n                        console.log('RADIO');\n                        console.log(values[i]);\n\n                        if (values[i].value !== '') {\n                            radio_label = EC.Utils.mapLabelToValue(values[i], inputs);\n                        }\n                        else {\n                            radio_label = '';\n                        }\n\n\n                        HTML += '<span class=\"h-entry-value-label\">' + radio_label + '</span>';\n\n                        break;\n\n                    case EC.Const.LOCATION:\n\n                        var location = values[i].value;\n                        location = location.split(',');\n\n                        var j;\n                        var jLength = location.length;\n\n                        for (j = 0; j < jLength; j++) {\n\n                            HTML += '<span class=\"h-entry-value-label\">' + location[j] + '<span>';\n\n                        }\n                        break;\n\n                    case EC.Const.BRANCH:\n\n                        //show branch form mane and total of entries (we set\n                        // the branch_values array earlier)\n                        HTML += '<span class=\"h-entry-value-label\">' + branch_values[0] + '<br/>(' + branch_values[1] + ')' + '</span>';\n\n                        break;\n\n                    case EC.Const.PHOTO:\n\n                        if (values[i].value !== '') {\n                            HTML += '<span class=\"h-entry-value-label\">' + EC.Localise.getTranslation(EC.Const.PHOTO_AVAILABLE_LABEL) + '</span>';\n                        } else {\n                            HTML += '<span class=\"h-entry-value-label\">' + EC.Localise.getTranslation(EC.Const.PHOTO_NOT_AVAILABLE_LABEL) + '</span>';\n                        }\n\n                        break;\n\n                    case EC.Const.AUDIO:\n\n                        if (values[i].value !== '') {\n                            HTML += '<span class=\"h-entry-value-label\">' + EC.Localise.getTranslation(EC.Const.AUDIO_AVAILABLE_LABEL) + '</span>';\n                        } else {\n                            HTML += '<span class=\"h-entry-value-label\">' + EC.Localise.getTranslation(EC.Const.AUDIO_NOT_AVAILABLE_LABEL) + '</span>';\n                        }\n\n                        break;\n\n                    case EC.Const.VIDEO:\n\n                        if (values[i].value !== '') {\n                            HTML += '<span class=\"h-entry-value-label\">' + EC.Localise.getTranslation(EC.Const.VIDEO_AVAILABLE_LABEL) + '</span>';\n                        } else {\n                            HTML += '<span class=\"h-entry-value-label\">' + EC.Localise.getTranslation(EC.Const.VIDEO_NOT_AVAILABLE_LABEL) + '</span>';\n                        }\n\n                        break;\n\n                    default:\n                        HTML += '<span class=\"h-entry-value-label\">' + values[i].value + '</span>';\n\n                }\n\n                HTML += '<div class=\"entry-value-embedded-btn\" data-href=\"?position=' + values[i].position + '\">';\n\n                //deal with remote entries and disable edit button if no\n                // editable\n                if (values[i].is_remote === 1) {\n\n                    if (allow_download_edits === '1') {\n                        HTML += '<i class=\"fa fa-edit  fa-fw fa-ep-entry-value-embedded-btn\"></i>';\n                    } else {\n                        HTML += '<i class=\"fa fa-edit  fa-fw fa-ep-entry-value-embedded-btn ui-disabled\"></i>';\n                    }\n\n                } else {\n                    HTML += '<i class=\"fa fa-edit  fa-fw fa-ep-entry-value-embedded-btn\"></i>';\n                }\n\n                HTML += '</div>';\n                HTML += '</li>';\n\n            }//if NOT skipped\n\n        }//for\n\n        //add values to localStorage 'inputs_values', to be used to\n        // pre-populate fields when editing\n        window.localStorage.inputs_values = JSON.stringify(inputs_values);\n\n        //add values to localStorage 'inputs_trail', to navigate back and\n        // forth input fields when editing\n        window.localStorage.inputs_trail = JSON.stringify(inputs_trail);\n\n        //add project name to header (top left)\n        header.text(project_name.trunc(EC.Const.PROJECT_NAME_MAX_LENGTH));\n\n        /*\n         * Build back button behaviour:\n         */\n\n        //check if this form is at the top of the tree so the back button\n        // will go back to the form page (#forms)\n        if (form_tree.parent === 0) {\n            entry_key = '';\n        } else {\n\n            //this is a nested form, so we need to go back to the previous\n            // form in the stack based on what entry was selected\n            trail = JSON.parse(window.localStorage.breadcrumbs);\n\n            entry_key = trail[trail.length - 2];\n\n            //window.localStorage.breadcrumbs = JSON.stringify(trail);\n        }\n\n        //request pagination when going back to entries list\n        totals = JSON.parse(window.localStorage.entries_totals);\n        back_children = totals[totals.length - 1].entries_total;\n\n        /*set hash to be used to list this entries when loading index.html\n         * going back\n         The direction will be VIEW as we are viewing(listing) the current\n         form entries */\n        back_href = '';\n        back_href += 'entries-list.html?form=' + form_id;\n        back_href += '&name=' + form_name;\n        back_href += '&entry_key=' + entry_key;\n        back_href += '&direction=' + EC.Const.VIEW;\n        back_href += '&children=' + back_children;\n\n        if (data_synced > 0) {\n            //enable unsync-data button\n            unsync_entry_btn.removeClass('ui-disabled');\n        } else {\n            //disable unsync-data button\n            unsync_entry_btn.addClass('ui-disabled');\n        }\n\n        //update active tab name with the current active form\n        active_tab_label.text(active_key);\n\n        //update inactive tab with back navigation href\n        inactive_tab_label.text(form_name);\n        inactive_tab_hash.attr('data-href', back_href);\n\n        //console.log(HTML);\n        dom_list.append(HTML);\n\n        //build page and refresh listview\n        page.page();\n        dom_list.listview('refresh');\n\n        //set a flag as any time we go back from entry value list page we\n        // need to show the list of entries for the previous selected entry\n        //if entry_key is undefined, it is because we are coming back from a\n        // 'Store Edit' action\n        if (entry_key !== undefined) {\n            window.localStorage.back_nav_url = back_href;\n        }\n\n        //Set 'editing mode' flag\n        window.localStorage.edit_mode = 1;\n\n        EC.Notification.hideProgressDialog();\n    };\n\n    return module;\n\n}(EC.Entries));\n","/*global $, jQuery, cordova, device*/\n/**\n * @module EC\n * @submodule Entries\n */\n\nvar EC = EC || {};\nEC.Entries = (function (module) {\n    'use strict';\n\n    /**\n     * @method renderList\n     * Update the UI listing all the entries for a form. What is listed is all the\n     * field values flagged as 'title'\n     * If no title field is found, the value of the primary key of that form is shown\n     * instead\n     *\n     * @param {array} the_entries Array with all the entries for a form.\n     * Each element is like {children: 1, entry_key: 'Kingston', full_title:\n\t\t * 'Kingston, KI6475746856'}\n     * -children- is the number of child entries belonging to each parent entry (if\n     * any)\n     * -entry_key- value of the primary key for that form\n     * -full_title- all the values flagged as title in csv format\n     *\n     */\n\n    var wls;\n\n    /**\n     *  Bind Action Bar buttons tap events\n     */\n    var _bindActionBarBtns = function () {\n\n        var nav_drawer_btn = $('div#entries div[data-role=\"header\"] div[data-href=\"entries-nav-btn\"]');\n        var home_btn = $('div#entries div[data-role=\"header\"] div[data-href=\"home\"]');\n        var settings_btn = $('div#entries div[data-role=\"header\"] div#entries-nav-drawer ul li div[data-href=\"settings\"]');\n        var add_entry_btn = $('div#entries div[data-role=\"header\"] i[data-href=\"add-entry\"]');\n        var inactive_tab = $('div#entries div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab');\n\n        //bind left sidebar open/close\n        nav_drawer_btn.off().on('vclick', function (e) {\n\n            var panel = $('#entries-nav-drawer');\n\n            panel.panel('open');\n\n            home_btn.off().one('vclick', function (e) {\n                //reset offset, as when going back we make a new request for the first entries\n                wls.QUERY_ENTRIES_OFFSET = 0;\n\n                //trigger a pgae refresh when navigating back to project list\n                wls.back_nav_url = '#refresh';\n                EC.Routing.changePage(EC.Const.INDEX_VIEW);\n            });\n\n            // //bind add project button (action bar)\n            settings_btn.off().one('vclick', function (e) {\n                wls.reached_settings_view_from = $.mobile.activePage.attr('id');\n                EC.Routing.changePage(EC.Const.SETTINGS_VIEW);\n            });\n\n            //Closing panel globally: there is bug (panel does not close tapping off the panel) using the built in jqm methods, so this hack is needed\n            //docs: http://demos.jquerymobile.com/1.3.2/widgets/panels/\n            $('.ui-panel-dismiss-open').off().on('vclick', function () {\n                panel.panel('close');\n            });\n\n        });\n\n        //open inputs\n        add_entry_btn.off().on('vclick', function (e) {\n            EC.Entries.addEntry();\n        });\n\n        inactive_tab.off().on('vclick', function (e) {\n\n            var project_id = wls.project_id;\n            var project_name = wls.project_name;\n\n            //get url from data-hef attribute\n            var page = $('div#entries div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab i').attr('data-href');\n\n            EC.Routing.changePage(page);\n\n        });\n\n    };\n\n    var _buildList = function (the_form_id, the_form_tree, the_entries) {\n\n        var form_id = the_form_id;\n        var form_tree = the_form_tree;\n        var entries = the_entries;\n        var i;\n        var iLength = entries.length;\n        var HTML = '';\n\n        //if it is the last form, show single list view row with no nested children (no\n        // right button)\n        if (form_tree.child === 0) {\n            for (i = 0; i < iLength; i++) {\n\n                //if no title set, use value of primary key as title\n                entries[i].full_title = (entries[i].full_title === '') ? entries[i].entry_key : entries[i].full_title;\n\n                HTML += '<li data-icon=\"false\">';\n                HTML += '<a href=\"entry-values.html?form=' + form_id + '&entry_key=' + entries[i].entry_key + '&direction=' + EC.Const.FORWARD + '\">';\n\n                //show full entries title removing last comma if any\n                HTML += entries[i].full_title.replace(/,\\s*$/, '');\n                HTML += '</a>';\n                HTML += '</li>';\n            }//for\n\n        }\n        else {\n\n            //split listview to show a button on the right to navigate down the form tree\n            // entries and a button to list the inputs for the entry\n            for (i = 0,\n                     iLength = entries.length; i < iLength; i++) {\n\n                //if no title set, use value of primary key as title\n                entries[i].full_title = (entries[i].full_title === '') ? entries[i].entry_key : entries[i].full_title;\n\n                //render entry as a button to view the entry (direction =  VIEW)\n                HTML += '<li data-icon=\"ep-next-page\">';\n                HTML += '<a href=\"entry-values.html?form=' + form_id;\n                HTML += '&entry_key=' + entries[i].entry_key;\n                HTML += '&direction=' + EC.Const.VIEW;\n                HTML += '\">';\n\n                //show full entries title removing last comma if any\n                HTML += entries[i].full_title.replace(/,\\s*$/, '');\n                HTML += '</a>';\n\n                //render button to go to children entries for that entry (direction = FORWARD)\n                HTML += '<a href=\"entries-list.html?form=' + form_tree.child;\n                HTML += '&name=' + form_tree.cname;\n                HTML += '&entry_key=' + entries[i].entry_key;\n                HTML += '&direction=' + EC.Const.FORWARD;\n                HTML += '&children=' + entries[i].children;\n                HTML += '\">';\n                HTML += '</a>';\n                // here we need to display the total of direct children for this entry\n                HTML += '<span class=\"ui-li-count\">' + entries[i].children;\n                HTML += '</span>';\n                HTML += '</li>';\n            }//for\n        }\n\n        return HTML;\n\n    };\n\n    module.renderList = function (the_entries) {\n\n        //build HTML\n        var HTML = '';\n        var back_href = '';\n        var back_children;\n        var i;\n        var iLength;\n        var entries = the_entries;\n        var dom_list = $('div#entries-list ul');\n        var empty_entries_list = $('div#entries div#entries-list div#empty-entries-list');\n        var empty_entries_list_form_name = $('div#entries div#entries-list div#empty-entries-list p span.form-name');\n        var page = $('#entries');\n        var header = $('div#entries div[data-role=\"header\"] div[data-href=\"entries-nav-btn\"] span.project-name');\n        var trail;\n        var inactive_label = '';\n        var dom_back_home_btn = $('div#entries a.back-home');\n        var action_bar_btn = $('div#entries div#entries-actionbar');\n        var active_tab = $('div#entries div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.active-tab span');\n        var inactive_tab = $('div#entries div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab');\n        var inactive_tab_hash = $('div#entries div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab i');\n        var inactive_tab_label = $('div#entries div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab span');\n        var form_id;\n        var form_name;\n        var form_tree;\n        var project_name;\n        var load_more_btn = $('div#entries div#entries-list div.more-items-btn');\n        var load_more_spinner = $('div#entries div#entries-list div.more-items-btn-spinner');\n        var self = this;\n        var offset;\n        var limit;\n        var current_entries_total;\n        var totals;\n\n        wls = window.localStorage;\n        form_id = parseInt(wls.form_id, 10);\n        form_name = wls.form_name;\n        form_tree = JSON.parse(wls.form_tree);\n        project_name = wls.project_name;\n        offset = parseInt(wls.QUERY_ENTRIES_OFFSET, 10);\n        limit = parseInt(wls.QUERY_LIMIT, 10);\n\n        //reset entries offset if we are not using the cached entries\n        if (!window.localStorage.cached_entries_list) {\n            wls.QUERY_ENTRIES_OFFSET = 0;\n        }\n\n        //stop background watch position if any\n        window.navigator.geolocation.clearWatch(window.localStorage.watch_position);\n        window.localStorage.form_has_location = 0;\n\n        //request pagination when going back\n        totals = JSON.parse(wls.entries_totals);\n        current_entries_total = totals[totals.length - 1].entries_total;\n        //request pagination when going back\n        back_children = (totals.length > 1) ? totals[totals.length - 2].entries_total : 0;\n\n        //bind action bar buttons for this page\n        _bindActionBarBtns();\n\n        //show action bar buttons\n        action_bar_btn.show();\n\n        //show 'Show more' button if we have more entries to display\n        if (current_entries_total > (offset + limit)) {\n            load_more_btn.removeClass('hidden');\n        }\n        else {\n            load_more_btn.addClass('hidden');\n        }\n\n        //bind 'show more button'\n        load_more_btn.off().on('vclick', function (e) {\n\n            /**\n             * Embedded spinning loader works only on iOS, do not know why\n             */\n\n            if (window.device.platform === EC.Const.IOS) {\n                //hide button and show loader\n                $(this).addClass('hidden');\n                load_more_spinner.removeClass('hidden');\n            }\n\n            if (window.device.platform === EC.Const.ANDROID) {\n                EC.Notification.showProgressDialog();\n            }\n\n            //increase offset\n            offset = parseInt(wls.QUERY_ENTRIES_OFFSET, 10);\n            offset += parseInt(wls.QUERY_LIMIT, 10);\n            wls.QUERY_ENTRIES_OFFSET = offset;\n\n            //get more entries\n            self.getMoreEntries(offset);\n\n        });\n\n        //empty current list\n        dom_list.empty();\n\n        //if we have entries, list them\n        if (entries.length > 0) {\n\n            //hide empty list message (no entries found)\n            empty_entries_list.addClass('hidden');\n            dom_list.removeClass('hidden');\n\n            //build list of entries markup\n            HTML = _buildList(form_id, form_tree, entries);\n\n        }\n        else {\n\n            //no entries found\n            //hide empty list message (no entries found)\n            empty_entries_list.removeClass('hidden');\n            dom_list.addClass('hidden');\n\n            empty_entries_list_form_name.text(form_name);\n\n        }\n\n        //add project name to header\n        header.text(project_name.trunc(EC.Const.PROJECT_NAME_MAX_LENGTH));\n\n        //check if this form is at the top of the tree so the back button will go back to\n        // the form page (#forms)\n        if (form_tree.parent === 0) {\n\n            inactive_label = 'Forms';\n\n            //build url\n            back_href = 'forms.html?project=' + wls.project_id + '&name=' + wls.project_name;\n\n        }\n        else {\n\n            //this is a nested form, so we need to go back to the previous form in the stack\n            // based on what entry was selected\n            trail = JSON.parse(wls.breadcrumbs);\n\n            //breadcrumb label will indicate form and last element of the breadcrumb trail\n            //todo we remove the entry key from being displayed (as 99% of the time is autogenerated and not human readable)\n            //tofdo we should cjeck for auto gen key and display the entry in the navigation only when the ky is entered by the user\n            //inactive_label = form_tree.pname + ': ' + trail[trail.length - 1];\n            inactive_label = form_tree.pname;\n\n            //back button will have parent form and parent entry key (which is the next to\n            // last element in the breadcrumb trail)\n            //and number of children (parent entries when going back) for pagination\n            back_href += 'entries-list.html?form=' + form_tree.parent;\n            back_href += '&name=' + form_tree.pname;\n            back_href += '&entry_key=' + trail[trail.length - 2];\n            back_href += '&direction=' + EC.Const.BACKWARD;\n            back_href += '&children=' + back_children;\n        }\n\n        //update active tab name with the current active form\n        active_tab.text(form_name);\n\n        //update inactive tab\n        inactive_tab_label.text(inactive_label);\n        inactive_tab_hash.attr('data-href', back_href);\n\n        if (entries.length > 0) {\n            dom_list.append(HTML);\n            dom_list.listview('refresh');\n        }\n\n        //add form name to localStorage\n        wls.form_name = form_name;\n        wls.form_id = form_id;\n\n        //remove navigation objects\n        wls.removeItem('inputs_values');\n        wls.removeItem('inputs_trail');\n        wls.removeItem('current_position');\n        wls.removeItem('back_edit_nav_url');\n\n        //reset 'editing mode' flags\n        wls.removeItem('edit_mode');\n        wls.removeItem('edit_position');\n        wls.removeItem('edit_type');\n        wls.removeItem('edit_id');\n\n        //handle tap on list item: cache Y position from top of screen, to silently\n        // scroll to position when navigating back from single entry values\n        $('div#entries-list ul li').off().on('vclick', function () {\n            console.log($(this).position().top);\n            //window.localStorage.previous_tapped_entry_Y = $(this).offset().top;\n            window.localStorage.previous_tapped_entry_Y = $(this).position().top;\n\n        });\n\n        //Localise\n        if (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n            EC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n        }\n\n        //cache current entries\n        window.localStorage.cached_entries_list = JSON.stringify(entries);\n\n        EC.Notification.hideProgressDialog();\n    };\n\n    module.getMoreEntries = function (the_offset) {\n\n        var load_more_parameters = JSON.parse(wls.load_more_parameters);\n        var form_id = load_more_parameters.form_id;\n        var parent_path = load_more_parameters.parent_path;\n        var offset = the_offset;\n\n        EC.Select.getEntries(form_id, parent_path, offset);\n    };\n\n    module.appendMoreEntries = function (the_entries) {\n\n        var dom_list = $('div#entries-list ul');\n        var entries = the_entries;\n        var form_id = parseInt(wls.form_id, 10);\n        var form_name = wls.form_name;\n        var form_tree = JSON.parse(wls.form_tree);\n        var project_name = wls.project_name;\n        var load_more_btn = $('div#entries-list .more-items-btn');\n        var HTML = '';\n        var offset = parseInt(wls.QUERY_ENTRIES_OFFSET, 10);\n        var limit = parseInt(wls.QUERY_LIMIT, 10);\n        var totals;\n        var current_entries_total;\n        var cached_entries;\n\n        //get total of entries\n        totals = JSON.parse(wls.entries_totals);\n        current_entries_total = totals[totals.length - 1].entries_total;\n\n        HTML = _buildList(form_id, form_tree, entries);\n\n        dom_list.append(HTML);\n        dom_list.listview('refresh');\n        dom_list.trigger('updatelayout');\n\n        //handle tap on list item: cache Y position from top of screen, to silently\n        // scroll to position when navigating back from single entry values\n        $('div#entries-list ul li').off().on('vclick', function () {\n            console.log($(this).position().top);\n            //window.localStorage.previous_tapped_entry_Y = $(this).offset().top;\n            window.localStorage.previous_tapped_entry_Y = $(this).position().top;\n\n        });\n\n        //show button and hide loader\n        if (window.device.platform === EC.Const.IOS) {\n            $('div#entries div#entries-list div.more-items-btn-spinner').addClass('hidden');\n        }\n        if (window.device.platform === EC.Const.ANDROID) {\n            EC.Notification.hideProgressDialog();\n        }\n\n        if (current_entries_total > (offset + limit)) {\n            $('div#entries div#entries-list div.more-items-btn').removeClass('hidden');\n        }\n\n        //cache new entries\n        cached_entries = JSON.parse(window.localStorage.cached_entries_list);\n        window.localStorage.cached_entries_list = JSON.stringify(cached_entries.concat(entries));\n\n    };\n\n    return module;\n\n}(EC.Entries));\n","/* global LocalFileSystem */\nvar EC = EC || {};\nEC.EmailBackup = EC.EmailBackup || {};\nEC.EmailBackup = (function () {\n    'use strict';\n\n    var project_name;\n    var project_id;\n    var mailto;\n    var backup_path;\n    var filename;\n\n    var _getBackupPath = function (the_project_name) {\n\n        filename = the_project_name + '.txt';\n\n        //todo this needs to be fixed\n        window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, gotFS, gotFSfail);\n\n        function gotFS(the_fileSystem) {\n\n            backup_path = the_fileSystem.root.nativeURL + filename;\n\n            console.log('Backup path: ' + backup_path);\n\n            //remove file:// from path for iOS\n            if (window.device.platform === EC.Const.IOS) {\n                backup_path = backup_path.slice(7);\n            }\n\n        }\n\n        function gotFSfail(the_error) {\n            console.log(the_error);\n        }\n\n    };\n\n    var renderSendEmailView = function () {\n\n        var mailto_holder = $('div#email-backup div#email-address-wrapper input#email-address');\n        var send_email_btn = $('div#email-backup div[data-role=\"header\"] div#send-email');\n        var back_btn = $('div#email-backup div[data-role=\"header\"] div[data-href=\"back-btn\"]');\n        var subject;\n        var body;\n        var back_btn_href;\n\n        project_name = window.localStorage.project_name;\n        project_id = window.localStorage.project_id;\n        back_btn_href = 'forms.html?project=' + project_id + '&name=' + project_name;\n\n        back_btn.off().one('vclick', function () {\n            //go back to previuos page in history\n            if (window.localStorage.current_view_url) {\n                EC.Routing.changePage(window.localStorage.current_view_url);\n            }\n            else {\n                EC.Routing.changePage(EC.Const.INDEX_VIEW);\n            }\n        });\n\n        //Set header\n        $('div#email-backup div[data-role=\"navbar\"] ul li.title-tab span#email-backup-label span.project-name-inline').text(project_name.trunc(EC.Const.PROJECT_NAME_MAX_LENGTH));\n\n        subject = 'Backup for ' + project_name;\n        body = 'The backup for project ' + project_name + ' is attached';\n\n        //set backup full path variable (async)\n        _getBackupPath(project_name);\n\n        function sendingStatus(res) {\n\n            console.log('Email result: ' + res);\n\n        }\n\n\n        send_email_btn.off().on('vclick', function (e) {\n\n            if (!EC.Utils.hasConnection()) {\n                EC.Notification.showAlert(EC.Localise.getTranslation('error'), EC.Localise.getTranslation('no_internet'));\n                return;\n            }\n\n            //get email address from input\n            mailto = mailto_holder.val();\n\n            //validate email address\n            if (mailto === '' || !EC.Utils.isValidEmail(mailto)) {\n\n                EC.Notification.showAlert(EC.Localise.getTranslation('error'), EC.Localise.getTranslation('invalid_email'));\n                return;\n            }\n\n            //check if a mail client is setup on the device\n            window.plugin.email.isServiceAvailable(function (is_available) {\n\n                //no mail client set up yet? Warn user\n                if (!is_available) {\n                    EC.Notification.showAlert(EC.Localise.getTranslation('error'), EC.Localise.getTranslation('invalid_email_client'));\n                    return;\n                }\n\n                //open mail UI\n                window.plugin.email.open({\n                    to: [mailto], // email addresses for TO field\n                    cc: [], // email addresses for CC field\n                    bcc: [], // email addresses for BCC field\n                    attachments: [backup_path], //\n                    subject: subject, // subject of the email\n                    body: body, // email body (could be HTML code, in this case set isHtml to true)\n                    isHtml: true// indicates if the body is HTML or plain text\n                }, function () {\n                    console.log('email view dismissed');\n                }, this);\n\n            });\n\n        });\n\n    };\n\n    return {\n        renderSendEmailView: renderSendEmailView\n    };\n\n}());\n","/* global Papa*/\nvar EC = EC || {};\nEC.Export = EC.Export || {};\nEC.Export.saveProjectDataToCSV = function (the_project_id, the_forms) {\n    'use strict';\n\n    var deferred = new $.Deferred();\n    var project_id = project_id;\n    var forms = the_forms;\n    var parsed_forms_json;\n\n    function _parseFormAllEntries(the_form, has_parent_flag) {\n\n        var form = the_form;\n        var iLength = form.total_entries;\n        var i;\n        var json = [];\n        var single_entry_raw;\n        var has_parent = has_parent_flag;\n\n\n        //per each entry belonging to the current form, generate a json as key:value pair\n        for (i = 0; i < iLength; i++) {\n            single_entry_raw = form.data_rows.splice(0, form.total_inputs);\n            json.push(_parseSingleEntry(single_entry_raw, has_parent));\n        }\n        return json;\n    }\n\n    //each entry has got a number of inputs to define a single entry. Split each entry as key-value pairs\n    function _parseSingleEntry(the_single_raw_entry, has_parent_flag) {\n\n        var i;\n        var single_entry_raw = the_single_raw_entry;\n        var iLength = single_entry_raw.length;\n        var single_entry_parsed = {};\n        var has_parent = has_parent_flag;\n        var parent_key_ref;\n        var parent_key_ref_value;\n        var temp;\n        var location_value;\n        var coords = {};\n\n        //for child entries, we need the value of the parent key, so we can link a child form csv to its parent on the server\n        if (has_parent) {\n            parent_key_ref = EC.Utils.getFormParentPrimaryKeyRef(single_entry_raw[0].form_id);\n            temp = single_entry_raw[0].parent.split('|');\n            parent_key_ref_value = temp[temp.length - 1];\n            single_entry_parsed[parent_key_ref] = parent_key_ref_value;\n        }\n\n        //loop each value for a single entry and generate an object listing all ref:value as the key:value pairs\n        for (i = 0; i < iLength; i++) {\n\n            //console.log('raw entry ****************************');\n            //console.log(single_entry_raw[i]);\n\n            //replace '_skipp3ed' with empty values\n            if (single_entry_raw[i].value === EC.Const.SKIPPED) {\n                single_entry_raw[i].value = '';\n            }\n\n\n            //split location value to components (as)expected on server\n            if (single_entry_raw[i].type === EC.Const.LOCATION) {\n\n                //remove formatting\n                location_value = single_entry_raw[i].value.replace('\\n', '').replace('\\r', '');\n\n                //split the location values to different parts (as expected on Epicollect+ server)\n                if (location_value === '') {\n                    //fill with empty values\n                    single_entry_parsed[single_entry_raw[i].ref + '_lat'] = '';\n                    single_entry_parsed[single_entry_raw[i].ref + '_lon'] = '';\n                    single_entry_parsed[single_entry_raw[i].ref + '_acc'] = '';\n                    single_entry_parsed[single_entry_raw[i].ref + '_alt'] = '';\n                    single_entry_parsed[single_entry_raw[i].ref + '_bearing'] = '';\n                }\n                else {\n                    //fill with components values\n                    coords = EC.Utils.parseLocationString(single_entry_raw[i].value);\n                    single_entry_parsed[single_entry_raw[i].ref + '_lat'] = coords.latitude;\n                    single_entry_parsed[single_entry_raw[i].ref + '_lon'] = coords.longitude;\n                    single_entry_parsed[single_entry_raw[i].ref + '_acc'] = coords.accuracy;\n                    single_entry_parsed[single_entry_raw[i].ref + '_alt'] = coords.altitude;\n                    single_entry_parsed[single_entry_raw[i].ref + '_bearing'] = coords.heading;\n                }\n            }\n            else {\n                single_entry_parsed[single_entry_raw[i].ref] = single_entry_raw[i].value;\n            }\n        }\n        // console.log('Entry ' + i + ' content ********************************');\n        // console.log(single_entry_parsed);\n        return single_entry_parsed;\n    }\n\n    //get data rows for all the forms for this project\n    $.when(EC.Select.getAllProjectEntries(forms, project_id)).then(function (data) {\n        console.log(data);\n\n        var i;\n        var iLength = data.length;\n\n\n        parsed_forms_json = [];\n\n        //per each form parse all the entries, also set form mane and list headers\n        for (i = 0; i < iLength; i++) {\n\n            parsed_forms_json[i] = {\n                name: data[i].form_name,\n                entries: []\n            };\n            //parse entries to get a proper object for the csv conversion. We pass in a flag to determine if the form is the main parent or not\n            parsed_forms_json[i].entries = _parseFormAllEntries(data[i], (i !== 0));\n        }\n        console.log('parsed_forms_json **********************************************');\n        console.log(parsed_forms_json);\n\n        //write csv files, one per each form\n        $.when(EC.File.writeProjectDataAsCSV(window.localStorage.project_name, parsed_forms_json)).then(function (response) {\n            deferred.resolve(response);\n        });\n    });\n\n    return deferred.promise();\n};\n\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device*/\n\nvar EC = EC || {};\nEC.Forms = EC.Forms || {};\nEC.Forms = ( function (module) {\n    \"use strict\";\n\n    module.getList = function (the_hash_to_parse) {\n\n        //get the requested form parsing the href\n        var hash = the_hash_to_parse.split('?');\n        var params = hash[1].split('&');\n        var project_id = params[0].replace(\"project=\", \"\");\n        var project_name = params[1].replace(\"name=\", \"\");\n        var wls = window.localStorage;\n        var current_view_url_parts;\n\n        //cache current page url for navigation purposes\n        current_view_url_parts = the_hash_to_parse.split(\"/\");\n        wls.current_view_url = current_view_url_parts[current_view_url_parts.length - 1];\n\n        //set project 'id' and 'name' in localStorage for navigation\n        wls.project_id = project_id;\n        wls.project_name = project_name;\n\n        //check if this project has a backup file saved and set result in localStorage (device only)\n        if (!EC.Utils.isChrome()) {\n            $.when(EC.File.hasBackup(project_name)).then(function () {\n                wls.has_backup = 1;\n            }, function () {\n                wls.removeItem(\"has_backup\");\n            });\n        }\n\n        //set allow_download_edits flag in LocalStorage\n        $.when(EC.Select.getAllowDownloadEdits(project_id)).then(function () {\n            wls.allow_download_edits = 1;\n        }, function () {\n            wls.allow_download_edits = 0;\n        });\n\n        //show forms list\n        $.when(EC.Select.getForms(project_id)).then(function (the_forms, the_btn_states) {\n\n            //reset offset for entries pagination\n            wls.QUERY_ENTRIES_OFFSET = 0;\n            wls.QUERY_CHILD_ENTRIES_OFFSET = 0;\n            wls.QUERY_PARENT_ENTRIES_OFFSET = 0;\n\n            //reset other flags for pagination\n            wls.removeItem(\"last_parent\");\n            wls.removeItem(\"entry_key\");\n            wls.removeItem(\"form_has_jumps\");\n            wls.removeItem(\"load_more_parameters\");\n            wls.removeItem(\"current_position\");\n\n            //remove child form navigation flag\n            wls.removeItem(\"is_child_form_nav\");\n\n            //remove flag that disable store edit from an intermediate screen\n            wls.removeItem(\"has_new_jump_sequence\");\n\n            //reset navigation TODO: check this, experimental\n            wls.removeItem(\"back_nav_url\");\n\n            //TODO: to be tested:\n            //remove cached entries\n            wls.removeItem(\"cached_entries_list\");\n\n            wls.removeItem(\"previous_tapped_entry_Y\");\n\n\n            EC.Forms.renderList(the_forms, the_btn_states);\n        });\n\n    };\n\n    return module;\n}(EC.Forms));\n","var EC = EC || {};\nEC.Forms = EC.Forms || {};\nEC.Forms = (function (module) {\n    'use strict';\n\n    var _bindActionBarBtns = function () {\n\n        var home_btn = $('div#forms div[data-role=\"header\"] div[data-href=\"home\"]');\n        var nav_drawer_btn = $('div#forms div[data-role=\"header\"] div[data-href=\"form-nav-btn\"]');\n        var upload_btn = $('div#forms  div[data-role=\"header\"] div.ui-btn-right[data-href=\"upload\"]');\n        var ctx_menu_btn = $('div#forms div[data-role=\"header\"] div.ui-btn-right[data-href=\"project-options\"]');\n        var inactive_tab = $('div#forms div[data-role=\"header\"] div[data-role=\"navbar\"] ul li.inactive-tab');\n        var settings_btn = $('div#forms div[data-role=\"header\"] div#form-nav-drawer ul li div[data-href=\"settings\"]');\n\n        //bind left sidebar open/close\n        nav_drawer_btn.off().on('vclick', function (e) {\n\n            var panel = $('#form-nav-drawer');\n\n            panel.panel('open');\n\n            home_btn.off().one('vclick', function (e) {\n                //reload index page TODO: try a better way: if the page is in the dom do not reload: History API\n                window.localStorage.back_nav_url = '#refresh';\n                EC.Routing.changePage(EC.Const.INDEX_VIEW, '../');\n            });\n\n            // //bind add project button (action bar)\n            settings_btn.off().one('vclick', function (e) {\n                EC.Routing.changePage(EC.Const.SETTINGS_VIEW);\n            });\n\n            //Closing panel globally: there is bug (panel does not close tapping off the panel) using the built in jqm methods, so this hack is needed\n            //docs: http://demos.jquerymobile.com/1.3.2/widgets/panels/\n            $('.ui-panel-dismiss-open').off().on('vclick', function () {\n                panel.panel('close');\n            });\n\n        });\n\n        upload_btn.off().one('vclick', function (e) {\n            EC.Routing.changePage(EC.Const.UPLOAD_VIEW);\n        });\n\n        ctx_menu_btn.off().on('vclick', function () {\n            $('.project-options-panel').panel('open');\n\n            //Closing panel globally: there is bug (panel does not close tapping off the panel) using the built in jqm methods, so this hack is needed\n            //docs: http://demos.jquerymobile.com/1.3.2/widgets/panels/\n            $('.ui-panel-dismiss-open').off().on('vclick', function () {\n                $('.project-options-panel').panel('close');\n            });\n        });\n\n        inactive_tab.off().one('vclick', function (e) {\n\n            //reload index page TODO: try a better way: if the page is in the dom do not reload: History API\n            window.localStorage.back_nav_url = '#refresh';\n            EC.Routing.changePage(EC.Const.INDEX_VIEW, '../');\n        });\n    };\n\n    module.renderList = function (the_forms, the_button_states) {\n\n        //build HTML\n        var HTML = '';\n        var i;\n        var iLength;\n        var forms = the_forms;\n        var dom_list = $('div#forms-list ul');\n        var page = $('#forms');\n        var header = $('div#forms div[data-role=\"header\"] div[data-href=\"form-nav-btn\"] span.project-name');\n        var navbar_label = $('a.ui-btn-active span.ui-btn-inner');\n        var email_backup_btn = $('div#forms div#project-options ul li#email-backup');\n        var download_remote_data_btn = $('div#forms div#project-options ul li#download-remote-data');\n        var unsync_all_entries_btn = $('div#forms div#project-options ul li#unsync-all-data');\n        var delete_project_btn = $('div#forms div#project-options ul li#delete-project');\n        var delete_all_entries_btn = $('div#forms div#project-options ul li#delete-all-entries');\n        var delete_synced_entries_btn = $('div#forms div#project-options ul li#delete-synced-entries');\n        var delete_media_files_btn = $('div#forms div#project-options ul li#delete-media-files');\n        var backup_project_data_btn = $('div#forms div#project-options ul li#backup-project-data');\n        var restore_from_backup_btn = $('div#forms div#project-options ul li#restore-data-from-backup');\n        var export_data_to_csv_btn = $('div#forms div#project-options ul li#export-project-data-to-csv');\n        var btn_states = the_button_states;\n        var has_backup = window.localStorage.has_backup;\n        var project_name = window.localStorage.project_name;\n\n        //bind action bar buttons for this page\n        _bindActionBarBtns();\n\n        dom_list.empty();\n\n        for (i = 0, iLength = forms.length; i < iLength; i++) {\n\n            //if no entries for a form yet, disable the entry (aside from the top one) and hide icon\n            if (i > 0 && parseInt(forms[i].entries, 10) === 0) {\n\n                HTML += '<li data-icon=\"false\">';\n                HTML += '<a href=\"entries-list.html?form=' + forms[i]._id + '&name=' + forms[i].name + '&entry_key=&direction=forward\" class=\"ui-disabled\">' + forms[i].name;\n                HTML += '<p>' + forms[i].total_inputs + EC.Localise.getTranslation('questions') + '</p>';\n                HTML += '</a>';\n                HTML += '</li>';\n\n            } else {\n\n                //render an active button\n                HTML += '<li data-icon=\"ep-next-page\">';\n                HTML += '<a href=\"entries-list.html?form=' + forms[i]._id + '&name=' + forms[i].name + '&entry_key=&direction=forward&children=' + forms[i].entries + '\">' + forms[i].name;\n                HTML += '<span class=\"ui-li-count\">' + forms[i].entries;\n                HTML += '</span>';\n                HTML += '<p>' + forms[i].total_inputs + EC.Localise.getTranslation('questions') + '</p>';\n                HTML += '</a>';\n                HTML += '</li>';\n            }\n        }\n\n        //reset title in navbar\n        navbar_label.text(EC.Const.FORMS);\n\n        //add project name to header\n        header.text(project_name.trunc(EC.Const.PROJECT_NAME_MAX_LENGTH));\n\n        dom_list.append(HTML);\n\n        //page.page();\n\n        dom_list.listview('refresh');\n\n        //make this the current page\n        //$.mobile.changePage(page);\n\n        //init global forms object\n        EC.Utils.setForms(forms);\n\n        //remove form details from localStorage if any\n        window.localStorage.form_name = '';\n        window.localStorage.form_id = '';\n        window.localStorage.removeItem('primary_keys');\n        window.localStorage.removeItem('parent_path');\n\n        email_backup_btn.off().on('vclick', function (e) {\n            EC.Routing.changePage(EC.Const.EMAIL_BACKUP_VIEW);\n        });\n\n        download_remote_data_btn.off().on('vclick', function (e) {\n            EC.Routing.changePage(EC.Const.DOWNLOAD_VIEW);\n        });\n\n        //attach event to context menu to button unsync all synced entries. Toggle button state accordingly\n        if (btn_states.unsync_all_data === 0) {\n            unsync_all_entries_btn.addClass('ui-disabled');\n        } else {\n            unsync_all_entries_btn.removeClass('ui-disabled');\n        }\n        unsync_all_entries_btn.off().on('vclick', function (e) {\n            EC.Notification.askConfirm(EC.Localise.getTranslation('unsync_all_data'), EC.Localise.getTranslation('unsync_all_data'), 'EC.Entries.unsyncAllEntries');\n        });\n\n        //handler to delete project\n        delete_project_btn.off().on('vclick', function (e) {\n            EC.Notification.askConfirm(EC.Localise.getTranslation('delete_project'), EC.Localise.getTranslation('delete_project_confirm'), 'EC.Project.deleteProject');\n        });\n\n        //handler to delete/save all entries (if any, otherwise show as disabled)\n        if (btn_states.delete_all_entries === 0) {\n            delete_all_entries_btn.addClass('ui-disabled');\n            export_data_to_csv_btn.addClass('ui-disabled');\n        } else {\n            delete_all_entries_btn.removeClass('ui-disabled');\n            export_data_to_csv_btn.removeClass('ui-disabled');\n        }\n        delete_all_entries_btn.off().on('vclick', function (e) {\n\n            EC.Notification.askConfirm(EC.Localise.getTranslation('delete_all_entries'), EC.Localise.getTranslation('delete_all_entries_confirm'), 'EC.Entries.deleteAllEntries');\n\n        });\n\n        export_data_to_csv_btn.off().on('vclick', function (e) {\n            EC.Notification.askConfirm(EC.Localise.getTranslation('export_all_entries_to_csv'), EC.Localise.getTranslation('export_all_entries_to_csv_confirm'), 'EC.Entries.exportAllEntriesToCSV');\n        });\n\n        //handler to delete all the media files for this project (if any, otherwise disable)\n        if (btn_states.delete_media_files === 0) {\n            delete_media_files_btn.addClass('ui-disabled');\n        } else {\n            delete_media_files_btn.removeClass('ui-disabled');\n        }\n        delete_media_files_btn.off().on('vclick', function (e) {\n\n            EC.Notification.askConfirm(EC.Localise.getTranslation('delete_all_media'), EC.Localise.getTranslation('delete_all_media_confirm'), 'EC.Entries.deleteAllMedia');\n\n        });\n\n        //handler to delete all the synced entries for this project (if any, otherwise disable button)\n        if (btn_states.delete_synced_entries === 0) {\n            delete_synced_entries_btn.addClass('ui-disabled');\n        } else {\n            delete_synced_entries_btn.removeClass('ui-disabled');\n        }\n        delete_synced_entries_btn.off().on('vclick', function (e) {\n\n            EC.Notification.askConfirm(EC.Localise.getTranslation('delete_all_synced'), EC.Localise.getTranslation('delete_all_synced_confirm'), 'EC.Entries.deleteAllSynced');\n\n        });\n\n        //if there are any entries to backup, enable button\n        if (btn_states.delete_all_entries === 0) {\n            backup_project_data_btn.addClass('ui-disabled');\n        } else {\n            backup_project_data_btn.removeClass('ui-disabled');\n        }\n\n        backup_project_data_btn.off().on('vclick', function (e) {\n            EC.Notification.askConfirm(EC.Localise.getTranslation('backup_data'), EC.Localise.getTranslation('backup_data_confirm'), 'EC.Project.backupCurrentProject');\n        });\n\n        //enable -restore from backup- and -mail backup- buttons only if a backup file exists\n        if (has_backup) {\n            restore_from_backup_btn.removeClass('ui-disabled');\n            email_backup_btn.removeClass('ui-disabled');\n        } else {\n            restore_from_backup_btn.addClass('ui-disabled');\n            email_backup_btn.addClass('ui-disabled');\n        }\n\n        restore_from_backup_btn.off().on('vclick', function (e) {\n            EC.Notification.askConfirm(EC.Localise.getTranslation('restore_data'), EC.Localise.getTranslation('restore_data_confirm'), 'EC.Project.restoreFromBackup');\n        });\n\n        //hide restore backup buttons on IOS as redundant (backups on device are managed via iTunes)\n        //we still mail backups in some situations where it is not possible to upload data via wifi or mobile network\n        if (window.device) {\n            if (window.device.platform === EC.Const.IOS) {\n\n                restore_from_backup_btn.addClass('hidden');\n                //email_backup_btn.addClass('hidden');\n                //backup_project_data_btn.addClass('hidden');\n            }\n        }\n\n        //Localise\n        if (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n            EC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n        }\n\n        EC.Notification.hideProgressDialog();\n\n    };\n\n    return module;\n\n}(EC.Forms));\n","var EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = (function (module) {\n    'use strict';\n\n    var input;\n\n    module.getInputs = function () {\n        return this.inputs;\n    };\n\n    module.setInputs = function (the_inputs, the_has_jumps_flag, the_has_location_flag) {\n\n        this.inputs = the_inputs;\n        //set flag to indicate if this form has or not any jumps\n        window.localStorage.form_has_jumps = (the_has_jumps_flag) ? 1 : 0;\n        window.localStorage.form_has_location = (the_has_location_flag) ? 1 : 0;\n    };\n\n    module.getPrimaryKeyRefPosition = function () {\n\n        var i;\n        var iLenght = this.inputs.length;\n\n        //look for the position of the primary key\n        for (i = 0; i < iLenght; i++) {\n            if (parseInt(this.inputs[i].is_primary_key, 10) === 1) {\n                return this.inputs[i].position;\n            }\n        }\n    };\n\n    module.getJumpDestinationPosition = function (the_ref) {\n\n        var i;\n        var iLenght = this.inputs.length;\n        var ref = the_ref;\n\n        //look for the position of the specified ref\n        for (i = 0; i < iLenght; i++) {\n            if (ref === this.inputs[i].ref) {\n                return this.inputs[i].position;\n            }\n        }\n    };\n\n    module.getInputAt = function (the_position) {\n        return this.inputs[the_position - 1];\n    };\n\n    module.updateFormCompletion = function (the_position, the_length) {\n\n        var ratio = Math.ceil(100 * (the_position - 1) / the_length);\n        var percentage_bar = $('div.ui-grid-b.input-nav-tabs div.input-progress-bar div.progress.progress_tiny');\n        var percentage_txt = $('div.ui-grid-b.input-nav-tabs div.input-progress-bar span.form-completion-percent');\n\n        percentage_txt.text(ratio + '%');\n        percentage_bar.css('width', ratio + '%');\n    };\n\n    return module;\n\n}(EC.Inputs));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\"use strict\";\n\n\t\tmodule.backToBranchEntryValuesList = function() {\n\n\t\t\t//get hash from localStorage to navigate back to branch entry values list\n\t\t\tvar back_url = window.localStorage.branch_entry_values_url;\n\n\t\t\t//clear branch data cache\n\t\t\twindow.localStorage.removeItem(\"branch_current_position\");\n\t\t\twindow.localStorage.removeItem(\"branch_form_has_jumps\");\n\t\t\twindow.localStorage.removeItem(\"branch_form_name\");\n\t\t\twindow.localStorage.removeItem(\"branch_inputs_total\");\n\t\t\twindow.localStorage.removeItem(\"branch_inputs_trail\");\n\t\t\twindow.localStorage.removeItem(\"branch_inputs_values\");\n\t\t\twindow.localStorage.removeItem(\"branch_form_id\");\n\t\t\twindow.localStorage.removeItem(\"branch_edit_hash\");\n\t\t\twindow.localStorage.removeItem(\"branch_edit_key_value\");\n\t\t\twindow.localStorage.removeItem(\"branch_edit_type\");\n\t\t\t\n\t\t\t//clear navigation url\n\t\t\twindow.localStorage.removeItem(\"branch_entry_values_url\");\n\n\t\t\t//get branch entry values\n\t\t\tEC.Routing.changePage(back_url);\n\t\t\t\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Inputs));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\"use strict\";\n\n\t\tmodule.backToEntriesList = function() {\n\n\t\t\tvar cached_branch_entry_keys;\n\t\t\tvar i;\n\t\t\tvar iLength;\n\t\t\tvar has_cached = false;\n\t\t\tvar page = window.localStorage.back_nav_url;\n\n\t\t\t/*delete any cached branch entry not stored (main form not saved) BEFORE redirecting to index page\n\t\t\t * (if any)\n\t\t\t */\n\t\t\ttry {\n\n\t\t\t\tcached_branch_entry_keys = JSON.parse(window.localStorage.cached_branch_entry_keys);\n\n\t\t\t\t//if there is the cached_branch_entries, tirgger deletion if t∆here ia at least 1 element\n\t\t\t\tiLength = cached_branch_entry_keys.length;\n\t\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\t\tif (cached_branch_entry_keys[i].primary_keys.length > 0) {\n\n\t\t\t\t\t\thas_cached = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (has_cached) {\n\n\t\t\t\t\t//remove cached branch entries keys\n\t\t\t\t\twindow.localStorage.removeItem(\"cached_branch_entry_keys\");\n\n\t\t\t\t\t//delete any cached branch entry\n\t\t\t\t\tEC.Delete.deleteCachedBranchEntries();\n\t\t\t\t} else {\n\n\t\t\t\t\t//no primary keys cached, go straight back to index page\n\n\t\t\t\t\t//remove breadcrumb for navigation\n\n\t\t\t\t\tEC.Routing.changePage(page);\n\t\t\t\t}\n\n\t\t\t} catch(error) {\n\n\t\t\t\t//no object cached, go straight back to index page\n\t\t\t\tEC.Routing.changePage(page);\n\n\t\t\t}\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Inputs));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\"use strict\";\n\n\t\tmodule.backToEntryValuesList = function() {\n\n\t\t\tvar cached_branch_entry_keys;\n\t\t\tvar i;\n\t\t\tvar iLength;\n\t\t\tvar has_cached = false;\n\t\t\tvar page = window.localStorage.back_edit_nav_url;\n\t\t\tvar key_position = EC.Inputs.getPrimaryKeyRefPosition();\n\t\t\tvar breadcrumb_trail = JSON.parse(window.localStorage.getItem(\"breadcrumbs\"));\n\t\t\tvar parent_key = breadcrumb_trail[breadcrumb_trail.length - 1];\n\t\t\t//get value of primary key for this form\n\t\t\tvar key_value = EC.Inputs.getCachedInputValue(key_position).value;\n\n\t\t\t//save full breadcrumbs as path to parent node (node tree representation using adjacent list)\n\t\t\tvar parent_path = (breadcrumb_trail[0] === \"\") ? breadcrumb_trail.join(EC.Const.ENTRY_ROOT_PATH_SEPARATOR).substring(1) : breadcrumb_trail.join(EC.Const.ENTRY_ROOT_PATH_SEPARATOR);\n\n\t\t\t//if it is a nested form, keep track of its parent and save it in localStorage\n\t\t\tif (key_value !== parent_path) {\n\n\t\t\t\tvar parent_path_array = parent_path.split(EC.Const.ENTRY_ROOT_PATH_SEPARATOR);\n\t\t\t\tparent_path_array.pop();\n\t\t\t\twindow.localStorage.parent_path = parent_path_array.join(EC.Const.ENTRY_ROOT_PATH_SEPARATOR);\n\t\t\t}\n\n\t\t\t/*delete any cached branch entry not stored (main form not saved) BEFORE redirecting to index page\n\t\t\t * (if any)\n\t\t\t */\n\t\t\ttry {\n\n\t\t\t\tcached_branch_entry_keys = JSON.parse(window.localStorage.cached_branch_entry_keys);\n\n\t\t\t\t//if there is the cached_branch_entries, tirgger deletion if there ia at least 1 element\n\t\t\t\tiLength = cached_branch_entry_keys.length;\n\t\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\t\tif (cached_branch_entry_keys[i].primary_keys.length > 0) {\n\n\t\t\t\t\t\thas_cached = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (has_cached) {\n\n\t\t\t\t\t//remove cached branch entries keys\n\t\t\t\t\twindow.localStorage.removeItem(\"cached_branch_entry_keys\");\n\n\t\t\t\t\t//delete any cached branch entry\n\t\t\t\t\tEC.Delete.deleteCachedBranchEntries();\n\t\t\t\t} else {\n\n\t\t\t\t\t//no primary keys cached, go straight back to index page\n\n\t\t\t\t\t//remove breadcrumb for navigation\n\n\t\t\t\t\tEC.Routing.changePage(page);\n\t\t\t\t}\n\n\t\t\t} catch(error) {\n\n\t\t\t\t//no object cached, go straight back to index page\n\t\t\t\tEC.Routing.changePage(page);\n\n\t\t\t}\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Inputs));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\"use strict\";\n\n\t\tmodule.bindBackBtn = function(is_data_saved) {\n\n\t\t\tvar back_btn = $(\"div[data-role='header'] div[data-href='back-btn']\");\n\t\t\tback_btn.off().one('vclick', function(e) {\n\n\t\t\t\tif (is_data_saved) {\n\n\t\t\t\t\t//if user was navigating from a child from, send it back to child from list\n\t\t\t\t\tif (window.localStorage.is_child_form_nav) {\n\n\t\t\t\t\t\t//TODO: back to child entries list\n\t\t\t\t\t\tEC.Inputs.backToEntriesList();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//data saved, go back to entries list\n\t\t\t\t\t\tEC.Inputs.backToEntriesList();\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//if user was navigating from a child from, send it back to child from list\n\t\t\t\t\tif (window.localStorage.is_child_form_nav) {\n\n\t\t\t\t\t\t//TODO: back to child entries list\n\t\t\t\t\t\tEC.Inputs.backToEntriesList();\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t//data not saved, ask user confirmation\n\t\t\t\t\t\tEC.Notification.askConfirm(EC.Localise.getTranslation(\"exit\"), EC.Localise.getTranslation(\"exit_confirm\"), \"EC.Inputs.backToEntriesList\");\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Inputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\"use strict\";\n\n\t\tvar self;\n\t\tvar current_input_position;\n\t\tvar is_jump_found;\n\n\t\t/*\n\t\t * check if a selected value triggers a jump. If multiple jumps are true, the first triggered jump will win, according to the jump checking sequence\n\t\t */\n\t\tfunction _checkJumps(the_jumps, the_current_value) {\n\n\t\t\tvar jumps = the_jumps;\n\t\t\tvar i;\n\t\t\tvar iLength = jumps.length;\n\t\t\tvar destination_position;\n\t\t\tvar destination;\n\t\t\tvar current_value = the_current_value;\n\t\t\tvar inputs_length = self.inputs.length;\n\n\t\t\t//if not any jump conditions match, set destination to the next input as default\n\t\t\tdestination_position = current_input_position + 1;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\t//check if we jump always\n\t\t\t\tif (jumps[i].jump_when === EC.Const.JUMP_ALWAYS) {\n\n\t\t\t\t\tis_jump_found = true;\n\t\t\t\t\tdestination = jumps[i].jump_to;\n\t\t\t\t\tdestination_position = (destination === EC.Const.END_OF_FORM) ? inputs_length : self.getJumpDestinationPosition(destination);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t//check if we jump whan a value is not selected (not selected values are set to null for consistency)\n\t\t\t\t//TODO: check this\n\t\t\t\tif (jumps[i].jump_when === EC.Const.JUMP_FIELD_IS_BLANK && (current_value === null || current_value === EC.Const.NO_OPTION_SELECTED)) {\n\n\t\t\t\t\tis_jump_found = true;\n\t\t\t\t\tdestination = jumps[i].jump_to;\n\t\t\t\t\tdestination_position = (destination === EC.Const.END_OF_FORM) ? inputs_length : self.getJumpDestinationPosition(destination);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t//jump when the value IS: the jump is performed by index so the index of the <option> tag is to be checked against the \"jump_value\"\n\t\t\t\tif (jumps[i].jump_when === EC.Const.JUMP_VALUE_IS && current_value.toString() === jumps[i].jump_value.toString()) {\n\n\t\t\t\t\tis_jump_found = true;\n\t\t\t\t\tdestination = jumps[i].jump_to;\n\t\t\t\t\tdestination_position = (destination === EC.Const.END_OF_FORM) ? inputs_length : self.getJumpDestinationPosition(destination);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (jumps[i].jump_when === EC.Const.JUMP_VALUE_IS_NOT && current_value.toString() !== jumps[i].jump_value.toString()) {\n\n\t\t\t\t\tis_jump_found = true;\n\t\t\t\t\tdestination = jumps[i].jump_to;\n\t\t\t\t\tdestination_position = (destination === EC.Const.END_OF_FORM) ? inputs_length : self.getJumpDestinationPosition(destination);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//override current_input_position with the position of the input set by the jump (-1 because we are adding +1 later)\n\t\t\tcurrent_input_position = destination_position - 1;\n\n\t\t\treturn destination;\n\n\t\t}\n\n\t\tmodule.gotoNextPage = function(evt, the_current_value) {\n\n\t\t\tvar current_input;\n\t\t\tvar current_value = the_current_value;\n\t\t\tvar next_input;\n\t\t\tvar next_page;\n\t\t\tvar options;\n\t\t\tvar obj;\n\t\t\tvar destination;\n\t\t\tvar jumps;\n\t\t\tvar is_genkey_hidden = EC.Utils.isFormGenKeyHidden(parseInt(window.localStorage.form_id, 10));\n\t\t\tvar next_value;\n\t\t\tvar i;\n\t\t\tvar iLength;\n\t\t\tvar is_checkbox = false;\n\n\t\t\tself = this;\n\t\t\tcurrent_input_position = parseInt(window.localStorage.current_position, 10);\n\t\t\t\n\t\t\t/* DROPDOWN/RADIO*/\n\t\t\t//get index from object in the case of a dropdown/radio (object is like {label:\"<label>\", index:\"<value>\"})\n\t\t\tif (current_value.hasOwnProperty(\"index\")) {\n\t\t\t\tcurrent_value = current_value.index;\n\t\t\t}\n            \n            /* CHECKBOX*/\n\t\t\t//if current value is an array, we have checkbox values to parse and check each of them against jumps\n\t\t\tif (Array.isArray(current_value)) {\n\t\t\t\tis_checkbox = true;\n\t\t\t}\n\n\t\t\t//check if we have reached the end of the form\n\t\t\tif (current_input_position === self.inputs.length) {\n\t\t\t\tnext_page = EC.Const.INPUT_VIEWS_DIR + EC.Const.SAVE_CONFIRM_VIEW;\n\t\t\t} else {\n\n\t\t\t\t//check if the current input triggers a jump\n\t\t\t\tcurrent_input = self.getInputAt(current_input_position);\n\n\t\t\t\tif (parseInt(current_input.has_jump, 10) === 1) {\n\n\t\t\t\t\t//get jumps\n\t\t\t\t\tjumps = EC.Utils.parseJumpString(current_input.jumps);\n\n\t\t\t\t\t//if we have an arry of values (checkboxes) check each of them if it triggers a jump\n\t\t\t\t\tif (is_checkbox) {\n\n\t\t\t\t\t\tis_jump_found = false;\n\t\t\t\t\t\tiLength = current_value.length;\n\n\t\t\t\t\t\t//loop each selected value until the first jump is found (or no more elements to check against)\n\t\t\t\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\t\t\t\tdestination = _checkJumps(jumps, current_value[i].value);\n\t\t\t\t\t\t\tif (is_jump_found) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//single value\n\t\t\t\t\t\tdestination = _checkJumps(jumps, current_value);\n\n\t\t\t\t\t}\n\n\t\t\t\t}//if has jump\n\n\t\t\t\tif (destination === EC.Const.END_OF_FORM) {\n\t\t\t\t\tnext_page = EC.Const.INPUT_VIEWS_DIR + EC.Const.SAVE_CONFIRM_VIEW;\n\t\t\t\t} else {\n\t\t\t\t\tnext_input = self.getInputAt(current_input_position + 1);\n\n\t\t\t\t\t/*\n\t\t\t\t\t * if is_genkey_hidden = 1, the from creator decided to hide the auto genkey\n\t\t\t\t\t * The nasty form builder allows users to drag the primary key input fields to any position (lol)\n\t\t\t\t\t * therefore we have to test each input if it is a primary key field\n\t\t\t\t\t * We have to skip the next input (from the user) but add an entry to inputs_values, inputs_trail with the UUID\n\t\t\t\t\t *\n\t\t\t\t\t */\n\n\t\t\t\t\tif (is_genkey_hidden && next_input.is_primary_key === 1) {\n\n\t\t\t\t\t\t//add skipped genkey entry also in inputs_trail\n\t\t\t\t\t\tself.pushInputsTrail(next_input);\n\n\t\t\t\t\t\t//add an entry with UUID to inputs_values if we are entering a new entry\n\t\t\t\t\t\tnext_value = EC.Utils.getGenKey();\n\n\t\t\t\t\t\t//cache next value in localStorage\n\t\t\t\t\t\tself.setCachedInputValue(next_value, current_input_position + 1, next_input.type, next_input.is_primary_key);\n\n\t\t\t\t\t\t//go to the next  input AFTER the hidden primary key (if it exists, otherwise the save confirm page)\n\t\t\t\t\t\tnext_input = self.getInputAt(current_input_position + 2);\n\t\t\t\t\t\tif (!next_input) {\n\t\t\t\t\t\t\tnext_page = EC.Const.INPUT_VIEWS_DIR + EC.Const.SAVE_CONFIRM_VIEW;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//update current input position in session (store confirm screen will get a position = array.length)\n\t\t\t\t\t\twindow.localStorage.current_position = current_input_position + 2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t//update current input position in session (store confirm screen will get a position = array.length)\n\t\t\t\t\t\twindow.localStorage.current_position = current_input_position + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (next_input) {\n\t\t\t\t\t\tnext_page = EC.Const.INPUT_VIEWS_DIR + next_input.type + EC.Const.HTML_FILE_EXT;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tEC.Routing.changePage(next_page);\n\n\t\t\t//avoid events triggering multiple times\n\t\t\tevt.preventDefault();\n\n\t\t};\n\t\treturn module;\n\n\t}(EC.Inputs));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\"use strict\";\n\n\t\tmodule.gotoPrevPage = function(evt) {\n\n\t\t\tvar self = this;\n\t\t\tvar current_position = parseInt(window.localStorage.current_position, 10);\n\t\t\tvar inputs_trail = JSON.parse(window.localStorage.inputs_trail);\n\t\t\tvar prev_page;\n\t\t\tvar prev_input_position = parseInt(inputs_trail[inputs_trail.length - 1].position, 10);\n\t\t\tvar prev_input = self.getInputAt(prev_input_position);\n\t\t\tvar is_genkey_hidden = EC.Utils.isFormGenKeyHidden(window.localStorage.form_id);\n\n\t\t\t//skip prev input (from user) if it is a hidden auto genkey\n\t\t\tif (is_genkey_hidden && prev_input.is_primary_key === 1) {\n\n\t\t\t\tprev_input_position = inputs_trail[inputs_trail.length - 2].position;\n\t\t\t\tprev_input = EC.Inputs.getInputAt(prev_input_position);\n\n\t\t\t\t//update current input position in session (store confirm screen will get a position = array.length)\n\t\t\t\twindow.localStorage.current_position = current_position - 2;\n\n\t\t\t\t//remove last  entry from inputs_trail\n\t\t\t\tself.popInputsTrail();\n\n\t\t\t} else {\n\n\t\t\t\t//update current input position in session\n\t\t\t\twindow.localStorage.current_position = prev_input_position;\n\n\t\t\t}\n\n\t\t\t//remove last  entry from inputs_trail\n\t\t\tself.popInputsTrail();\n\n\t\t\tprev_page = EC.Const.INPUT_VIEWS_DIR + prev_input.type + EC.Const.HTML_FILE_EXT;\n\n\t\t\tEC.Routing.changePage(prev_page);\n\n\t\t\t//avoid events triggering multiple times\n\t\t\tevt.preventDefault();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Inputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\"use strict\";\n\n\t\tmodule.onNextBtnTapped = function(e, the_input) {\n\n\t\t\tvar self = this;\n\t\t\tvar wls = window.localStorage;\n\t\t\tvar edit_id = wls.edit_id || \"\";\n\t\t\tvar edit_type = wls.edit_type || \"\";\n\t\t\tvar input = the_input;\n\t\t\tvar current_value = self.getCurrentValue(input.type);\n\t\t\tvar current_position = parseInt(wls.current_position, 10);\n\t\t\tvar cached_value = EC.Inputs.getCachedInputValue(current_position);\n\t\t\tvar validation = self.validateValue(input, current_value, current_position);\n\n\t\t\t//back to same screen if invalid value\n\t\t\tif (!validation.is_valid) {\n\t\t\t\t\n\t\t\t\t//warn user about the type of error. IMP: validation.message comes localised already\n\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), validation.message);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//When editing, if the value of a field triggering a jump was changed, disable intermediate \"Store Edit\" button from now on\n\t\t\tif (wls.edit_mode && parseInt(input.has_jump, 10) === 1) {\n\t\t\t\tif (!self.valuesMatch(cached_value, current_value, input.type)) {\n\t\t\t\t\t//set flag as from now until saving the form, store edit from an intermediate screen is disabled\n\t\t\t\t\twls.has_new_jump_sequence = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//cache current value in localStorage\n\t\t\tself.setCachedInputValue(current_value, current_position, input.type, input.is_primary_key);\n\n\t\t\tself.pushInputsTrail(input);\n\t\t\t\n\t\t\t//remove flag that helps to handle back button when user is just dismissing barcode scanner\n\t\t\twindow.localStorage.removeItem('is_dismissing_barcode');\n\n\t\t\tself.gotoNextPage(e, current_value);\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Inputs));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\"use strict\";\n\n\t\tmodule.onPrevBtnTapped = function(e, the_input) {\n\n\t\t\tvar self = this;\n\t\t\tvar input = the_input;\n\t\t\tvar inputs_total = self.inputs.length;\n\t\t\tvar current_value = self.getCurrentValue(input.type);\n\t\t\tvar current_position = parseInt(window.localStorage.current_position, 10);\n\t\t\tvar cached_value = EC.Inputs.getCachedInputValue(current_position);\n\t\t\t\n\t\t\t//When editing, if the value of a field triggering a jump was changed, disable intermediate \"Store Edit\" button from now on\n\t\t\tif (window.localStorage.edit_mode && parseInt(input.has_jump,10) === 1) {\n\t\t\t\tif (!self.valuesMatch(cached_value, current_value, input.type)) {\n\t\t\t\t\t//set flag as from now until saving the form, store edit from an intermediate screen is disabled\n\t\t\t\t\twindow.localStorage.has_new_jump_sequence = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//check we are not coming back from #save-confirm page\n\t\t\tif (current_position <= inputs_total) {\n\t\t\t\t//cache current value in localStorage\n\t\t\t\tself.setCachedInputValue(current_value, current_position, input.type, input.is_primary_key);\n\t\t\t}\n\t\t\t\n\t\t\t//remove flag that helps to handle back button when user is just dismissing barcode scanner\n\t\t\twindow.localStorage.removeItem('is_dismissing_barcode');\n\n\t\t\tself.gotoPrevPage(e);\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Inputs));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\"use strict\";\n\n\t\tmodule.popInputsTrail = function() {\n\n\t\t\tvar inputs_trail;\n\n\t\t\ttry {\n\n\t\t\t\tinputs_trail = JSON.parse(window.localStorage.inputs_trail);\n\n\t\t\t\tinputs_trail.pop();\n\n\t\t\t\twindow.localStorage.inputs_trail = JSON.stringify(inputs_trail);\n\n\t\t\t} catch(error) {\n\t\t\t}\n\n\t\t};\n\t\t//popInputsTrail\n\t\treturn module;\n\n\t}(EC.Inputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\"use strict\";\n\n\t\tmodule.pushInputsTrail = function(the_input) {\n\n\t\t\tvar input = the_input;\n\n\t\t\tvar inputs_trail;\n\n\t\t\t//catch Chrome error `Uncaught SyntaxError: Unexpected end of input` when parsing empty content\n\t\t\ttry {\n\t\t\t\tinputs_trail = JSON.parse(window.localStorage.inputs_trail);\n\n\t\t\t} catch(error) {\n\n\t\t\t\t//Handle errors here\n\t\t\t\tinputs_trail = [];\n\n\t\t\t}\n\n\t\t\tinputs_trail.push({\n\t\t\t\tposition : input.position,\n\t\t\t\tlabel : input.label\n\n\t\t\t});\n\n\t\t\twindow.localStorage.inputs_trail = JSON.stringify(inputs_trail);\n\n\t\t};\n\t\t//pushInputsTrail\n\t\treturn module;\n\n\t}(EC.Inputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\"use strict\";\n\n\t\tmodule.spliceInputsTrail = function(the_position) {\n\n\t\t\tvar position = parseInt(the_position, 10);\n\t\t\tvar inputs_trail = JSON.parse(window.localStorage.inputs_trail);\n\t\t\tvar i;\n\t\t\tvar iLength = inputs_trail.length;\n\t\t\tvar index;\n\t\t\tvar how_many_to_remove;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\tif (parseInt(inputs_trail[i].position, 10) === position) {\n\n\t\t\t\t\tindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\thow_many_to_remove = iLength - index;\n\t\t\tinputs_trail.splice(index, how_many_to_remove);\n\t\t\twindow.localStorage.inputs_trail = JSON.stringify(inputs_trail);\n\n\t\t};\n\n\t\t//spliceInputsTrail\n\t\treturn module;\n\n\t}(EC.Inputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\n        \"use strict\";\n\n        module.prepareFeedback = function(the_status, the_entry_key) {\n\n            var self = this;\n            var status = the_status;\n            var page = EC.Const.INPUT_VIEWS_DIR + \"save-feedback.html\";\n            var primary_keys = JSON.parse(window.localStorage.primary_keys);\n            var back_nav_hash = window.localStorage.back_nav_url;\n            var back_nav_hash_parts;\n            var children;\n            var entries_totals = JSON.parse(window.localStorage.entries_totals);\n\n            self.entry_key = the_entry_key;\n\n            //prepare feedback based on status\n            if (status) {\n\n                this.message = \"Data save successfully!\";\n\n                back_nav_hash_parts = back_nav_hash.split(\"=\");\n                children = parseInt(back_nav_hash_parts[back_nav_hash_parts.length - 1], 10);\n\n                //increase children for this entry, update back nav hash and pagination object\n                back_nav_hash_parts[back_nav_hash_parts.length - 1] = children + 1;\n                back_nav_hash = back_nav_hash_parts.join(\"=\");\n                entries_totals[entries_totals.length - 1].entries_total = children + 1;\n\n                window.localStorage.back_nav_url = back_nav_hash;\n                window.localStorage.entries_totals = JSON.stringify(entries_totals);\n\n                //add last entry primary key to localStorage\n                primary_keys.push(self.entry_key);\n                window.localStorage.primary_keys = JSON.stringify(primary_keys);\n\n            } else {\n\n                this.message = \"Error saving data...please retry\";\n            }\n\n            EC.Routing.changePage(page);\n        };\n        //prepareFeedback\n\n        return module;\n\n    }(EC.Inputs));\n","/*global $, jQuery*/\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = (function (module) {\n    'use strict';\n\n    module.prepareFirstInput = function (the_first_input) {\n\n        var self = this;\n        var first_input_position = 1;\n        var back_nav_url;\n        var form_name = window.localStorage.form_name;\n        var form_id = window.localStorage.form_id;\n        var breadcrumbs = JSON.parse(window.localStorage.breadcrumbs);\n        var entry_key = breadcrumbs[breadcrumbs.length - 1];\n        var input = the_first_input;\n        var page = EC.Const.INPUT_VIEWS_DIR + input.type + EC.Const.HTML_FILE_EXT;\n        var back_btn = $('div[data-role=\"header\"] div[data-href=\"back-btn\"]');\n        var back_btn_label = $('div[data-role=\"header\"] div[data-href=\"back-btn\"] span.form-name');\n        var entries_totals = JSON.parse(window.localStorage.entries_totals);\n        var children = entries_totals[entries_totals.length - 1].entries_total;\n        var is_genkey_hidden = EC.Utils.isFormGenKeyHidden(form_id);\n\n\n        //start watching for device position if the form has got a location field\n        if (parseInt(window.localStorage.form_has_location, 10) === 1) {\n            window.localStorage.watch_position = navigator.geolocation.watchPosition(function (position) {\n                console.log(position);\n            }, function (error) {\n                console.log(error);\n            }, {\n                maximumAge: 0,\n                timeout: 300000,\n                enableHighAccuracy: true\n            });\n        }\n\n        //reset entry key\n        self.entry_key = null;\n\n        back_btn_label.text(form_name.trunc(EC.Const.FORM_NAME_MAX_LENGTH) + ' entries');\n\n        //set array to keep track of input navigation (get pre-built one when editing)\n        if (!window.localStorage.edit_mode) {\n            window.localStorage.inputs_trail = [];\n        } else {\n            //update inputs trail to remove all the elements past the current edit position\n            EC.Inputs.spliceInputsTrail(window.localStorage.edit_position);\n        }\n\n        //set hash to be used to list these entries when loading entries-list.html after a save/exit action\n        if (!window.localStorage.edit_mode) {\n            back_nav_url = 'entries-list.html';\n            back_nav_url += '?form=' + form_id;\n            back_nav_url += '&name=' + form_name;\n            back_nav_url += '&entry_key=' + entry_key;\n            back_nav_url += '&direction=' + EC.Const.ADDING;\n            back_nav_url += '&children=' + children;\n\n            window.localStorage.back_nav_url = back_nav_url;\n        }\n\n        /* Update current position if edit_mode is active. When editing, the user can start editing the form from any input\n         * not just the first one. In that case we have to update the first position to be the selected input position\n         * not 1\n         */\n        window.localStorage.current_position = (window.localStorage.edit_mode) ? window.localStorage.edit_position : first_input_position;\n\n        /*\n         * If if the genkey hidden flag is set to 1 and the input is a primary key input, do not render this input on screen but:\n         *\n         * - just cache it with an auto genkey in localStorage if we are entering a new entry\n         * - do nothing if we are editing, ad the inputs_values array will be set already (it is set when listing the entry values)\n         *\n         */\n\n        if (is_genkey_hidden === 1 && input.is_primary_key === 1) {\n\n            //skip input\n            window.localStorage.current_position = first_input_position + 1;\n\n            //if we are entering a new entry, add an auto generated key in input_values[]\n            if (!window.localStorage.edit_mode) {\n                window.localStorage.inputs_values = JSON.stringify([{\n                    _id: '',\n                    type: '',\n                    value: EC.Utils.getGenKey(),\n                    position: 1,\n                    is_primary_key: 1\n                }]);\n\n            }\n\n            //get next input to set page we have to go to (first_input_position is equal to current_position-1, so...)\n            input = self.inputs[first_input_position];\n            page = EC.Const.INPUT_VIEWS_DIR + input.type + EC.Const.HTML_FILE_EXT;\n\n        }\n\n        //remove branch flags and objects from localStorage\n        window.localStorage.removeItem('cached_branch_entry_keys');\n        window.localStorage.removeItem('stored_branch_entry_keys');\n        window.localStorage.removeItem('branch_current_position');\n        window.localStorage.removeItem('branch_form');\n        window.localStorage.removeItem('branch_form_has_jumps');\n        window.localStorage.removeItem('branch_form_id');\n        window.localStorage.removeItem('branch_form_name');\n        window.localStorage.removeItem('branch_inputs_total');\n        window.localStorage.removeItem('branch_primary_keys');\n        window.localStorage.removeItem('branch_edit_id');\n        window.localStorage.removeItem('branch_edit_mode');\n        window.localStorage.removeItem('branch_edit_position');\n        window.localStorage.removeItem('branch_inputs_trail');\n        window.localStorage.removeItem('branch_inputs_values');\n\n        //get first input view\n        EC.Routing.changePage(page);\n\n    };\n\n    return module;\n\n}(EC.Inputs));\n","/*global $, jQuery*/\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = (function (module) {\n    'use strict';\n\n    module.renderFeedbackView = function () {\n\n        var self = this;\n        var form_id = window.localStorage.form_id;\n        var form_name = window.localStorage.form_name;\n        var form_tree = EC.Utils.getParentAndChildForms(form_id);\n        var upload_btn = $('div#feedback div#input-feedback div#upload');\n        var add_another_entry_btn = $('div#feedback div#input-feedback div#add-entry-current-form');\n        var list_entries_btn = $('div#feedback div#input-feedback div#list-entries-current-form');\n        var add_child_btn = $('div#feedback div#input-feedback div#add-child-entry');\n        var back_btn_label = $('div[data-role=\"header\"] div[data-href=\"back-btn\"] span.form-name');\n\n        //stop background watch position if any\n        window.navigator.geolocation.clearWatch(window.localStorage.watch_position);\n        window.localStorage.form_has_location = 0;\n\n        back_btn_label.text(form_name.trunc(EC.Const.FORM_NAME_MAX_LENGTH) + ' entries');\n\n        //handle back button with no alert on this page\n        self.bindBackBtn(true);\n\n        //remove navigation flags from localStorage\n        window.localStorage.removeItem('edit_id');\n        window.localStorage.removeItem('edit_mode');\n        window.localStorage.removeItem('edit_position');\n        window.localStorage.removeItem('inputs_trail');\n        window.localStorage.removeItem('inputs_values');\n        window.localStorage.removeItem('current_position');\n        //clear cached branch entry keys\n        window.localStorage.removeItem('cached_branch_entry_keys');\n\n        //Set feedback message\n        $('p#message').text(this.message);\n\n        //Set text for 'add another entry' button\n        add_another_entry_btn.find('span.entry').text(form_name);\n\n        upload_btn.off().one('vclick', function () {\n            EC.Routing.changePage(EC.Const.UPLOAD_VIEW);\n        });\n\n        add_another_entry_btn.off().one('vclick', function (e) {\n            EC.Entries.addEntry();\n        });\n\n        list_entries_btn.off().one('vclick', function (e) {\n            //if user was navigating from a child from, send it back to child from list\n            if (window.localStorage.is_child_form_nav) {\n\n                //TODO: back to child entries list\n                EC.Inputs.backToEntriesList();\n            } else {\n                //data saved, go back to entries list\n                EC.Inputs.backToEntriesList();\n            }\n        });\n\n        //set text for list entries\n        list_entries_btn.find('span.form-name-inline').text(form_name);\n\n        //Set text for 'add child to form (if there is a child form)\n        if (form_tree.cname !== '') {\n\n            //show add child to current for button\n            add_child_btn.find('span').text(EC.Localise.getTranslation('add') + form_tree.cname + EC.Localise.getTranslation('to') + form_name);\n\n            //show add child button\n            add_child_btn.removeClass('hidden');\n\n            //Add a child entry btn\n            add_child_btn.one('vclick', function (e) {\n\n                var breadcrumb_trail;\n                var entries_totals;\n\n                //Set up form values to add a child form for the current form\n                window.localStorage.form_name = form_tree.cname;\n                window.localStorage.form_id = form_tree.child;\n\n                //add current entry key to breadcrumbs\n                breadcrumb_trail = JSON.parse(window.localStorage.breadcrumbs);\n                //TODO: where entry_key comes from?\n                breadcrumb_trail.push(self.entry_key);\n                window.localStorage.breadcrumbs = JSON.stringify(breadcrumb_trail);\n\n                //add current entry to pagination object\n                entries_totals = JSON.parse(window.localStorage.entries_totals);\n                entries_totals.push({\n                    form: form_tree.cname,\n                    entry_key: self.entry_key,\n                    entries_total: 1\n                });\n\n                window.localStorage.entries_totals = JSON.stringify(entries_totals);\n\n                EC.Entries.addEntry();\n            });\n        }\n        EC.Notification.hideProgressDialog();\n    };\n\n    return module;\n\n}(EC.Inputs));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function (module) {\n    \"use strict\";\n\n    /**\n     * @method renderInput This method is called by JQM page events each time a new page (input type) is requested\n     * The application show a single input per page: this method prepare the DOM common to all inputs  and then calls the\n     * appropriate view based on the input type\n     *\n     * @param {Object} the_input : a single input object like:\n     *\n     * {input object here}\n     *\n     */\n\n    module.renderInput = function (the_input) {\n\n        var self = this;\n        var wls = window.localStorage;\n        var input = the_input;\n        var current_value;\n        var page = EC.Const.INPUT_VIEWS_DIR + input.type;\n        var current_position = parseInt(wls.current_position, 10);\n        var cached_value = self.getCachedInputValue(current_position);\n        var breadcrumb_trail = JSON.parse(wls.getItem(\"breadcrumbs\"));\n        var back_btn = $(\"div[data-role='header'] div[data-href='back-btn']\");\n        var back_btn_label = $(\"div[data-role='header'] div[data-href='back-btn'] span.form-name\");\n        var parent_key;\n        var rows_to_save = [];\n        var prev_btn = $('div.input-nav-tabs div.ui-block-a.input-prev-btn');\n        var next_btn = $('div.input-nav-tabs div.ui-block-c.input-next-btn');\n        var form_name = wls.form_name;\n        var form_id = wls.form_id;\n        var inputs_total = self.inputs.length;\n        var is_genkey_hidden = EC.Utils.isFormGenKeyHidden(form_id);\n        var inputs_values;\n        var first_input;\n        var is_prev_button_hidden = false;\n\n        back_btn.off().on('vclick', function (e) {\n\n            //when editing, the back button takes to the entry values list\n            if (wls.edit_mode) {\n\n                if (wls.has_new_jump_sequence) {\n                    EC.Notification.askConfirm(EC.Localise.getTranslation(\"leaving_current_form\"), \"Are you sure? \\nData will NOT be saved\", \"EC.Inputs.backToEntryValuesList\", false, input, false);\n\n                } else {\n\n                    //check if user is leaving after modifying a jump and neither \"Store Edit\", \"prev\" or \"next\" button were tapped\n                    if (parseInt(input.has_jump, 10) === 1) {\n\n                        current_value = EC.Inputs.getCurrentValue(input.type);\n\n                        if (!self.valuesMatch(cached_value, current_value, input.type)) {\n\n                            EC.Notification.askConfirm(EC.Localise.getTranslation(\"leaving_current_form\"), EC.Localise.getTranslation(\"exit_confirm\"), \"EC.Inputs.backToEntryValuesList\", false, input, false);\n                        } else {\n\n                            EC.Notification.askConfirm(EC.Localise.getTranslation(\"leaving_current_form\"), EC.Localise.getTranslation(\"save_before_leave\"), \"EC.Inputs.backToEntryValuesList\", true, input, false);\n                        }\n                    } else {\n                        EC.Notification.askConfirm(EC.Localise.getTranslation(\"leaving_current_form\"), EC.Localise.getTranslation(\"save_before_leave\"), \"EC.Inputs.backToEntryValuesList\", true, input, false);\n                    }\n                }\n\n            } else {\n                //not editing, go to entries list\n                EC.Notification.askConfirm(EC.Localise.getTranslation(\"leaving_current_form\"), EC.Localise.getTranslation(\"save_before_leave\"), \"EC.Inputs.backToEntriesList\", true, input, false);\n            }\n\n        });\n\n        back_btn_label.text(form_name.trunc(EC.Const.FORM_NAME_MAX_LENGTH) + EC.Localise.getTranslation(\"entries\"));\n\n        //get parent key based on the user navigating, editing or adding from child list\n        if (wls.edit_mode) {\n            parent_key = breadcrumb_trail[breadcrumb_trail.length - 2];\n        } else {\n            parent_key = breadcrumb_trail[breadcrumb_trail.length - 1];\n        }\n\n        //reset button visibility\n        $(prev_btn, next_btn).removeClass(\"invisible\");\n\n        //show parent key in the top bar (if any)\n        if (parent_key !== \"\" && parent_key !== undefined) {\n            $('div.parent-key div.ui-block-a span.ui-btn-active span.ui-btn-inner').text(wls.form_name + ' for ' + parent_key);\n        } else {\n            $('div.parent-key div.ui-block-a span.ui-btn-active span.ui-btn-inner').text(wls.form_name);\n        }\n\n        //TODO :do we need to -> skip input rendering if it is the preloader screen\n        if (current_position !== 0) {\n\n            //check if we have a cached value for this input in session\n            current_value = self.getCachedInputValue(current_position).value;\n\n            //check it the value is _skipp3d_ reserved keyword\n            current_value = (current_value === EC.Const.SKIPPED) ? \"\" : current_value;\n\n            //if the input is either photo, audio or video, if no default value is available we pass an empty object {cached: \"\", stored: \"\"}\n            if (input.type === EC.Const.PHOTO || input.type === EC.Const.AUDIO || input.type === EC.Const.VIDEO) {\n\n                self.renderInputView(input, current_value || {\n                    cached: \"\",\n                    stored: \"\"\n                });\n\n            } else {\n\n                //for normal inputs, render view passing the default value (empty if not set) if no input value is cached\n                self.renderInputView(input, current_value || input.default_value);\n            }\n        }\n\n        //set next button to go to next input (if any)\n        if (current_position <= inputs_total) {\n            //Next button handler\n            next_btn.off().on('vclick', function (e) {\n                self.onNextBtnTapped(e, input, self);\n            });\n        }\n\n        //set previous button (if any)\n        if (current_position - 1 > 0) {\n\n            //check if the first input is a hidden genkey, in that case do not show prev button\n            if (current_position === 2) {\n\n                inputs_values = JSON.parse(wls.inputs_values);\n                first_input = inputs_values[0];\n\n                if (first_input.is_primary_key === 1 && is_genkey_hidden === 1) {\n                    //hide prev button for first input of the form\n                    prev_btn.addClass(\"invisible\");\n                    is_prev_button_hidden = true;\n                }\n            }\n\n            //bind vclick event only if the button is not hidden\n            if (!is_prev_button_hidden) {\n                //handler for prev button, showing prev input\n                prev_btn.off().on('vclick', function (e) {\n                    self.onPrevBtnTapped(e, input);\n                });\n            }\n\n        } else {\n\n            //hide prev button for first input of the form\n            prev_btn.addClass(\"invisible\");\n\n            //reset inputs_trail in session\n            wls.removeItem('inputs_trail');\n        }\n\n        //show store edit button if we are in \"editing mode\" and bind it to callback\n        if (wls.edit_mode) {\n\n            $('div.store-edit').removeClass('hidden');\n\n            /* Disable store edit button when a new jump sequence was triggered\n             * by the user making a change to a input field with a jump\n             * User is then forced to go through the form until it ends to follow the new jumps sequence\n             */\n            if (wls.has_new_jump_sequence) {\n                $('div.store-edit').addClass('ui-disabled');\n            } else {\n                $('div.store-edit').removeClass('ui-disabled');\n            }\n\n            //bind events with on(), as we need to submit again if the input does not validate successfully\n            $('div.store-edit').off().on('vclick', function () {\n\n                var cached_value;\n\n                if (parseInt(input.has_jump, 10) === 1) {\n\n                    current_position = wls.current_position;\n                    cached_value = EC.Inputs.getCachedInputValue(current_position);\n\n                    //TODO: do validation first??? or is it done when calling prepareStoreEdit?\n\n                    /*\n                     * if we are making a change to a field triggering a jump\n                     * ask confirmation to user he will have to complete the whole form\n                     */\n\n                    if (!self.valuesMatch(cached_value, current_value, input.type)) {\n\n                        //disable intermediate \"store edit\" button\n                        //\t$('div.store-edit').addClass('ui-disabled');\n\n                        //TODO:\n                        //Alert user there is the need to complete the whole form\n                        EC.Notification.showAlert(EC.Localise.getTranslation(\"warning\"), EC.Localise.getTranslation(\"edited_jump\"));\n\n                        //set flag as from now until saving the form, store edit from an intermediate screen is disabled\n                        wls.has_new_jump_sequence = 1;\n\n                    } else {\n\n                        wls.removeItem(\"has_new_jump_sequence\");\n                        self.prepareStoreEdit(current_position, input, self);\n                    }\n\n                } else {\n                    self.prepareStoreEdit(current_position, input, self);\n                }\n\n            });\n\n        }\n        else {\n            $('div.store-edit').addClass('hidden');\n        }\n\n        //update completion percentage and bar for this form\n        self.updateFormCompletion(current_position, inputs_total);\n\n    };\n    //renderInput\n\n    return module;\n\n}(EC.Inputs));\n","/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = (function (module) {\n    'use strict';\n\n    var branchFormCacheReady;\n    var branchEntriesCacheReady;\n    var branch_input;\n    var count;\n    var branch_form;\n\n    module.renderInputView = function (the_input, the_value) {\n\n        var input = the_input;\n        var value = the_value;\n        var self = this;\n        var offset = 0;\n        var project_id = window.localStorage.project_id;\n        var parent_key_position;\n        var hierarchy_entry_key_value;\n\n        //render layout based on the input type\n        switch (input.type) {\n\n            case EC.Const.TEXT:\n\n                EC.InputTypes.text(value, input);\n                break;\n\n            case EC.Const.TEXTAREA:\n\n                EC.InputTypes.textarea(value, input);\n                break;\n\n            case EC.Const.INTEGER:\n\n                EC.InputTypes.integer(value, input);\n                break;\n\n            case EC.Const.DECIMAL:\n\n                EC.InputTypes.decimal(value, input);\n                break;\n\n            case EC.Const.DATE:\n\n                EC.InputTypes.date(value, input);\n                break;\n\n            case EC.Const.TIME:\n\n                EC.InputTypes.time(value, input);\n                break;\n\n            case EC.Const.RADIO:\n\n                EC.InputTypes.radio(value, input);\n                break;\n\n            case EC.Const.CHECKBOX:\n\n                EC.InputTypes.checkbox(value, input);\n                break;\n\n            case EC.Const.DROPDOWN:\n\n                EC.InputTypes.dropdown(value, input);\n                break;\n\n            case EC.Const.BARCODE:\n\n                EC.InputTypes.barcode(value, input);\n                break;\n\n            case EC.Const.LOCATION:\n\n                EC.InputTypes.location(value, input);\n                break;\n\n            case EC.Const.PHOTO:\n\n                EC.InputTypes.photo(value, input);\n                break;\n\n            //deal with audio recording\n            case EC.Const.AUDIO:\n\n                EC.InputTypes.audio(value, input);\n                break;\n\n            case EC.Const.VIDEO:\n\n                EC.InputTypes.video(value, input);\n                break;\n\n            case EC.Const.BRANCH:\n\n                //if we are opening a branch form, cache inputs\n                if (!window.localStorage.back_from_branch) {\n\n                    //cache inputs in localStorage (to have them ready when coming back from branch form)\n                    window.localStorage.inputs = JSON.stringify(self.inputs);\n                } else {\n\n                    //back from a branch, remove flag\n                    window.localStorage.removeItem('back_from_branch');\n                }\n\n                //if loading a branch input, we set two deferred objects to know when the branch form and its entries are BOTH cached in LocalStorage, as SQLite queries are async\n                branchFormCacheReady = $.Deferred();\n                branchEntriesCacheReady = $.Deferred();\n\n                //For branch inputs only: when BOTH async queries are done, render AddBranch page\n                $.when(branchFormCacheReady, branchEntriesCacheReady).then(function () {\n\n                    //models ready, update UI\n                    console.log('Branch cache ready');\n                    EC.InputTypes.addBranch(count, branch_input);\n\n                });\n\n                /* hierarchy_entry_key_value is the current value of the primary key for the form we want to enter branches to\n                 * we need it as we need to link the branch entries to a single main form entry (like it is its parent)\n                 */\n                parent_key_position = EC.Inputs.getPrimaryKeyRefPosition();\n                hierarchy_entry_key_value = EC.Inputs.getMainFormCurrentKeyValue(parent_key_position);\n\n                /*\n                 * Trigger 2 database queries and use a deferred object to show the AddBranch page when tehy are BOTH completed\n                 */\n\n                //get branch count  BEFORE rendering AddBranch\n                $.when(EC.Select.getCountBranchEntries(input, hierarchy_entry_key_value, project_id, offset)).then(function (the_count, the_input) {\n\n                    branch_input = the_input;\n                    count = the_count;\n\n                    branchEntriesCacheReady.resolve();\n                    console.log('branchEntriesCacheReady called');\n\n                });\n\n                //get branch form details and cache them BEFORE rendering AddBranch\n                $.when(EC.Select.getBranchFormDetails(input, value, project_id)).then(function (the_branch_form) {\n\n                    branch_form = the_branch_form;\n\n                    window.localStorage.branch_form = JSON.stringify(branch_form);\n\n                    branchFormCacheReady.resolve();\n                    console.log('branchFormCacheReady called');\n\n                });\n\n                break;\n\n        }//switch\n\n        //remove progress dialog (triggered when loading inputs.html)\n        //for 'location' inputs, skip this as we are hiding ti from the location view\n        if (input.type !== EC.Const.LOCATION) {\n            if (window.google) {\n                //clear any events related to the google maps object\n                google.maps.event.clearListeners(EC.DevicePosition.map);\n            }\n            EC.Notification.hideProgressDialog();\n        }\n    };\n\n    return module;\n\n}(EC.Inputs));\n","/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = (function (module) {\n    'use strict';\n\n    module.renderSaveConfirmView = function () {\n\n        var self = this;\n        var prev_btn = $('div#save-confirm div.ui-block-a.input-prev-btn');\n        var store_btn = $('div#save-confirm div#input-save-confirm div#store');\n        var store_edit_btn = $('div.store-edit');\n        var back_btn_label = $('div[data-role=\"header\"] div[data-href=\"back-btn\"] span.form-name');\n        var inputs_total = self.inputs.length;\n        var breadcrumb_trail = JSON.parse(window.localStorage.getItem('breadcrumbs'));\n        var form_name = window.localStorage.form_name;\n        var parent_key;\n\n\n\n        //get parent key based on the user navigating or editing\n        if (window.localStorage.edit_mode) {\n            parent_key = breadcrumb_trail[breadcrumb_trail.length - 2];\n        } else {\n            parent_key = breadcrumb_trail[breadcrumb_trail.length - 1];\n        }\n\n        //show parent key in the top bar (if any)\n        if (parent_key !== '' && parent_key !== undefined) {\n            $('div.parent-key div.ui-block-a span.ui-btn-active span.ui-btn-inner').text(window.localStorage.form_name + ' for ' + parent_key);\n        } else {\n            $('div.parent-key div.ui-block-a span.ui-btn-active span.ui-btn-inner').text(window.localStorage.form_name);\n        }\n\n        back_btn_label.text(form_name.trunc(EC.Const.FORM_NAME_MAX_LENGTH) + ' entries');\n\n        self.bindBackBtn(false);\n\n        //reset back button visibility\n        prev_btn.removeClass('invisible');\n\n        //handler for prev button, showing prev input\n        prev_btn.off().on('vclick', function (e) {\n            self.gotoPrevPage(e);\n        });\n\n        //show 'store' or 'store edit' button based on where we are editing or adding a new entry\n        if (window.localStorage.edit_mode) {\n\n            store_btn.hide();\n\n            //enable/show store edit button (if the form has jumps it got disabled)\n            $('div.store-edit').removeClass('ui-disabled hidden');\n\n            //bind event with one() to enforce a single submit\n            store_edit_btn.off().one('vclick', function (e) {\n\n                EC.Notification.showProgressDialog();\n                self.onStoreValues();\n            });\n\n        } else {\n\n            store_btn.show();\n\n            //hide store edit button\n            $('div.store-edit').addClass('hidden');\n\n            //bind event with one() to enforce a single submit\n            store_btn.off().one('vclick', function (e) {\n\n                EC.Notification.showProgressDialog();\n                self.onStoreValues();\n            });\n        }\n\n        //update completion percentage and bar for this form\n        self.updateFormCompletion(inputs_total + 1, inputs_total);\n\n    };\n\n\n    return module;\n\n}(EC.Inputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device*/\n\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\"use strict\";\n\n\t\t/**\n\t\t * @method renderStoreEditFeedback Show feedback after an edit action and redirect the entries-list page\n\t\t * @param {Object} is_positive\n\t\t */\n\t\tmodule.renderStoreEditFeedback = function(is_positive) {\n\n\t\t\tEC.Notification.hideProgressDialog();\n\n\t\t\tif (is_positive) {\n\n\t\t\t\tEC.Notification.showToast(EC.Localise.getTranslation(\"edit_saved\"), \"short\");\n\n\t\t\t\twindow.localStorage.removeItem(\"edit_hash\");\n\t\t\t\twindow.localStorage.removeItem(\"edit_id\");\n\t\t\t\twindow.localStorage.removeItem(\"edit_mode\");\n\t\t\t\twindow.localStorage.removeItem(\"edit_position\");\n\t\t\t\twindow.localStorage.removeItem(\"edit_type\");\n\t\t\t\twindow.localStorage.removeItem(\"edit_key_value\");\n\n\t\t\t\t//remove flag that disable store edit from an intermediate screen\n\t\t\t\twindow.localStorage.removeItem(\"has_new_jump_sequence\");\n\n\t\t\t\t//go back to entries-list page using cached back navigation url\n\t\t\t\tEC.Routing.changePage(window.localStorage.back_nav_url);\n\t\t\t}\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Inputs));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\"use strict\";\n\n\t\t/**\n\t\t *  @method amendSkippedValues. Check the inputs_trail[] against inputs_values[]\n\t\t *  inputs_trail[] contains the inputs the user actually navigated to by jumps\n\t\t *  inputs_values[] contains all the values for all the inputs in a form, from start to finish\n\t\t *  Skipped inputs (by a jump) are null elements in inputs_values[], so they are marked as \"skipped\" by setting their value as _skipp3d_, a custom reserved word\n\t\t *  If the primary key for the form is auto generated and hidden, it will be in input_values[] but not in inputs_trail, add it manually\n\t\t *  inputs_values[] is then cached to locaStorage after being amended\n\t\t */\n\t\tmodule.amendSkippedValues = function() {\n\t\t\t\n\t\t\tvar wls = window.localStorage;\n\t\t\tvar i;\n\t\t\tvar j;\n\t\t\tvar iLength;\n\t\t\tvar jLength;\n\t\t\tvar max_skipped_position;\n\t\t\tvar inputs_trail = [];\n\t\t\tvar inputs_values = [];\n\t\t\tvar is_found;\n\t\t\tvar is_genkey_hidden = EC.Utils.isFormGenKeyHidden();\n\n\t\t\tinputs_trail = JSON.parse(wls.inputs_trail);\n\t\t\tinputs_values = JSON.parse(wls.inputs_values);\n\n\t\t\tiLength = inputs_values.length;\n\t\t\tjLength = inputs_trail.length;\n\n\t\t\tmax_skipped_position = inputs_trail[inputs_trail.length - 1].position;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {//for each input in inputs_values\n\n\t\t\t\tis_found = false;\n\n\t\t\t\t//jumps can generate null values in the input_values array (when entering a new entry)\n\t\t\t\tif (inputs_values[i] === null) {\n\t\t\t\t\tis_found = true;\n\t\t\t\t\t// inputs_values[i] = {\n\t\t\t\t\t\t// value : EC.Const.SKIPPED\n\t\t\t\t\t// };\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( j = 0; j < jLength; j++) {//for each input in inputs_trail\n\n\t\t\t\t\t\t//check if the input values is in the input trail array OR the input value is a hidden primary key value. In both case, the value needs to be saved\n\t\t\t\t\t\tif (parseInt(inputs_values[i].position, 10) === inputs_trail[j].position || (is_genkey_hidden === 1 && parseInt(inputs_values[i].is_primary_key, 10) === 1 )) {\n\n\t\t\t\t\t\t\tis_found = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}// for each inputs_trail\n\t\t\t\t}\n\n\t\t\t\t//not found values (and null values)\n\t\t\t\t// TODO: why was I also checking for inputs_values[i].position < max_skipped_position???\n\t\t\t\tif (!is_found) {\n\t\t\t\t\tinputs_values[i].value = EC.Const.SKIPPED;\n\t\t\t\t}\n\n\t\t\t}//for each inputs_values\n\n\t\t\t//store the amended values in localStorage for saving\n\t\t\twls.inputs_values = JSON.stringify(inputs_values);\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Inputs));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\"use strict\";\n\n\t\tmodule.buildRows = function(the_filenameToTimestamp) {\n\n\t\t\tvar self = this;\n\t\t\tvar i;\n\t\t\tvar input;\n\t\t\tvar value_obj;\n\t\t\tvar value;\n\t\t\tvar _id;\n\t\t\tvar ref;\n\t\t\tvar rows = [];\n\t\t\tvar iLength = EC.Inputs.inputs.length;\n\t\t\tvar key_position = EC.Inputs.getPrimaryKeyRefPosition();\n\t\t\tvar parts;\n\t\t\tvar filename;\n\t\t\tvar filename_parts;\n\t\t\tvar extension;\n\t\t\tvar form_name = window.localStorage.form_name;\n\t\t\tvar uuid = EC.Utils.getPhoneUUID();\n\t\t\tvar form_id = window.localStorage.form_id;\n\t\t\tvar created_on = EC.Utils.getTimestamp();\n\t\t\tvar ios_filenames = the_filenameToTimestamp;\n\t\t\tvar timestamp;\n\n\t\t\t//get parent key value for the current form\n\t\t\tvar current_input_position = parseInt(window.localStorage.current_position, 10);\n\t\t\tvar breadcrumb_trail = JSON.parse(window.localStorage.getItem(\"breadcrumbs\"));\n\t\t\tvar parent_key = breadcrumb_trail[breadcrumb_trail.length - 1];\n\n\t\t\t//save full breadcrumbs as path to parent node (node tree representation using adjacent list)\n\t\t\tvar parent_path = (breadcrumb_trail[0] === \"\") ? breadcrumb_trail.join(EC.Const.ENTRY_ROOT_PATH_SEPARATOR).substring(1) : breadcrumb_trail.join(EC.Const.ENTRY_ROOT_PATH_SEPARATOR);\n\n\t\t\t//get value of primary key for this form\n\t\t\tvar key_value = EC.Inputs.getCachedInputValue(key_position).value;\n\n\t\t\tvar branch_entries;\n\n\t\t\t//build rows to be saved - the text value for each input is saved in an array with corresponding indexes\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\t//get current value details\n\t\t\t\tinput = EC.Inputs.inputs[i];\n\t\t\t\tvalue_obj = self.getCachedInputValue(input.position);\n\n\t\t\t\t//save cached value OR \"\" when input_values not found...that should never happen?\n\t\t\t\tvalue = value_obj.value || \"\";\n\n\t\t\t\t//_id is set only when we are editing, it is the _id of the current row in the database which will be updated\n\t\t\t\t_id = value_obj._id;\n\n\t\t\t\t//deal with media types to save the correct value (full path uri)\n\t\t\t\tif (input.type === EC.Const.PHOTO || input.type === EC.Const.VIDEO || input.type === EC.Const.AUDIO) {\n\n\t\t\t\t\t//check whether the value is defined as media value {stored: \"<path>\", cached: \"<path>\"}\n\t\t\t\t\tif (value.hasOwnProperty(\"stored\")) {\n\n\t\t\t\t\t\tif (value.stored === \"\") {\n\n\t\t\t\t\t\t\t//we are saving a new media file path from the cached one (or an empty string if the file field was optional)\n\t\t\t\t\t\t\tif (value.cached !== \"\") {\n\n\t\t\t\t\t\t\t\t//build file name (in the format <form_name>_<ref>_<uuid>_filename) with the cached value (Android) or the timestamp (iOS)\n\t\t\t\t\t\t\t\t//Cordova Camera API unfortunately returns the timestamp as a file name on Android only, on iOS a smart guy decided to use the same file name with an incremental index (lol)\n\t\t\t\t\t\t\t\tparts = value.cached.split('/');\n\t\t\t\t\t\t\t\tfilename = parts[parts.length - 1];\n\n\t\t\t\t\t\t\t\tswitch(window.device.platform) {\n\n\t\t\t\t\t\t\t\t\tcase EC.Const.ANDROID:\n\t\t\t\t\t\t\t\t\t\t//do nothing\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase EC.Const.IOS:\n\n\t\t\t\t\t\t\t\t\t\t//replace filename with <timestamp>.jpg as on IOS the Camera, Audio and Video capture is inconsistent and returns weird file names\n\t\t\t\t\t\t\t\t\t\t//not always the timestamp. We want to save the files using the timestamp as we do on Android (and following Epicollect+ filename schema)\n\t\t\t\t\t\t\t\t\t\tif (input.type === EC.Const.PHOTO || input.type === EC.Const.AUDIO || input.type === EC.Const.VIDEO) {\n\n\t\t\t\t\t\t\t\t\t\t\t//get linked timestamp as we save the file using the timestamp as the file name\n\t\t\t\t\t\t\t\t\t\t\tfilename_parts = filename.split(\".\");\n\t\t\t\t\t\t\t\t\t\t\textension = filename_parts[filename_parts.length - 1];\n\n\t\t\t\t\t\t\t\t\t\t\ttimestamp = EC.Utils.getIOSFilename(ios_filenames, filename);\n\t\t\t\t\t\t\t\t\t\t\tfilename = timestamp + \".\" + extension;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvalue = form_name + \"_\" + input.ref + \"_\" + uuid + \"_\" + filename;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tvalue = \"\";\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t//use the existing stored path\n\t\t\t\t\t\t\tvalue = value.stored;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//value was not defined as media value: use case when user leaves a form halfway through but still wants to save. Save an empty object then\n\t\t\t\t\t\tvalue = \"\";\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//deal with branch type to save the value ({branch_form_name, total_of_entries}) in the correct format\n\t\t\t\tif (input.type === EC.Const.BRANCH) {\n\n\t\t\t\t\t//check if the branch input was skipped (by jumps or exiting a form earlier)\n\n\t\t\t\t\tif (value === EC.Const.SKIPPED) {\n\n\t\t\t\t\t\tvalue = input.branch_form_name + \",0\";\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//get branch form name and total of entries and save them as csv (cannot save JSON.stringify(obj) due to quotes, balls!)\n\t\t\t\t\t\tvalue = value.branch_form_name + \",\" + value.branch_total_entries;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//dropdown/radio values\n\t\t\t\tif (input.type === EC.Const.DROPDOWN || input.type === EC.Const.RADIO) {\n\n\t\t\t\t\t//if the input was NOT skipped, save the value or \"\" when no option was selected in the dropdown\n\t\t\t\t\tif (value !== EC.Const.SKIPPED) {\n\n\t\t\t\t\t\t//if the label is the select placeholder OR the value was skipped, save an empty value\n\t\t\t\t\t\tif (value === EC.Const.NO_OPTION_SELECTED) {\n\t\t\t\t\t\t\tvalue = \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//checkbox values we save all the value  as csv\n\t\t\t\tif (input.type === EC.Const.CHECKBOX) {\n\n\t\t\t\t\t//if the input was NOT skipped, save the value or \"\" when no option was selected in the checkboxes list\n\t\t\t\t\tif (value !== EC.Const.SKIPPED) {\n\t\t\t\t\t\t//TODO: if the label is the select placeholder OR the value was skipped, save an empty value does it happen this is an empty array?\n\t\t\t\t\t\tif (value === EC.Const.NO_OPTION_SELECTED) {\n\t\t\t\t\t\t\tvalue = \"\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvalue = value.join(\", \");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\trows.push({\n\t\t\t\t\t_id : _id, //this is set only when we are editing\n\t\t\t\t\tinput_id : input._id,\n\t\t\t\t\tform_id : input.form_id,\n\t\t\t\t\tposition : input.position,\n\t\t\t\t\tparent : parent_path,\n\t\t\t\t\tlabel : input.label,\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tref : input.ref,\n\t\t\t\t\tis_title : input.is_title,\n\t\t\t\t\tentry_key : key_value,\n\t\t\t\t\ttype : input.type,\n\t\t\t\t\tis_data_synced : 0,\n\t\t\t\t\tis_media_synced : 0,\n\t\t\t\t\tis_remote : 0,\n\t\t\t\t\tcreated_on : created_on\n\t\t\t\t});\n\n\t\t\t}//for each input\n\n\t\t\t//EC.Notification.showProgressDialog();\n\n\t\t\tconsole.log(\"rows: \" + JSON.stringify(rows));\n\n\t\t\t//save/update values to database\n\t\t\tif (window.localStorage.edit_mode) {\n\n\t\t\t\t$.when(EC.Update.updateHierarchyEntryValues(rows)).then(function() {\n\n\t\t\t\t\t//TODO: check this\n\t\t\t\t\t//set selected key value in localStorage to show list of values later\n\t\t\t\t\t//window.localStorage.entry_key = key_value;\n\n\t\t\t\t\t//check if we came to the editing from a child form list or selecting the top form and going through the whole sequence\n\t\t\t\t\tif (window.localStorage.is_child_form_nav) {\n\n\t\t\t\t\t\t//TODO\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\twindow.localStorage.back_nav_url = window.localStorage.back_edit_nav_url;\n\t\t\t\t\t}\n\n\t\t\t\t\t//if it is a nested form, keep track of its parent and save it in localStorage\n\t\t\t\t\tif (key_value !== parent_path) {\n\n\t\t\t\t\t\tvar parent_path_array = parent_path.split(EC.Const.ENTRY_ROOT_PATH_SEPARATOR);\n\t\t\t\t\t\tparent_path_array.pop();\n\t\t\t\t\t\twindow.localStorage.parent_path = parent_path_array.join(EC.Const.ENTRY_ROOT_PATH_SEPARATOR);\n\t\t\t\t\t}\n\n\t\t\t\t\tEC.Inputs.renderStoreEditFeedback(true);\n\t\t\t\t}, function() {\n\t\t\t\t\tEC.Inputs.renderStoreEditFeedback(false);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\t//insert form values, on success/fail show feedback\n\t\t\t\t$.when(EC.Create.insertFormValues(rows, key_value)).then(function(main_form_entry_key) {\n\t\t\t\t\tEC.Inputs.prepareFeedback(true, main_form_entry_key);\n\t\t\t\t}, function() {\n\t\t\t\t\tEC.Inputs.prepareFeedback(false, null);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Inputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = (function (module) {\n    'use strict';\n\n    module.prepareStoreEdit = function (the_current_position, the_input, the_ctx) {\n\n        var clone_value = '';\n        var validation = {};\n        var form_has_jumps;\n        var current_value;\n        var current_position = the_current_position;\n        var input = the_input;\n        var self = the_ctx;\n\n        //disable to avoid double submit\n        $(this).addClass('ui-disabled');\n\n        form_has_jumps = window.localStorage.form_has_jumps;\n\n        //get input value(based on input type and layout)\n        current_value = EC.Inputs.getCurrentValue(input.type);\n        current_position = window.localStorage.current_position;\n\n        //if we need to check for a double entry, get clone value\n        if (parseInt(input.has_double_check, 10) === 1) {\n\n            clone_value = EC.Inputs.getCloneValue(input.type);\n\n        }\n\n        //validate input before going to next page\n        validation = EC.Utils.isValidValue(input, current_value, clone_value);\n\n        //check if the editing is valid\n        if (!validation.is_valid) {\n            //warn user about the type of error\n            EC.Notification.showAlert('Error', validation.message);\n\n            //re-enable button to allow user to try again\n            $(this).removeClass('ui-disabled');\n            return;\n        }\n\n        //cache current value in localStorage\n        EC.Inputs.setCachedInputValue(current_value, current_position, input.type, input.is_primary_key);\n\n        //If this form has jump, edit the input_values array to set to _skipp3d_ all the values which are not part of the input_trail array\n        //todo the above is wrong, we need to force the user to go to the end of the form when modifying a form with jumps, reviewing the inputs he just entered\n        // (he can press 'next' over and over) -> quick and dirty solution would be disabling the on-screen store edit so the user needs to go to the end of the form, but only when he made a change to an input with a jump\n        // if (form_has_jumps === '1') {\n\n        //add current element on the view to inputs trail (as we are not tapping next)\n        EC.Inputs.pushInputsTrail(input);\n\n        //amend values skipped by the new jump sequence when editing\n        //   EC.Inputs.amendSkippedValues();\n        // }\n\n        //store data.\n        self.storeData(self);\n\n    };\n\n    return module;\n}(EC.Inputs));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\"use strict\";\n\n\t\tmodule.saveValuesOnExit = function(the_current_input) {\n\n\t\t\tvar self = this;\n\t\t\tvar current_input = the_current_input;\n\t\t\t//get current value from th einput currently on screen\n\t\t\tvar current_value = self.getCurrentValue(current_input.type);\n\t\t\tvar current_position = parseInt(window.localStorage.current_position, 10);\n\t\t\tvar validation = self.validateValue(current_input, current_value, current_position);\n\n\t\t\t//back to same screen if invalid value\n\t\t\tif (!validation.is_valid) {\n\t\t\t\t//warn user about the type of error\n\t\t\t\tEC.Notification.hideProgressDialog();\n\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(validation.message));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//cache current value in localStorage\n\t\t\tself.setCachedInputValue(current_value, current_position, current_input.type, current_input.is_primary_key);\n\t\t\tself.pushInputsTrail(current_input);\n\n\t\t\tself.onStoreValues();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Inputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device*/\n\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = (function (module) {\n    \"use strict\";\n\n    module.storeData = function (the_ctx) {\n\n        //get context\n        var self = the_ctx;\n        var media_files = [];\n\n        var _getCachedMediaFiles = function () {\n\n            var inputs_values = JSON.parse(window.localStorage.inputs_values);\n            var iLength = inputs_values.length;\n            var i;\n            var input;\n            var value;\n\n            var files = [];\n\n            //count how many media files we have to save\n            for (i = 0; i < iLength; i++) {\n\n                //get current value\n                input = EC.Inputs.inputs[i];\n                value = EC.Inputs.getCachedInputValue(input.position).value;\n\n                if (input.type === EC.Const.PHOTO || input.type === EC.Const.VIDEO || input.type === EC.Const.AUDIO) {\n\n                    // If cache path is empty, we do not have a file to save for that input so skip it\n                    if (value.cached !== \"\") {\n                        files.push({\n                            type: input.type,\n                            cached: value.cached,\n                            stored: value.stored,\n                            ref: input.ref\n                        });\n                    }\n                }\n            }\n\n            /*\n             * Now we got all the file paths, so clear DOM from any references\n             * otherwise on editing input some cache/stored file paths could be there and\n             * that causes errors upon saving\n             * as the EC.File.move() mehod will look for non-existent files\n             */\n\n            if (files.length > 0) {\n                //audio\n                $('div#audio div#input-audio input#cached-audio-uri').val('');\n                $('div#audio div#input-audio input#stored-audio-uri').val('');\n            }\n            return files;\n        };\n\n        media_files = _getCachedMediaFiles();\n\n        console.log('media_files.length= ' + media_files.length);\n\n        //Save data directly if no files are found (or we are using Chrome)\n        if (media_files.length === 0 || EC.Utils.isChrome()) {\n\n            self.buildRows();\n\n        }\n        else {\n\n            //save media files, when all are saved trigger buildRows();\n            console.log(JSON.stringify(media_files));\n\n            EC.File.move(media_files);\n        }\n\n    };\n\n    /** @method onStoreValues When the user tap the button to save data,\n     *  check first we have a primary key to save, then take care of skipped (by a\n     * jump) values\n     */\n    module.onStoreValues = function () {\n\n        var self = this;\n\n        //check if the primary key field has a value (there are cases where jumps skip\n        // the primary key field, so warn the user form cannot be saved)\n        if (self.isEmptyPrimaryKey()) {\n            //warn user\n            EC.Notification.hideProgressDialog();\n            EC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"missing_pk\"));\n            return;\n        }\n\n        if (window.localStorage.form_has_jumps === '1') {\n            //amend input values to save, setting the keyword \"_skipp3d_\" to skipped fields\n            self.amendSkippedValues();\n        }\n\n        self.storeData(self);\n    };\n\n    return module;\n\n}(EC.Inputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.InputTypes = EC.InputTypes || {};\nEC.InputTypes = ( function(module) {\"use strict\";\n\n\t\tmodule.addBranch = function(the_count, the_input) {\n\n\t\t\tvar obj;\n\t\t\tvar span_label = $('div#branch span.label');\n\t\t\tvar count = the_count;\n\t\t\tvar input = the_input;\n\t\t\tvar project_id = window.localStorage.project_id;\n\t\t\tvar add_branch_btn = $('div#input-branch div#add-branch-btn');\n\t\t\tvar list_branch_entries_btn = $('div#input-branch div#list-branch-entries-btn');\n\t\t\tvar list_entries_count = $('div#input-branch div#list-branch-entries-btn span.branch-entries-count');\n\n\t\t\t//hierarchy_entry_key_value is the current value of the primary key for the form we want to enter branches to\n\t\t\t//var parent_key_position = EC.Inputs.getPrimaryKeyRefPosition();\n\t\t\t//var hierarchy_entry_key_value = EC.Inputs.getMainFormCurrentKeyValue(parent_key_position).value;\n\t\t\tvar branch_form = JSON.parse(window.localStorage.branch_form);\n\t\t\t\n\t\t\t//Localise\n\t\t\tif (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n\t\t\t\tEC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n\t\t\t}\n\n\t\t\tvar _addBranchEntry = function() {\n\t\t\t\t//get list of inputs for the branch form and render the first one on screen\n\t\t\t\tEC.BranchInputs.getList(branch_form.name, project_id);\n\t\t\t};\n\n\t\t\tvar _listBranchEntries = function() {\n\t\t\t\tEC.Routing.changePage(EC.Const.BRANCH_ENTRIES_LIST_VIEW);\n\t\t\t};\n\n\t\t\t//update label text\n\t\t\tspan_label.text(input.label);\n\n\t\t\t//attach event handlers (removing old ones to avoid tiggering an event twice)\n\t\t\tadd_branch_btn.off().one('vclick', _addBranchEntry);\n\n\t\t\t//add branch form name as data value to add-branch button\n\t\t\tadd_branch_btn.attr(\"data-branch-form-name\", input.branch_form_name);\n\n\t\t\tif (count > 0) {\n\t\t\t\t//show branch entries on cick\n\t\t\t\tlist_branch_entries_btn.off('vclick').one('vclick', _listBranchEntries);\n\t\t\t\tlist_branch_entries_btn.removeClass(\"ui-disabled\");\n\t\t\t\tlist_branch_entries_btn.find(\"span.branch-entries-count\").text(count);\n\n\t\t\t} else {\n\t\t\t\t//no entries for this branch, disable button and reset counter to empty(0)\n\t\t\t\tlist_branch_entries_btn.addClass(\"ui-disabled\");\n\t\t\t\tlist_entries_count.text(\"\");\n\t\t\t}\n\n\t\t\t//add entries count as a data atttribute to button\n\t\t\tlist_branch_entries_btn.attr(\"data-entries-count\", count);\n\t\t\t\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.InputTypes));\n","/*global $, jQuery, cordova, device, Media, LocalFileSystem*/\n\nvar EC = EC || {};\nEC.InputTypes = EC.InputTypes || {};\nEC.InputTypes = (function (module) {\n    'use strict';\n\n    module.audio = function (the_value, the_input) {\n\n        //to cache dom lookups\n\n        var span_label = $('span.label');\n        var clone = $('div.clone');\n        var value = the_value;\n        var input = the_input;\n        var record_btn = $('div#input-audio div#start-btn');\n        var stop_btn = $('div#input-audio div#stop-btn');\n        var play_btn = $('div#input-audio div#play-btn');\n        var ongoing_recording_spinner = $('div#input-audio div#ongoing-recording-spinner');\n        var audio_feedback = $('div#input-audio p#audio-feedback');\n        var cached_audio_uri = $('div#input-audio input#cached-audio-uri');\n        var stored_audio_uri = $('div#input-audio input#stored-audio-uri');\n        var header_btns = $('div#audio div.ui-header');\n        var current_path;\n        var audio_full_path_uri;\n        var cache_path;\n        var mediaRec;\n        var current_audio;\n\n        //update label text\n        span_label.text(input.label);\n\n        //Localise\n        if (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n            EC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n        }\n\n        //attach event handlers (removing old ones to avoid tiggering an event twice)\n        record_btn.off('vclick').one('vclick', recordAudio);\n        stop_btn.off('vclick');\n        play_btn.off('vclick').on('vclick', playAudio);\n\n        //if an audio file is stored add it to hidden input field, to be shown if no\n        // cached value is set\n        if (window.localStorage.edit_mode && value.stored === undefined) {\n\n            stored_audio_uri.val(value);\n            value = {\n                cached: '',\n                stored: value\n            };\n\n        }//if\n\n        //toggle 'play' button only if we have a file to play\n        if (!value.cached) {\n\n            if (value.stored) {\n\n                play_btn.removeClass('ui-disabled');\n\n                //build full path to get audio file from private app folder (depending on\n                // platform)\n                switch (window.device.platform) {\n                    case EC.Const.ANDROID:\n                        audio_full_path_uri = EC.Const.ANDROID_APP_PRIVATE_URI + EC.Const.AUDIO_DIR + window.localStorage.project_name + '/' + value.stored;\n                        break;\n                    case EC.Const.IOS:\n\n                        audio_full_path_uri = EC.Const.IOS_APP_PRIVATE_URI + EC.Const.AUDIO_DIR + window.localStorage.project_name + '/' + value.stored;\n\n                        break;\n                }\n\n                console.log('audio_full_path_uri: ' + audio_full_path_uri);\n\n                current_path = audio_full_path_uri;\n\n                audio_feedback.text('Audio available');\n\n                console.log('current_path: ' + JSON.stringify(audio_full_path_uri));\n\n            }\n            else {\n\n                play_btn.addClass('ui-disabled');\n            }\n\n        }\n        else {\n\n            console.log('we have a cached value');\n\n            //we have a cached file to play, current path gets the cached value\n            play_btn.removeClass('ui-disabled');\n            current_path = cached_audio_uri.val();\n\n        }\n\n        console.log('cache_audio_uri: ' + cached_audio_uri.val());\n\n        //add store audio uri cache_path (if any)\n        stored_audio_uri.val(value.stored || '');\n\n        //reset recording buttons\n        record_btn.removeClass('enable');\n        stop_btn.addClass('ui-disabled');\n\n        //request temporary folder from file system based on platform\n        //todo this will probably change with the new Cordova iOS to match Android\n        if (window.device.platform === EC.Const.IOS) {\n\n            window.requestFileSystem(LocalFileSystem.TEMPORARY, 0, function (the_file_system) {\n\n                console.log(JSON.stringify(the_file_system));\n                cache_path = the_file_system.root.nativeURL;\n                console.log('nativeURL: ' + cache_path);\n\n\n                /* We need to provide the full path to the tmp folder to record an audio file\n                 *\n                 * iOS 7+ does not want 'file://' in the path to record an audio file\n                 *\n                 * if the path starts with 'file://', error thrown is\n                 * 'Failed to start recording using AvAudioRecorder'\n                 * so it is removed using slice(7);\n                 */\n                cache_path = cache_path.slice(7);\n            }, function (error) {\n                console.log(JSON.stringify(error));\n            });\n\n        }\n        else {\n            //Android only getting public cache directory\n            window.resolveLocalFileSystemURL(cordova.file.externalCacheDirectory, function (the_file_system) {\n\n                console.log(JSON.stringify(the_file_system));\n                cache_path = the_file_system.nativeURL;\n                console.log('nativeURL: ' + cache_path);\n\n            }, function (error) {\n                console.log(JSON.stringify(error));\n            });\n        }\n\n\n        //record audio\n        function recordAudio(e) {\n\n            var filename;\n\n            //disable navigation buttons while recording\n            header_btns.addClass('ui-disabled');\n\n            //disable player buttons while recording\n            stop_btn.removeClass('ui-disabled');\n            stop_btn.one('vclick', stopRecordAudio);\n            record_btn.addClass('ui-disabled');\n            play_btn.addClass('hidden');\n            ongoing_recording_spinner.removeClass('hidden');\n\n            //if the current path is not set yet, we are definitely recording a new audio\n            // file\n            if (!current_path) {\n                current_path = cache_path + EC.Utils.generateAudioFileName();\n            }\n            else {\n\n                /* we have a current path, is it a saved file or cached?\n                 * if it is a saved file, we have to replace the current path with the new\n                 * recording\n                 * path , pointing to the cache folder. This is to replace the existing stored\n                 * audio file with the new recording, so the new cached file will override the\n                 * stored file when saving the entry\n                 */\n                if (EC.Utils.isAudioFileStored(cache_path, current_path)) {\n                    current_path = cache_path + EC.Utils.generateAudioFileName();\n                }\n            }\n\n            console.log('Recording... - Full path: ' + current_path);\n\n            mediaRec = new Media(current_path,\n\n                // success callback\n                function onRecordingSuccess() {\n\n                    play_btn.removeClass('ui-disabled');\n                    audio_feedback.text('Audio available');\n                    console.log('recordAudio():Audio Success');\n\n                    cached_audio_uri.val(current_path);\n\n                    console.log('current_path: ' + current_path);\n\n                },\n\n                // error callback\n                function onRecordingError(err) {\n                    console.log('recordAudio():Audio Error: ' + err.code);\n                    console.log('recordAudio():Audio Error: ' + JSON.stringify(err));\n                });\n\n            // Record audio\n            mediaRec.startRecord();\n\n            e.preventDefault();\n            e.stopPropagation();\n\n        }//recordAudio\n\n        //stop recording\n        function stopRecordAudio(e) {\n\n            //re-enable navigation buttons\n            header_btns.removeClass('ui-disabled');\n\n            //enable player buttons\n            stop_btn.addClass('ui-disabled');\n            record_btn.removeClass('ui-disabled');\n            play_btn.removeClass('hidden ui-disabled');\n            ongoing_recording_spinner.addClass('hidden');\n\n            record_btn.off().one('vclick', recordAudio);\n\n            //stop recording and release resources\n            mediaRec.stopRecord();\n            mediaRec.release();\n\n            e.preventDefault();\n            e.stopPropagation();\n\n        }\n\n        function stopPlayingAudio(e) {\n\n            console.log('Audio stopped');\n\n            //stop audio and release resources\n            current_audio.stop();\n            current_audio.release();\n\n            //re-enable navigation buttons\n            header_btns.removeClass('ui-disabled');\n\n            //re-enable player buttons\n            stop_btn.off().one('vclick', stopRecordAudio);\n            stop_btn.addClass('ui-disabled');\n            record_btn.removeClass('ui-disabled');\n            play_btn.removeClass('ui-disabled');\n\n        }\n\n        //play the audio\n        function playAudio() {\n\n            //disable navigation buttons while playing\n            header_btns.addClass('ui-disabled');\n\n            //current_path = cached_audio_uri.val();\n            console.log('Playing... ' + current_path);\n\n            //unbind stopRecordAudio to bind stopPlayingAudio\n            stop_btn.off().one('vclick', stopPlayingAudio);\n            stop_btn.removeClass('ui-disabled');\n            play_btn.addClass('ui-disabled');\n            record_btn.addClass('ui-disabled');\n\n            function onPlayStatusChange(the_status) {\n\n                var status = the_status;\n\n                if (status === 4) {\n\n                    //re-enable navigation buttons\n                    header_btns.removeClass('ui-disabled');\n\n                    //re-enable player buttons\n                    stop_btn.addClass('ui-disabled');\n                    record_btn.removeClass('ui-disabled');\n                    play_btn.removeClass('ui-disabled');\n\n                }\n            }\n\n            current_audio = new Media(current_path, null, null, onPlayStatusChange);\n            current_audio.play();\n\n        }//playAudio\n\n    };\n\n    return module;\n\n}(EC.InputTypes));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery, cordova*/\nvar EC = EC || {};\nEC.InputTypes = EC.InputTypes || {};\nEC.InputTypes = ( function(module) {\n\t\t\"use strict\";\n\n\t\tmodule.barcode = function(the_value, the_input) {\n\n\t\t\t//to cache dom lookups\n\t\t\tvar obj;\n\t\t\tvar span_label = $('div#barcode span.label');\n\t\t\tvar clone = $('div.clone');\n\t\t\tvar double_entry;\n\t\t\tvar value = the_value;\n\t\t\tvar input = the_input;\n\t\t\tvar scanner = $('div#barcode div#scanner');\n\t\t\tvar scanner_confirm = $('div#barcode div#scanner-confirm');\n\t\t\tvar scan_result = $('div#barcode input.scan-result');\n\t\t\tvar scan_result_confirm = $('div#barcode input.scan-result-confirm');\n\n\t\t\t//update label text\n\t\t\tspan_label.text(input.label);\n\n\t\t\t//Localise\n\t\t\tif (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n\t\t\t\tEC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n\t\t\t}\n\n\t\t\t//Add attribute to flag the primary key input field\n\t\t\tif (parseInt(input.is_primary_key, 10) === 1) {\n\n\t\t\t\tspan_label.attr('data-primary-key', 'true');\n\n\t\t\t}\n\t\t\telse {\n\n\t\t\t\t//reset the attribute to empty if not a primary key (JQM caches\n\t\t\t\t// pages and we recycle views)\n\t\t\t\tspan_label.attr('data-primary-key', '');\n\t\t\t}\n\n\t\t\t//check if we need to replicate this input\n\t\t\tdouble_entry = (parseInt(input.has_double_check, 10) === 1) ? true : false;\n\n\t\t\t//reset buttons\n\t\t\tscanner.removeClass('ui-disabled');\n\t\t\tscanner_confirm.removeClass('ui-disabled');\n\n\t\t\tscan_result.val(value);\n\n\t\t\t//if in editing mode, do not allow changes either if the field is a\n\t\t\t// primary key or it triggers a jump\n\t\t\tif (window.localStorage.edit_mode && input.is_primary_key === '1') {\n\t\t\t\t//disable scan button\n\t\t\t\tscanner.addClass('ui-disabled');\n\t\t\t\t$('div#input-barcode p.primary-key-not-editable').removeClass(\"hidden\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$('div#input-barcode p.primary-key-not-editable').addClass(\"hidden\");\n\t\t\t}\n\n\t\t\tif (double_entry) {\n\n\t\t\t\t//duplicate text input\n\t\t\t\tclone.removeClass('hidden');\n\t\t\t\tscan_result_confirm.val(value);\n\n\t\t\t\tif (window.localStorage.edit_mode && input.is_primary_key === 1) {\n\n\t\t\t\t\t//disable clone scan button\n\t\t\t\t\tscanner_confirm.addClass('ui-disabled');\n\t\t\t\t}\n\n\t\t\t\t//add event handler to second scan button\n\t\t\t\tscanner_confirm.off().on('vclick', function() {\n\n\t\t\t\t\t//flag needed to handle case when user dismiss the barcode scanner\n\t\t\t\t\twindow.localStorage.is_dismissing_barcode = 1;\n\n\t\t\t\t\tcordova.plugins.barcodeScanner.scan(function(result) {\n\n\t\t\t\t\t\t//do not override value if the scan action is cancelled by the user\n\t\t\t\t\t\tif (!result.cancelled) {\n\t\t\t\t\t\t\tscan_result_confirm.val(result.text);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}, function(error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//add hidden class if missing\n\t\t\t\tclone.addClass('hidden');\n\t\t\t}\n\n\t\t\t//set handlers for scan button\n\t\t\tscanner.off().on('vclick', function() {\n\n\t\t\t\t//flag needed to handle case when user dismiss the barcode scanner\n\t\t\t\twindow.localStorage.is_dismissing_barcode = 1;\n\n\t\t\t\tcordova.plugins.barcodeScanner.scan(function(result) {\n\n\t\t\t\t\tconsole.log(result);\n\n\t\t\t\t\t//do not override value if the scan action is cancelled by the user\n\t\t\t\t\tif (!result.cancelled) {\n\t\t\t\t\t\tscan_result.val(result.text);\n\t\t\t\t\t}\n\n\t\t\t\t}, function(error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t//EC.Notification.showAlert(\"Scanning failed\", error);\n\t\t\t\t});\n\n\t\t\t});\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.InputTypes));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.InputTypes = EC.InputTypes || {};\nEC.InputTypes = ( function(module) {\"use strict\";\n\n\t\tmodule.checkbox = function(the_value, the_input) {\n\n\t\t\t//to cache dom lookups\n\t\t\tvar obj;\n\t\t\tvar span_label = $('div#checkbox span.label');\n\t\t\tvar clone = $('div.clone');\n\t\t\tvar double_entry;\n\t\t\tvar value = the_value;\n\t\t\tvar input = the_input;\n\t\t\tvar CHECKBOX_CHECKED = \"\";\n\t\t\tvar DISABLED = \"\";\n\t\t\tvar SELECTED = \"\";\n\t\t\tvar HTML = \"\";\n\n\t\t\t//update label text\n\t\t\tspan_label.text(input.label);\n\t\t\t\n\t\t\t//Localise\n\t\t\tif (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n\t\t\t\tEC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n\t\t\t}\n\n\t\t\t//Add attribute to flag the primary key input field\n\t\t\tif (parseInt(input.is_primary_key, 10) === 1) {\n\t\t\t\tspan_label.attr('data-primary-key', 'true');\n\t\t\t} else {\n\t\t\t\t//reset the attribute to empty if not a primary key (JQM caches pages and we recycle views)\n\t\t\t\tspan_label.attr('data-primary-key', '');\n\t\t\t}\n\n\t\t\t//check if we need to replicate this input\n\t\t\tdouble_entry = (parseInt(input.has_double_check, 10) === 1) ? true : false;\n\n\t\t\t//if in editing mode, do not allow changes either if the field is a primary key or it triggers a jump\n\t\t\tif (window.localStorage.edit_mode && (input.is_primary_key === '1' || input.has_jump === '1')) {\n\t\t\t\tDISABLED = 'disabled=\"disabled\"';\n\t\t\t}\n\n\t\t\t//display all checkboxes options\n\t\t\t$(input.options).each(function(index) {\n\n\t\t\t\tvar name = \"choice\";\n\t\t\t\tvar option_value = this.value.trim();\n\t\t\t\tvar option_label = this.label.trim();\n\t\t\t\tvar option_id = 'checkbox-choice-' + (index + 1);\n\t\t\t\tvar i;\n\t\t\t\tvar iLength = value.length;\n\n\t\t\t\t//check if we have any value stored. For checkboxes, 'value' will be an array\n\t\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\t\tCHECKBOX_CHECKED = \"\";\n\t\t\t\t\t//if any match is found, pre-select that checkbox in the markup\n\t\t\t\t\tif (value[i].trim() === option_value) {\n\t\t\t\t\t\tCHECKBOX_CHECKED = 'checked=\"checked\"';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tHTML += '<label>';\n\t\t\t\tHTML += '<input type=\"checkbox\" ' + CHECKBOX_CHECKED + ' ' + DISABLED + ' name=\"' + name;\n\t\t\t\tHTML += '\" id=\"' + option_id;\n\t\t\t\tHTML += '\" value=\"' + option_value;\n\t\t\t\tHTML += '\" data-label=\"' + option_label;\n\t\t\t\tHTML += '\" />' + option_label;\n\t\t\t\tHTML += '</label>';\n\n\t\t\t});\n\n\t\t\tspan_label.append(HTML);\n\t\t\t$('div#input-checkbox').trigger(\"create\");\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.InputTypes));\n","/*jslint vars: true, nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device */\n\nvar EC = EC || {};\nEC.InputTypes = EC.InputTypes || {};\nEC.InputTypes = ( function(module) {\n\t\t\"use strict\";\n\n\t\tmodule.date = function(the_value, the_input) {\n\n\t\t\tvar datepicker;\n\t\t\tvar ios_datepicker;\n\t\t\tvar span_label = $('span.label');\n\t\t\tvar clone = $('div.clone');\n\t\t\tvar double_entry;\n\t\t\tvar value = the_value;\n\t\t\tvar input = the_input;\n\t\t\tvar datebox_format;\n\t\t\tvar default_date;\n\n\t\t\t//update label text\n\t\t\tspan_label.text(input.label + \" - \" + input.datetime_format);\n\n\t\t\t//Localise\n\t\t\tif (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n\t\t\t\tEC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n\t\t\t}\n\n\t\t\t//Add attribute to flag the primary key input field\n\t\t\tif (parseInt(input.is_primary_key, 10) === 1) {\n\t\t\t\tspan_label.attr('data-primary-key', 'true');\n\t\t\t}\n\t\t\telse {\n\n\t\t\t\t//reset the attribute to empty if not a primary key (JQM caches pages and we\n\t\t\t\t// recycle views)\n\t\t\t\tspan_label.attr('data-primary-key', '');\n\t\t\t}\n\n\t\t\t//check if we need to replicate this input\n\t\t\tdouble_entry = (parseInt(input.has_double_check, 10) === 1) ? true : false;\n\n\t\t\t//Android Phonegap DatePicker plugin http://goo.gl/xLrqZl\n\t\t\tdatepicker = $('div#input-date input.nativedatepicker');\n\n\t\t\t//iOS uses the HTML5 input type=\"date\"\n\t\t\tios_datepicker = $('div#input-date input.ios-date');\n\n\t\t\t//hide immediate ios date input parent (JQM quirk, this is to hide the div\n\t\t\t// element border wrapping the input after JQM enhanced the markup)\n\t\t\tios_datepicker.parent().addClass(\"no-border\");\n\n\t\t\t/* Set current date in custom data attribute.\n\t\t\t * Important: since Epicollect+  for some bizzarre reason does not store the\n\t\t\t * timestamps yet, but a formatted date,\n\t\t\t * it is impossible to trigger the datapicker to the right data/time value after\n\t\t\t * a saving, as the timestamp is lost\n\t\t\t * i.e. if I save save 25th march 1988 just as 25/3, I will never get the year\n\t\t\t * back :/ and it will default to the current date\n\t\t\t * TODO: save date and time values with a timestamp attached\n\t\t\t */\n\n\t\t\tdatepicker.attr(\"data-raw-date\", new Date());\n\n\t\t\t/*show default date if input.value = input.datetime_format:\n\t\t\t *if the option to show the current date as default is selected in the web form\n\t\t\t * builder,\n\t\t\t * the input value gets the value of datetime_format when parsing the xml\n\t\t\t */\n\t\t\tif (value === input.datetime_format) {\n\t\t\t\tdatepicker.val(EC.Utils.parseDate(new Date(), input.datetime_format));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdatepicker.val(value);\n\t\t\t}\n\n\t\t\t/*****************************************************************************************\n\t\t\t * Android uses the Phonegap official DatePicker plugin\n\t\t\t ****************************************************************************************/\n\t\t\tif (window.device.platform === EC.Const.ANDROID) {\n\n\t\t\t\t/* bind input to 'vclick' insted of focus, as we set the input as readonly.\n\t\t\t\t * this solved problem on android 2.3 where the keyboard was showing because the\n\t\t\t\t * input is in focus when tapping \"cancel\"\n\t\t\t\t * on the DatePicker popup\n\t\t\t\t */\n\t\t\t\tdatepicker.off().on('vclick', function(event) {\n\n\t\t\t\t\tvar datepicker = $(this);\n\t\t\t\t\tvar selected_date = new Date(datepicker.attr(\"data-raw-date\"));\n\n\t\t\t\t\t//use debouncing/throttling to avoid triggering multiple `focus` event\n\t\t\t\t\t// http://goo.gl/NFdHDW\n\t\t\t\t\tvar now = new Date();\n\t\t\t\t\tvar lastFocus = datepicker.data(\"lastFocus\");\n\t\t\t\t\tif (lastFocus && (now - lastFocus) < 500) {\n\t\t\t\t\t\t// Don't do anything\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdatepicker.data(\"lastFocus\", now);\n\n\t\t\t\t\t// Same handling for iPhone and Android\n\t\t\t\t\twindow.plugins.datePicker.show({\n\t\t\t\t\t\tdate : selected_date,\n\t\t\t\t\t\tmode : 'date', // date or time or blank for both\n\t\t\t\t\t\tallowOldDates : true\n\t\t\t\t\t}, function(returned_date) {\n\n\t\t\t\t\t\tvar new_date;\n\n\t\t\t\t\t\tif (returned_date !== undefined) {\n\t\t\t\t\t\t\tnew_date = new Date(returned_date);\n\n\t\t\t\t\t\t\tdatepicker.val(EC.Utils.parseDate(new_date, input.datetime_format));\n\t\t\t\t\t\t\tdatepicker.attr(\"data-raw-date\", new_date);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// This fixes the problem you mention at the bottom of this script with it not\n\t\t\t\t\t\t// working a second/third time around, because it is in focus.\n\t\t\t\t\t\tdatepicker.blur();\n\t\t\t\t\t});\n\n\t\t\t\t\t// This fixes the problem you mention at the bottom of this script with it not\n\t\t\t\t\t// working a second/third time around, because it is in focus.\n\t\t\t\t\tdatepicker.blur();\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\t/*****************************************************************************************\n\t\t\t * iOS uses the official HTML5 input type=\"date\"\n\t\t\t ****************************************************************************************/\n\t\t\tif (window.device.platform === EC.Const.IOS) {\n\n\t\t\t\tdatepicker.off().on('vclick', function(event) {\n\t\t\t\t\tios_datepicker.focus();\n\t\t\t\t});\n\n\t\t\t\tios_datepicker.off().on('blur', function(event) {\n\n\t\t\t\t\tvar ios_date = ios_datepicker.val();\n\n\t\t\t\t\tdatepicker.val(EC.Utils.parseIOSDate(ios_date, input.datetime_format));\n\t\t\t\t\tdatepicker.attr(\"data-raw-date\", ios_date);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.InputTypes));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.InputTypes = EC.InputTypes || {};\nEC.InputTypes = ( function(module) {\n        \"use strict\";\n\n        module.decimal = function(the_value, the_input) {\n\n            //to cache dom lookups\n            var obj;\n            var span_label = $('span.label');\n            var clone = $('div.clone');\n            var double_entry;\n            var value = the_value;\n            var input = the_input;\n            // var ios_decimal_part = $(\"div#input-decimal\n            // input#decimal-for-ios\");\n            var min_range = $('span.min-range');\n            var max_range = $('span.max-range');\n\n            //update label text\n            span_label.text(input.label);\n\n            //Localise\n            if (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n                EC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n            }\n\n            //Add attribute to flag the primary key input field\n            if (parseInt(input.is_primary_key, 10) === 1) {\n\n                span_label.attr('data-primary-key', 'true');\n\n            } else {\n\n                //reset the attribute to empty if not a primary key (JQM caches\n                // pages and we recycle views)\n                span_label.attr('data-primary-key', '');\n            }\n\n            //check if we need to replicate this input\n            double_entry = (parseInt(input.has_double_check, 10) === 1) ? true : false;\n\n            //re-enable input if needed\n            $('div#input-decimal input').removeAttr('disabled');\n\n            if (window.device.platform === EC.Const.IOS) {\n\n                /**\n                 * Trigger numeric keyboard with added key for comma or dot on\n                 * iOS\n                 * This will still bring the full keyboard but in the\n                 * number/symbol pane be default.\n                 * The user can still switch to alphanumeric BUT upon onblur\n                 * event,\n                 * the pattern kicks in and removes any alphanumeric characters\n                 * (but not numbers).\n                 */\n                //$('div#input-decimal input').attr(\"pattern\", \"\\d+(\\.\\d*)?\");\n\n            }\n\n            //hide elements not needed\n            clone.addClass('hidden');\n            min_range.addClass('hidden');\n            max_range.addClass('hidden');\n\n            if (double_entry) {\n\n                //duplicate textarea input\n                clone.removeClass('hidden');\n                $('div.clone input').val(value);\n\n                //if in editing mode, do not allow changes either if the field is\n                // a primary key or it triggers a jump\n                if (window.localStorage.edit_mode && input.is_primary_key === 1) {\n\n                    $('div.clone input').attr('disabled', 'disabled');\n                }\n\n            }\n\n            //show min range if any\n            if (input.min_range !== \"\") {\n\n                min_range.removeClass('hidden');\n                min_range.text('Min: ' + input.min_range);\n\n            }\n\n            //show max range if any\n            if (input.max_range !== \"\") {\n\n                max_range.removeClass('hidden');\n                max_range.text('Max: ' + input.max_range);\n\n            }\n\n            $('div#input-decimal input').val(value);\n\n            //if in editing mode, do not allow changes either if the field is a\n            // primary key\n            if (window.localStorage.edit_mode && input.is_primary_key === 1) {\n\n                $('div#input-decimal input').attr('disabled', 'disabled');\n                $('div#input-decimal p.primary-key-not-editable').removeClass(\"hidden\");\n            } else {\n                $('div#input-decimal p.primary-key-not-editable').addClass(\"hidden\");\n            }\n\n        };\n\n        return module;\n\n    }(EC.InputTypes));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.InputTypes = EC.InputTypes || {};\nEC.InputTypes = ( function(module) {\n        \"use strict\";\n\n        module.dropdown = function(the_value, the_input) {\n\n            var obj;\n            var span_label = $('div#select span.label');\n            var clone = $('div.clone');\n            var double_entry;\n            var value = the_value;\n            var input = the_input;\n            var DISABLED = \"\";\n            var SELECTED = \"\";\n            var HTML = \"\";\n\n            //update label text\n            span_label.text(input.label);\n\n            //Localise\n            if (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n                EC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n            }\n\n            //Add attribute to flag the primary key input field\n            if (parseInt(input.is_primary_key, 10) === 1) {\n                span_label.attr('data-primary-key', 'true');\n            } else {\n                //reset the attribute to empty if not a primary key (JQM caches\n                // pages and we recycle views)\n                span_label.attr('data-primary-key', '');\n            }\n\n            //check if we need to replicate this input\n            double_entry = (parseInt(input.has_double_check, 10) === 1) ? true : false;\n\n            //if in editing mode, do not allow changes either if the field is a\n            // primary key or it triggers a jump\n            if (window.localStorage.edit_mode && (input.is_primary_key === '1' || input.has_jump === '1')) {\n                DISABLED = 'disabled=\"disabled\"';\n            }\n\n            //set the cached value as the selcted option\n            SELECTED = (value === \"\") ? 'selected' : \"\";\n\n            //TODO: check markup on jqm docs for select. Fastclick: is needclick\n            // needed?\n            HTML += '<select id=\"selection\" name=\"selection\" data-native-menu=\"true\" >';\n            HTML += '<option value =\"0\"' + SELECTED + ' data-index=\"0\">';\n            HTML += EC.Localise.getTranslation(EC.Const.NO_OPTION_SELECTED);\n            HTML += '</option>';\n\n            $(input.options).each(function(index) {\n\n                var option_value = this.value;\n                var option_index = (index + 1);\n                var option_label = this.label;\n                var option_id = 'select-choice-' + (index + 1);\n\n                //check if we have a value cached and pre-select that input\n                SELECTED = (value === option_value) ? 'selected' : \"\";\n\n                HTML += '<option ' + SELECTED + ' ' + DISABLED + ' value =\"' + option_value + '\" data-index=\"' + option_index + '\">' + option_label + '</option>';\n\n            });\n\n            HTML += '</select>';\n\n            span_label.append(HTML);\n            $('div#input-dropdown').trigger(\"create\");\n\n            /*****************************************************************************************************\n             *\tFollowing code is a hack to make the select native widget work on\n             * Android 4.4.2 (Nexus 5)\n             */\n            //Add needclick to all the markup as Fastclick is interfering and the\n            // native popup with the list of options is never triggered\n            // $(\"div#input-dropdown\").addClass(\"needsclick\");\n            // $(\"div#input-dropdown div.ui-select\").addClass(\"needsclick\");\n            // $(\"div#input-dropdown div.ui-btn\").addClass(\"needsclick\");\n            // $(\"div#input-dropdown div.ui-btn\n            // span.ui-btn-inner\").addClass(\"needsclick\");\n            // $(\"div#input-dropdown div.ui-btn span.ui-btn-inner\n            // span.ui-btn-text\").addClass(\"needsclick\");\n            // $(\"div#input-dropdown div.ui-btn span.ui-btn-inner\n            // span.ui-btn-text span\").addClass(\"needsclick\");\n            // $(\"div#input-dropdown div.ui-btn span.ui-btn-inner\n            // span.ui-icon\").addClass(\"needsclick\");\n\n            //Manually trigger a click on a select element. Best solution I came\n            // across\n            $(\"select\").on('vmousedown', function(e) {\n                $(this).focus().click();\n            });\n\n            /*****************************************************************************************************\n             * End hack\n             */\n\n        };\n\n        return module;\n\n    }(EC.InputTypes));\n","var EC = EC || {};\nEC.InputTypes = EC.InputTypes || {};\nEC.InputTypes = ( function(module) {\"use strict\";\n\n\t\tmodule.integer = function(the_value, the_input) {\n\n\t\t\tvar obj;\n\t\t\tvar span_label = $('span.label');\n\t\t\tvar clone = $('div.clone');\n\t\t\tvar double_entry;\n\t\t\tvar value = parseInt(the_value, 10);\n\t\t\tvar input = the_input;\n\t\t\tvar min_range = $('span.min-range');\n\t\t\tvar max_range = $('span.max-range');\n\n\t\t\t//update label text\n\t\t\tspan_label.text(input.label);\n\n\t\t\t//Localise\n\t\t\tif (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n\t\t\t\tEC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n\t\t\t}\n\n\t\t\t//Add attribute to flag the primary key input field\n\t\t\tif (parseInt(input.is_primary_key, 10) === 1) {\n\t\t\t\tspan_label.attr('data-primary-key', 'true');\n\t\t\t} else {\n\n\t\t\t\t//reset the attribute to empty if not a primary key (JQM caches pages and we recycle views)\n\t\t\t\tspan_label.attr('data-primary-key', '');\n\t\t\t}\n\n\t\t\t//check if we need to replicate this input\n\t\t\tdouble_entry = (parseInt(input.has_double_check, 10) == 1);\n\n\t\t\t//trigger numeric keyboard on iOS\n\t\t\tif (window.device.platform === EC.Const.IOS) {\n\t\t\t\t$('div#input-integer input').attr('pattern', '[0-9]*');\n\t\t\t}\n\n\t\t\t//hide elements not needed\n\t\t\tclone.addClass('hidden');\n\t\t\tmin_range.addClass('hidden');\n\t\t\tmax_range.addClass('hidden');\n\n\t\t\t//check if we need to render a double entry for this input\n\t\t\tif (double_entry) {\n\n\t\t\t\t//duplicate integer input\n\t\t\t\tclone.removeClass('hidden');\n\t\t\t\t$('div.clone input').val(value  = isNaN(value) ? \"\" : value);\n\n\t\t\t\t//if in editing mode, do not allow changes either if the field is a primary key\n\t\t\t\tif (window.localStorage.edit_mode && input.is_primary_key === 1) {\n\n\t\t\t\t\t$('div.clone input').attr('disabled', 'disabled');\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t//show min range if any\n\t\t\tif (input.min_range !== \"\") {\n\n\t\t\t\tmin_range.removeClass('hidden');\n\t\t\t\tmin_range.text('Min: ' + input.min_range);\n\n\t\t\t}\n\n\t\t\t//show max range if any\n\t\t\tif (input.max_range !== \"\") {\n\n\t\t\t\tmax_range.removeClass('hidden');\n\t\t\t\tmax_range.text('Max: ' + input.max_range);\n\n\t\t\t}\n\n\t\t\t$('div#input-integer input').val(value  = isNaN(value) ? \"\" : value);\n\n\t\t\t//if in editing mode, do not allow changes either if the field is a primary key\n\t\t\tif (window.localStorage.edit_mode && input.is_primary_key === 1) {\n\t\t\t\t$('div#input-integer input').attr('disabled', 'disabled');\n\t\t\t\t$('div#input-integer p.primary-key-not-editable').removeClass(\"hidden\");\n\t\t\t} else {\n\t\t\t\t//re-enable input if needed\n\t\t\t\t$('div#input-integer input').removeAttr('disabled');\n\t\t\t\t$('div#input-integer p.primary-key-not-editable').addClass(\"hidden\");\n\t\t\t}\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.InputTypes));\n","/*global $, jQuery*/\nvar EC = EC || {};\nEC.InputTypes = EC.InputTypes || {};\nEC.InputTypes = (function (module) {\n    'use strict';\n\n    var self;\n\n    module.location = function (the_value, the_input) {\n\n        var span_label = $('span.label');\n        var value = the_value;\n        var input = the_input;\n        var set_location_btn = $('div#location div#input-location div#set-location');\n        var textarea_coords = $('textarea#coords');\n        var accuracy_result = $('div#location  div#input-location div.current-accuracy-result');\n        var accuracy_tip = $('div#location  div#input-location div.location-accuracy-tip');\n        var map_canvas = $('div#location div#input-location div#map-canvas');\n        var cached_coords = [];\n\n        self = this;\n        //update label text\n        span_label.text(input.label);\n\n        //Localise text\n        if (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n            EC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n        }\n\n        //hide feedback when showing the view the first time\n        accuracy_result.addClass('hidden');\n        accuracy_tip.addClass('hidden');\n        map_canvas.addClass('hidden');\n\n        //get a rough location when the view is first loaded (no value set yet)\n        if (value === '') {\n            EC.Notification.showProgressDialog('Wait', 'Locating...');\n            $.when(EC.DevicePosition.getCurrentPosition()).then(function () {\n\n                $(accuracy_result).find('span').text(Math.floor(EC.DevicePosition.coords.accuracy));\n                $(accuracy_result).removeClass('hidden');\n                $(accuracy_tip).removeClass('hidden');\n\n                //if the user wants to use the enhanced map, load Google Maps APi (it returns immediately if already loaded on app cold start)\n                if (EC.DevicePosition.is_enhanced_map_on()) {\n\n                    map_canvas.removeClass('hidden');\n                    textarea_coords.addClass('hidden');\n\n                    $.when(EC.DevicePosition.loadGoogleMapsApi()).then(function () {\n                        $.when(EC.DevicePosition.initGoogleMap()).then(function () {\n                            EC.Notification.hideProgressDialog();\n                        });\n                    }, function () {\n\n                        //loading Google Maps Api failed, show standard view, warn user and rever back to standard mode\n                        window.localStorage.is_enhanced_map_on = 0;\n\n                        EC.Notification.showAlert('Sorry...', 'Google Maps failed to load, reverting to standard mode');\n                        textarea_coords.val(EC.DevicePosition.getCoordsFormattedText()).removeClass('hidden');\n                        map_canvas.addClass('hidden');\n                        EC.Notification.hideProgressDialog();\n                    });\n                }\n                else {\n                    //show standard view\n                    textarea_coords.val(EC.DevicePosition.getCoordsFormattedText());\n                    $(textarea_coords).removeClass('hidden');\n                    EC.Notification.hideProgressDialog();\n                }\n            }, function (error) {\n                EC.Notification.hideProgressDialog();\n                EC.Notification.showToast('Could not locate', 'long');\n            });\n        }\n        else {\n\n            accuracy_result.find('span').text(Math.floor(EC.Utils.parseLocationString(value).accuracy));\n            accuracy_result.removeClass('hidden');\n            accuracy_tip.removeClass('hidden');\n\n\n            //set previous location value if any\n            if (EC.DevicePosition.is_enhanced_map_on()) {\n\n                //deal with enhanced maps\n                map_canvas.removeClass('hidden');\n                textarea_coords.addClass('hidden');\n\n                //if the cached coords are the same, the user is navigating back and forth the inputs only, so do not update the map\n\n                //set coords in DevicePosition object to set google maps to that value before initialising map\n                cached_coords = EC.Utils.parseLocationString(value);\n                if (cached_coords.latitude === EC.DevicePosition.coords.latitude && cached_coords.longitude === EC.DevicePosition.coords.longitude) {\n\n                    //todo: same position, do not update. If we are editing, create a map and set position\n                }\n                else {\n\n                    //todo different position, update marker, circle and bounds using existing map object if any, or create it\n                    console.log('map needs to be updated');\n                }\n\n\n                //$.when(EC.DevicePosition.loadGoogleMapsApi()).then(function () {\n                //    $.when(EC.DevicePosition.initGoogleMap()).then(function () {\n                //        window.google.maps.event.trigger(EC.DevicePosition.map, 'resize');\n                //        EC.DevicePosition.map.setZoom(EC.DevicePosition.map.getZoom());\n                //        EC.Notification.hideProgressDialog();\n                //    });\n                //}, function () {\n                //    //loading Google Maps Api failed, show standard view\n                //    //todo alert user google maps failed to load\n                //    textarea_coords.val(EC.DevicePosition.getCoordsFormattedText()).removeClass('hidden');\n                //    map_canvas.addClass('hidden');\n                //    EC.Notification.hideProgressDialog();\n                //});\n\n                EC.Notification.hideProgressDialog();\n\n            } else {\n                textarea_coords.val(value);\n                $(textarea_coords).removeClass('hidden');\n                EC.Notification.hideProgressDialog();\n            }\n        }\n\n        //todo strings need to be translated\n        function _showAcquiredLocation(has_got_location) {\n\n            accuracy_result.removeClass('hidden');\n            accuracy_tip.removeClass('hidden');\n\n            if (has_got_location) {\n\n                $(accuracy_result).find('span').text(Math.floor(EC.DevicePosition.coords.accuracy));\n\n                if (EC.DevicePosition.is_enhanced_map_on()) {\n\n                    map_canvas.removeClass('hidden');\n                    textarea_coords.addClass('hidden');\n\n                    //update enhanced view\n                    EC.DevicePosition.current_position = new google.maps.LatLng(EC.DevicePosition.coords.latitude, EC.DevicePosition.coords.longitude);\n\n                    //update marker position\n                    EC.DevicePosition.marker.setPosition(EC.DevicePosition.current_position);\n\n                    //update accuracy circle\n                    EC.DevicePosition.circle.setOptions({\n                        center: EC.DevicePosition.current_position,\n                        radius: EC.DevicePosition.coords.accuracy\n                    });\n                }\n                else {\n                    //standar view\n                    textarea_coords.val(EC.DevicePosition.getCoordsFormattedText());\n                }\n            }\n            else {\n                //set location object to empty values\n                if (EC.DevicePosition.is_enhanced_map_on()) {\n\n                    //todo what about google maps -> hide map canvas?\n                }\n                else {\n                    textarea_coords.val(EC.DevicePosition.getCoordsEmptyText());\n                }\n\n            }\n\n            if (!EC.Utils.isChrome()) {\n                EC.Notification.showToast(EC.Localise.getTranslation('location_acquired'), 'short');\n            }\n\n            set_location_btn.one('vclick', _handleSetLocation);\n            EC.Notification.hideProgressDialog();\n        }\n\n        var _handleSetLocation = function () {\n\n            set_location_btn.off('vclick');\n\n            //check id GPS is enabled on the device\n            //todo check if it on when we start watch position\n            $.when(EC.Utils.isGPSEnabled()).then(function () {\n\n                //gps is on\n                EC.Notification.showProgressDialog(EC.Localise.getTranslation('locating'), EC.Localise.getTranslation('wait'));\n\n                //On Android, mostly on old devices, halt the execution to solve loader spinner not hiding after a gps lock\n                if (window.device.platform === EC.Const.ANDROID) {\n                    //if the device is older than KitKat I assume it is slow to hide the spinning loader and I need the execution halt to clear race conditions\n                    if (!(EC.Const.KITKAT_REGEX.test(window.device.version) || EC.Const.LOLLIPOP_REGEX)) {\n                        EC.Utils.sleep(2000);\n                    }\n                }\n\n                //has the device a good connection?(showing maps and then lost the connection for some reasons? revert to standard view then)\n                if (!EC.Utils.hasGoodConnection()) {\n                    window.localStorage.is_enhanced_map_on = 0;\n                }\n\n\n                $.when(EC.DevicePosition.watchPosition()).then(function (response) {\n                    _showAcquiredLocation(response);\n                });\n\n            }, function () {\n                console.log('gps NOT enabled');\n                //no gps...do we have at least an internet connection?\n                //TODO: replace with location services network\n                EC.Notification.showAlert(EC.Localise.getTranslation('error'), EC.Localise.getTranslation('gps_disabled'));\n            });\n\n        };\n\n        //bind set location button\n        set_location_btn.off().one('vclick', _handleSetLocation);\n\n    };\n\n    return module;\n\n}(EC.InputTypes));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, Camera*/\n\nvar EC = EC || {};\nEC.InputTypes = EC.InputTypes || {};\nEC.InputTypes = (function (module) {\n    'use strict';\n\n    var app_storage_dir;\n\n    module.photo = function (the_value, the_input) {\n\n\n        var span_label = $('span.label');\n        var value = the_value;\n        var input = the_input;\n        var camera_btn = $('div#input-photo div#camera-btn');\n        var store_image_uri = $('div#input-photo input#stored-image-uri');\n        var cache_image_uri = $('div#input-photo input#cached-image-uri');\n        var image_full_path_uri;\n\n        //clear canvas from previous images\n        var canvas_portrait_dom = $('#canvas-portrait');\n        var canvas_landscape_dom = $('#canvas-landscape');\n        var canvas_portrait = $('#canvas-portrait')[0];\n        var canvas_landscape = $('#canvas-landscape')[0];\n\n        var context_portrait = canvas_portrait.getContext('2d');\n        context_portrait.clearRect(0, 0, canvas_portrait.width, canvas_portrait.height);\n\n        var context_landscape = canvas_landscape.getContext('2d');\n        context_landscape.clearRect(0, 0, canvas_landscape.width, canvas_landscape.height);\n\n        //Localise\n        if (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n            EC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n        }\n\n        // //on iOS, close image popup on orientation change\n        if (EC.Const.IOS) {\n            //TODO\n        }\n\n        $('div#canvas-wrapper').off().on('vclick', function (e) {\n\n            var href = $('div#input-photo input#cached-image-uri').val();\n            var iOS_popup = $('#photo-popup');\n\n            console.log(href);\n\n            //if cached image url is empty, get stored image url\n            if (href === '') {\n                href = app_storage_dir + $('div#input-photo input#stored-image-uri').val();\n            }\n\n            if (window.device) {\n                switch (window.device.platform) {\n\n                    //on Android we show the image as a opo up using swipebox\n                    case EC.Const.ANDROID:\n                        e.preventDefault();\n                        $.swipebox([{\n                            href: href\n                        }]);\n                        break;\n\n                    //on iOS we show a built in JQM popup, as swipebox has\n                    // got issues\n                    case EC.Const.IOS:\n                        iOS_popup.find('img').attr('src', href);\n\n                        /*\n                         * let's use a timeout otherwise the popup is not\n                         * centered on the first tap, because the\n                         * image is not loaded. Not the prettiest solution,\n                         * but since the image is loaded locally\n                         * and always the same size, I can assume 100 ms will\n                         * work everytime on iPhones\n                         *\n                         * see here\n                         * http://stackoverflow.com/questions/21304763/jquery-mobile-popup-not-centered-on-first-click\n                         *\n                         */\n\n                        window.setTimeout(function () {\n                            iOS_popup.popup('open');\n                        }, 100);\n\n                        $(window).on('orientationchange', function (event) {\n                            console.log('called orientationchange');\n\n                            //close popup, as it is not scaled/positioned\n                            // properly\n                            iOS_popup.popup('close');\n                        });\n\n                        break;\n                }\n\n            }\n\n        });\n\n        //Render thumbnail on <canvas>\n        var _renderThumb = function (the_image_uri) {\n\n            //load taken image on <canvas> tag\n            var image = new Image();\n            var canvas;\n            var context;\n            var source = the_image_uri;\n\n            /**Attach a timestamp to the source URI to make the UIWebView\n             * refresh the cache\n             * and request a new image otherwise old images are loaded (iOS\n             * quirk)\n             * The same thing happens on a browser. On Android this does not\n             * happen\n             * because the image URI is saved using the timestamp as filename\n             * directly (good choice)\n             *\n             * Anyway, when editing and replacing the image with a new one the saved url does\n             * not change, so we need to force a refresh on all platforms\n             */\n            source += '?' + parseInt(new Date().getTime() / 1000, 10);\n\n            image.src = source;\n\n            image.onerror = function () {\n                console.log('Image failed!');\n            };\n\n            image.onload = function () {\n\n                //TODO:resize image to fit in canvas -> it is not working\n                // properly!\n                console.log('on load called');\n                var width = this.width;\n                var height = this.height;\n                var thumb_height;\n                var thumb_width;\n                var canvas;\n\n                if (height > width) {\n\n                    //portrait\n                    canvas = canvas_portrait;\n                    thumb_width = 188;\n                    thumb_height = 250;\n                    canvas_landscape_dom.addClass('hidden');\n                    canvas_portrait_dom.removeClass('hidden');\n\n                }\n                else {\n\n                    //landscape\n                    canvas = canvas_landscape;\n                    thumb_width = 250;\n                    thumb_height = 188;\n                    canvas_portrait_dom.addClass('hidden');\n                    canvas_landscape_dom.removeClass('hidden');\n                }\n\n                context = canvas.getContext('2d');\n                context.clearRect(0, 0, canvas.width, canvas.height);\n                context.save();\n\n                //scale image based on device pixel density\n                // context.scale(window.devicePixelRatio,\n                // window.devicePixelRatio);\n                context.imageSmoothingEnabled = false;\n                context.drawImage(this, 0, 0, thumb_width, thumb_height);\n                context.restore();\n\n            };\n            //image.onload\n\n            console.log(JSON.stringify(source));\n\n        };\n\n        //hide both canvas\n        canvas_landscape_dom.addClass('hidden');\n        canvas_portrait_dom.addClass('hidden');\n\n        //update label text\n        span_label.text(input.label);\n\n        //if a value is stored when editing, on the first load add it to\n        // hidden input field,  to be shown if no cached value is set\n        if (window.localStorage.edit_mode) {\n\n            if (value.stored === undefined) {\n                store_image_uri.val(value);\n                value = {\n                    cached: '',\n                    stored: value\n                };\n            }\n            else {\n\n                store_image_uri.val(value.stored);\n            }\n\n        }\n        else {\n            //clear any previous stored path in the DOM, otherwise it get cached and it causes the same image to be overriden when adding a new entry\n            store_image_uri.val('');\n        }\n\n        console.log('value.stored ' + JSON.stringify(value.stored));\n\n        //If a cache value is set, add it to hidden field\n        cache_image_uri.val(value.cached || '');\n        console.log('cache_image_uri: ' + cache_image_uri.val());\n\n        //Show cached image if any, otherwise the stored image, if any\n        if (value.cached === '') {\n\n            console.log('cached value empty');\n\n            if (value.stored !== '') {\n\n                //build full path to get image from private app folder\n                switch (window.device.platform) {\n\n                    case EC.Const.ANDROID:\n                        image_full_path_uri = EC.Const.ANDROID_APP_PRIVATE_URI + EC.Const.PHOTO_DIR + window.localStorage.project_name + '/' + value.stored;\n                        app_storage_dir = EC.Const.ANDROID_APP_PRIVATE_URI + EC.Const.PHOTO_DIR + window.localStorage.project_name + '/';\n                        break;\n                    case EC.Const.IOS:\n                        //prepend 'file://' to load images from iOS\n                        // application directory\n                        image_full_path_uri = 'file://' + EC.Const.IOS_APP_PRIVATE_URI + EC.Const.PHOTO_DIR + window.localStorage.project_name + '/' + value.stored;\n                        app_storage_dir = 'file://' + EC.Const.IOS_APP_PRIVATE_URI + EC.Const.PHOTO_DIR + window.localStorage.project_name + '/';\n                        break;\n\n                }\n\n                console.log('image_full_path_uri: ' + image_full_path_uri);\n\n                _renderThumb(image_full_path_uri);\n\n            }\n\n        }\n        else {\n\n            //render the cached image\n            _renderThumb(value.cached);\n        }\n\n        //Set camera options - anything more than 1024 x 728 will crash\n        var source = Camera.PictureSourceType.CAMERA;\n        var camera_options = {\n            quality: 50, //anything more than this will cause memory leaks\n            destinationType: Camera.DestinationType.FILE_URI,\n            sourceType: source,\n            encodingType: Camera.EncodingType.JPEG,\n            mediaType: Camera.MediaType.PICTURE,\n            correctOrientation: true,\n            saveToPhotoAlbum: false,\n            targetWidth: 1024,\n            targetHeight: 768\n        };\n\n        //open camera app on click\n        camera_btn.off().on('vclick', function () {\n\n            navigator.camera.getPicture(onGPSuccess, onGPError, camera_options);\n\n        });\n\n        //Success callback\n        var onGPSuccess = function (the_image_uri) {\n\n            console.log('image_uri: ' + the_image_uri);\n\n            var image_uri = the_image_uri;\n\n            //render the new image on canvas\n            _renderThumb(image_uri);\n\n            //save cached filename in hidden input field\n            console.log('image uri is' + image_uri);\n\n            $('div#input-photo input#cached-image-uri').val(image_uri);\n\n            // image_src_loaded = false;\n\n        };\n\n        //Error callback\n        var onGPError = function (error) {\n            console.log('Error', 'Failed because: ' + error);\n        };\n    };\n\n    return module;\n\n}(EC.InputTypes));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.InputTypes = EC.InputTypes || {};\nEC.InputTypes = ( function(module) {\"use strict\";\n\n\t\tmodule.radio = function(the_value, the_input) {\n\n\t\t\tvar obj;\n\t\t\tvar span_label = $('div#radio div#input-radio span.label');\n\t\t\tvar clone = $('div.clone');\n\t\t\tvar double_entry;\n\t\t\tvar value = the_value;\n\t\t\tvar old_cached_value;\n\t\t\tvar input = the_input;\n\t\t\tvar HTML = \"\";\n\t\t\tvar RADIO_CHECKED = \"\";\n\t\t\tvar DISABLED = \"\";\n\n\t\t\t//update label text\n\t\t\tspan_label.text(input.label);\n\t\t\t\n\t\t\t//Localise\n\t\t\tif (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n\t\t\t\tEC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n\t\t\t}\n\n\t\t\t//Add attribute to flag the primary key input field\n\t\t\tif (parseInt(input.is_primary_key, 10) === 1) {\n\t\t\t\tspan_label.attr('data-primary-key', 'true');\n\t\t\t} else {\n\t\t\t\t//reset the attribute to empty if not a primary key (JQM caches pages and we recycle views)\n\t\t\t\tspan_label.attr('data-primary-key', '');\n\t\t\t}\n\n\t\t\t//check if we need to replicate this input\n\t\t\tdouble_entry = (parseInt(input.has_double_check, 10) === 1) ? true : false;\n\n\t\t\t//if in editing mode, do not allow changes if the field is a primary key\n\t\t\tif (window.localStorage.edit_mode && parseInt(input.is_primary_key, 10) === 1) {\n\t\t\t\tDISABLED = 'disabled=\"disabled\"';\n\t\t\t}\n\t\t\t\n\t\t\tHTML += '<fieldset data-role=\"controlgroup\">';\n\n\t\t\t//render list of options\n\t\t\t$(input.options).each(function(index) {\n\n\t\t\t\t//increase value by 1, as we use value = 0 when no option is selected (like for select/dropdown) We are using the index as radio jumps are mapped against the index of the value\n\t\t\t\tvar option_value = this.value;\n\t\t\t\tvar option_index = (index + 1);\n\t\t\t\tvar option_label = this.label;\n\t\t\t\tvar option_id = 'radio-choice-' + (index + 1);\n\n\t\t\t\t//pre select an element if the value matches the cached value\n\t\t\t\tRADIO_CHECKED = (value === option_value) ? 'checked=\"checked\"' : \"\";\n\n\t\t\t\tHTML += '<input type=\"radio\" name=\"radio-options\" id=\"' + option_id + '\" value=\"' + option_value + '\"' + RADIO_CHECKED + ' ' + DISABLED + ' data-index=\"' + option_index + '\">';\n\t\t\t\tHTML += '<label for=\"' + option_id + '\">' + option_label + '</label>';\n\t\t\t});\n\n\t\t\tHTML += '</fieldset>';\n\n\t\t\tspan_label.append(HTML);\n\t\t\t$('div#input-radio').trigger(\"create\");\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.InputTypes));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.InputTypes = EC.InputTypes || {};\nEC.InputTypes = ( function(module) {\"use strict\";\n\t\n\tmodule.text = function(the_value, the_input) {\n\n\t\t\t//to cache dom lookups\n\t\t\tvar obj;\n\t\t\tvar span_label = $('span.label');\n\t\t\tvar clone = $('div.clone');\n\t\t\tvar double_entry;\n\t\t\tvar value = the_value;\n\t\t\tvar input = the_input;\n\n\t\t\t//update label text\n\t\t\tspan_label.text(input.label);\n\t\t\t\n\t\t\t//Localise\n\t\t\tif (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n\t\t\t\tEC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n\t\t\t}\n\n\t\t\t//Add attribute to flag the primary key input field\n\t\t\tif (parseInt(input.is_primary_key, 10) === 1) {\n\n\t\t\t\tspan_label.attr('data-primary-key', 'true');\n\n\t\t\t} else {\n\n\t\t\t\t//reset the attribute to empty if not a primary key (JQM caches pages and we recycle views)\n\t\t\t\tspan_label.attr('data-primary-key', '');\n\t\t\t}\n\n\t\t\t//check if we need to replicate this input\n\t\t\tdouble_entry = (parseInt(input.has_double_check, 10) === 1) ? true : false;\n\n\t\t\t//re-enable input if needed\n\t\t\t$('div#input-text input').removeAttr('disabled');\n\n\t\t\tif (double_entry) {\n\n\t\t\t\t//duplicate text input\n\t\t\t\tclone.removeClass('hidden');\n\t\t\t\t$('div.clone input').val(value);\n\n\t\t\t\t//if in editing mode, do not allow changes  if the field is a primary key\n\t\t\t\tconsole.log( typeof input.is_primary_key);\n\t\t\t\tconsole.log( typeof input.has_jump);\n\n\t\t\t\tif (window.localStorage.edit_mode && input.is_primary_key === 1) {\n\n\t\t\t\t\t$('div.clone input').attr('disabled', 'disabled');\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t//add hidden class if missing\n\t\t\t\tclone.addClass('hidden');\n\n\t\t\t}\n\n\t\t\t$('div#input-text input').val(value);\n\n\t\t\t//if it is a genkey field, disable input and pre-fill it with the genkey\n\t\t\tif (parseInt(input.is_genkey,10) === 1 && value === \"\") {\n\n\t\t\t\t$('div#input-text input').attr('disabled', 'disabled').val(EC.Utils.getGenKey());\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//if in editing mode, do not allow changes if the field is a primary key \n\t\t\tif (window.localStorage.edit_mode && input.is_primary_key === 1) {\n\t\t\t\t$('div#input-text input').attr('disabled', 'disabled');\n\t\t\t\t$('div#input-text p.primary-key-not-editable').removeClass(\"hidden\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\t$('div#input-text p.primary-key-not-editable').addClass(\"hidden\");\n\t\t\t}\n\t\t\t\n\n\t\t};\n\n\t\n\treturn module;\n\t\n}(EC.InputTypes));","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\nvar EC = EC || {};\nEC.InputTypes = EC.InputTypes || {};\nEC.InputTypes = ( function(module) {\"use strict\";\n\n\t\tmodule.textarea = function(the_value, the_input) {\n\n\t\t\t//to cache dom lookups\n\t\t\tvar obj;\n\t\t\tvar span_label = $('span.label');\n\t\t\tvar clone = $('div.clone');\n\t\t\tvar double_entry;\n\t\t\tvar value = the_value;\n\t\t\tvar input = the_input;\n\n\t\t\t//update label text\n\t\t\tspan_label.text(input.label);\n\t\t\t\n\t\t\t//Localise\n\t\t\tif (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n\t\t\t\tEC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n\t\t\t}\n\n\t\t\t//Add attribute to flag the primary key input field\n\t\t\tif (parseInt(input.is_primary_key, 10) === 1) {\n\n\t\t\t\tspan_label.attr('data-primary-key', 'true');\n\n\t\t\t} else {\n\n\t\t\t\t//reset the attribute to empty if not a primary key (JQM caches pages and we recycle views)\n\t\t\t\tspan_label.attr('data-primary-key', '');\n\t\t\t}\n\n\t\t\t//check if we need to replicate this input\n\t\t\tdouble_entry = (parseInt(input.has_double_check, 10) === 1) ? true : false;\n\n\t\t\t//re-enable input if needed\n\t\t\t$('div#input-textarea textarea').removeAttr('disabled');\n\n\t\t\tif (double_entry) {\n\n\t\t\t\t//duplicate textarea input\n\t\t\t\tclone.removeClass('hidden');\n\t\t\t\t$('div.clone textarea').val(value);\n\n\t\t\t\t//if in editing mode, do not allow changes  if the field is a primary key\n\t\t\t\tif (window.localStorage.edit_mode && input.is_primary_key === 1) {\n\n\t\t\t\t\t$('div.clone textarea').attr('disabled', 'disabled');\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t//add hidden class if missing\n\t\t\t\tclone.addClass('hidden');\n\n\t\t\t}\n\n\t\t\t//Set value\n\t\t\t$('div#input-textarea textarea').val(value);\n\n\t\t\t//if in editing mode, do not allow changes either if the field is a primary key\n\t\t\tif (window.localStorage.edit_mode && input.is_primary_key === 1) {\n\n\t\t\t\t$('div#input-textarea textarea').attr('disabled', 'disabled');\n\t\t\t\t$('div#input-textarea p.primary-key-not-editable').removeClass(\"hidden\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\t$('div#input-textarea p.primary-key-not-editable').addClass(\"hidden\");\n\t\t\t}\n\t\t\t\n\t\t\t\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.InputTypes)); ","/*jslint vars: true, nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device*/\n\nvar EC = EC || {};\nEC.InputTypes = EC.InputTypes || {};\nEC.InputTypes = ( function(module) {\n\t\t\"use strict\";\n\n\t\tmodule.time = function(the_value, the_input) {\n\n\t\t\tvar timepicker;\n\t\t\tvar ios_timepicker;\n\t\t\tvar span_label = $('span.label');\n\t\t\tvar clone = $('div.clone');\n\t\t\tvar double_entry;\n\t\t\tvar value = the_value;\n\t\t\tvar input = the_input;\n\t\t\tvar datebox_format;\n\n\t\t\t//update label text\n\t\t\tspan_label.text(input.label + \" - \" + input.datetime_format);\n\n\t\t\t//Localise\n\t\t\tif (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n\t\t\t\tEC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n\t\t\t}\n\n\t\t\t//Add attribute to flag the primary key input field\n\t\t\tif (parseInt(input.is_primary_key, 10) === 1) {\n\n\t\t\t\tspan_label.attr('data-primary-key', 'true');\n\n\t\t\t}\n\t\t\telse {\n\n\t\t\t\t//reset the attribute to empty if not a primary key (JQM caches pages and we\n\t\t\t\t// recycle views)\n\t\t\t\tspan_label.attr('data-primary-key', '');\n\t\t\t}\n\n\t\t\t//check if we need to replicate this input\n\t\t\tdouble_entry = (parseInt(input.has_double_check, 10) === 1) ? true : false;\n\n\t\t\t//Android Phonegap timepicker plugin http://goo.gl/xLrqZl\n\t\t\ttimepicker = $('div#input-time input.nativedatepicker');\n\n\t\t\t//iOS uses the HTML5 input type=\"time\"\n\t\t\tios_timepicker = $('div#input-time input.ios-time');\n\n\t\t\t//hide immediate ios time input parent (JQM quirk, this is to hide the div\n\t\t\t// element border wrapping the input after JQM enhanced the markup)\n\t\t\tios_timepicker.parent().addClass(\"no-border\");\n\n\t\t\t/*show current time if value = input.datetime_format:\n\t\t\t *if the option to show the current time as default is selected in the web form\n\t\t\t * builder,\n\t\t\t * the input value gets the value of datetime_format when parsing the xml\n\t\t\t */\n\t\t\tif (value === input.datetime_format) {\n\t\t\t\ttimepicker.val(EC.Utils.parseTime(new Date(), input.datetime_format));\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//show cached value\n\t\t\t\ttimepicker.val(value);\n\t\t\t}\n\n\t\t\t/*****************************************************************************************\n\t\t\t * Android uses the Phonegap official DatePicker plugin\n\t\t\t ****************************************************************************************/\n\t\t\tif (window.device.platform === EC.Const.ANDROID) {\n\t\t\t\t/* bind input to 'vclick' insted of focus, as we set the input as readonly.\n\t\t\t\t * this solved problem on android 2.3 where the keyboard was showing because the\n\t\t\t\t * input is in focus when tapping \"cancel\"\n\t\t\t\t * on the DatePicker popup\n\t\t\t\t */\n\t\t\t\ttimepicker.off().on('vclick', function(e) {\n\n\t\t\t\t\tvar timepicker = $(this);\n\t\t\t\t\tvar selected_date = Date.parse(timepicker.val()) || new Date();\n\n\t\t\t\t\t//use debouncing/throttling to avoid triggering multiple `focus` event\n\t\t\t\t\t// http://goo.gl/NFdHDW\n\t\t\t\t\tvar now = new Date();\n\t\t\t\t\tvar lastFocus = timepicker.data(\"lastFocus\");\n\t\t\t\t\tif (lastFocus && (now - lastFocus) < 500) {\n\t\t\t\t\t\t// Don't do anything\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\ttimepicker.data(\"lastFocus\", now);\n\n\t\t\t\t\t// Same handling for iPhone and Android\n\t\t\t\t\twindow.plugins.datePicker.show({\n\t\t\t\t\t\tdate : selected_date,\n\t\t\t\t\t\tmode : 'time', // date or time or blank for both\n\t\t\t\t\t\tallowOldDates : true\n\t\t\t\t\t}, function(returned_date) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar new_date;\n\n\t\t\t\t\t\tif (returned_date !== undefined) {\n\n\t\t\t\t\t\t\tnew_date = new Date(returned_date);\n\n\t\t\t\t\t\t\ttimepicker.val(EC.Utils.parseTime(new_date, input.datetime_format));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// This fixes the problem you mention at the bottom of this script with it not\n\t\t\t\t\t\t// working a second/third time around, because it is in focus.\n\t\t\t\t\t\ttimepicker.blur();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/*****************************************************************************************\n\t\t\t * iOS uses the official HTML5 input type=\"time\", only hours and minutes are\n\t\t\t * returned\n\t\t\t ****************************************************************************************/\n\t\t\tif (window.device.platform === EC.Const.IOS) {\n\n\t\t\t\ttimepicker.off().on('vclick', function(event) {\n\n\t\t\t\t\tios_timepicker.focus();\n\n\t\t\t\t});\n\n\t\t\t\tios_timepicker.off().on('blur', function(event) {\n\n\t\t\t\t\tvar ios_time = ios_timepicker.val();\n\n\t\t\t\t\t//get seconds (based on current time)\n\t\t\t\t\tvar date = new Date(event.timeStamp);\n\t\t\t\t\tvar seconds = date.getSeconds();\n\n\t\t\t\t\t//add seconds to have a string like HH:mm:ss\n\t\t\t\t\tios_time = ios_time + \":\" + seconds;\n\n\t\t\t\t\ttimepicker.val(EC.Utils.parseIOSTime(ios_time, input.datetime_format));\n\t\t\t\t\ttimepicker.attr(\"data-raw-date\", ios_time);\n\n\t\t\t\t});\n\t\t\t}\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.InputTypes));\n","/*global $, jQuery, LocalFileSystem, cordova*/\nvar EC = EC || {};\nEC.InputTypes = EC.InputTypes || {};\nEC.InputTypes = (function (module) {\n    'use strict';\n\n    module.video = function (the_value, the_input) {\n\n        //to cache dom lookups\n        var span_label = $('span.label');\n        var value = the_value;\n        var input = the_input;\n        var video_btn = $('div#input-video div#video-btn');\n        var play_video_btn = $('div#input-video div#play-video-btn');\n        var store_video_uri = $('div#input-video input#stored-video-uri');\n        var cache_video_uri = $('div#input-video input#cached-video-uri');\n        var video_full_path_uri;\n        var cached_path;\n        var video_sd_path;\n        var ios_video_player_wrapper = $('div#input-video div#ios-video-player-wrapper');\n        var ios_video_player = $('div#input-video video#ios-video-player');\n\n        var _renderVideo = function (the_video_file_path) {\n\n            play_video_btn.attr('data-video-path', the_video_file_path);\n            play_video_btn.removeClass('ui-disabled');\n\n        };\n\n        //hide play button on ios, also hide video wrapper\n        if (window.device.platform === EC.Const.IOS) {\n            $(play_video_btn, ios_video_player_wrapper).addClass('hidden');\n\n        }\n\n        //update label text\n        span_label.text(input.label);\n\n        //Localise\n        if (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n            EC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n        }\n\n        //if a value is stored, on the first load add it to hidden input field,  to be\n        // shown if no cached value is set\n        if (window.localStorage.edit_mode) {\n\n            if (value.stored === undefined) {\n                store_video_uri.val(value);\n                value = {\n                    cached: '',\n                    stored: value\n                };\n            }\n            else {\n                store_video_uri.val(value.stored);\n            }\n        }\n\n        console.log('value.stored ' + JSON.stringify(value.stored));\n\n        //If a cache value is set, add it to hidden field\n        cache_video_uri.val(value.cached || '');\n        console.log('cache_video_uri: ' + cache_video_uri.val());\n\n        //Show cached video if any, otherwise the stored video, if any\n        if (value.cached === '') {\n\n            console.log('cached value empty');\n\n            if (value.stored !== '') {\n\n                //build full path to get video from private app folder depending on platform\n                switch (window.device.platform) {\n                    case EC.Const.ANDROID:\n\n                        video_full_path_uri = EC.Const.ANDROID_APP_PRIVATE_URI + EC.Const.VIDEO_DIR + window.localStorage.project_name + '/' + value.stored;\n\n                        /** Copy video to cache folder to make it playable (rename it using timestamp).\n                         *    Due to permission issues, on Android files are not accessible by other\n                         * application\n                         *  Since Android support for <video> is pretty weak, we need to use an external\n                         * video player app top play the video\n                         *  (Whatever app capable of playing the video is installed on the device will be\n                         * triggered via an intent)\n                         */\n\n                        EC.Notification.showProgressDialog();\n                        $.when(EC.File.copyVideo(video_full_path_uri)).then(function (the_cached_filename) {\n\n                            //file has been copied, update view setting it as cached file to play\n                            cache_video_uri.val(the_cached_filename);\n                            play_video_btn.attr('data-video-path', the_cached_filename);\n                            play_video_btn.removeClass('ui-disabled');\n\n                            EC.Notification.hideProgressDialog();\n\n                        });\n                        break;\n\n                    case EC.Const.IOS:\n                        //build full path (file is stored in persisten storage (Documents folder))\n                        video_full_path_uri = EC.Const.IOS_APP_PRIVATE_URI + EC.Const.VIDEO_DIR + window.localStorage.project_name + '/' + value.stored;\n\n                        //add source to HTML5 video tag, 'file://' needs to be aded for file access\n                        //TODO: on first load, the preview image for the video, bug?\n                        ios_video_player.attr('src', 'file://' + video_full_path_uri);\n\n                        /*this is causing the video to open automatically on iOS7,\n                         * it is here because the video preview does not work on iOS 8 without it\n                         */\n                        if (parseFloat(window.device.version) >= 8) {\n                            ios_video_player.load();\n                        }\n\n                        //show video player wrapper\n                        ios_video_player_wrapper.removeClass('hidden');\n                        break;\n                }\n            }\n            else {\n                play_video_btn.addClass('ui-disabled');\n                ios_video_player_wrapper.addClass('hidden');\n            }\n\n        }\n        else {\n\n            switch (window.device.platform) {\n\n                case EC.Const.ANDROID:\n                    //render the cached video\n                    _renderVideo(value.cached);\n                    break;\n\n                case EC.Const.IOS:\n                    ios_video_player_wrapper.removeClass('hidden');\n                    break;\n\n            }\n\n        }\n\n        //request temporary folder from file system based on platform\n        //todo: this will change on iOS with the next release to match Android I suppose\n        if (window.device.platform === EC.Const.IOS) {\n\n            window.requestFileSystem(LocalFileSystem.TEMPORARY, 0, function (the_file_system) {\n\n                console.log(JSON.stringify(the_file_system));\n                cached_path = the_file_system.root.nativeURL;\n                console.log('nativeURL: ' + cached_path);\n            }, function (error) {\n                console.log(JSON.stringify(error));\n            });\n\n        }\n        else {\n            //on Android only\n            window.resolveLocalFileSystemURL(cordova.file.externalCacheDirectory, function (the_file_system) {\n\n                console.log(JSON.stringify(the_file_system));\n                cached_path = the_file_system.nativeURL;\n                console.log('nativeURL: ' + cached_path);\n            }, function (error) {\n                console.log(JSON.stringify(error));\n            });\n        }\n\n\n        //Success callback\n        var onCaptureVideoSuccess = function (the_media_object) {\n\n            var cache_video_uri = $('div#input-video input#cached-video-uri');\n\n            console.log(cache_video_uri.val());\n\n            console.log(JSON.stringify(the_media_object[0]));\n\n            video_sd_path = the_media_object[0].fullPath;\n\n            EC.Notification.showProgressDialog();\n\n            //move video to cache folder (temporary storage)\n            $.when(EC.File.moveVideo(video_sd_path, cache_video_uri.val())).then(function (the_cached_video_path) {\n\n                if (window.device.platform === EC.Const.IOS) {\n\n                    ios_video_player_wrapper.removeClass('hidden');\n\n                    //request temporary folder from file system\n                    window.requestFileSystem(LocalFileSystem.TEMPORARY, 0, function (the_file_system) {\n\n                        //imp! since Cordova 3.5+ 'fullPath' became nativeURL\n                        var temp_cache_path = the_file_system.root.nativeURL;\n\n                        var video_full_path = temp_cache_path + '/' + the_cached_video_path;\n\n                        ios_video_player.attr('src', video_full_path);\n\n                        cache_video_uri.val(the_cached_video_path);\n                        EC.Notification.hideProgressDialog();\n\n                    }, function (error) {\n                        console.log(JSON.stringify(error));\n                        EC.Notification.hideProgressDialog();\n                    });\n                }\n\n                if (window.device.platform === EC.Const.ANDROID) {\n\n                    //update cached video uri to use always the same name\n                    //when taking more videos for the same input and avoid several cached videos\n                    cache_video_uri.val(the_cached_video_path);\n                    play_video_btn.attr('data-video-path', the_cached_video_path);\n                    play_video_btn.removeClass('ui-disabled');\n                    EC.Notification.hideProgressDialog();\n                }\n\n            });\n\n        };\n\n        var onCaptureVideoError = function (error) {\n            console.log(error.message);\n        };\n\n        //play button handler (only on Android)\n        //TODO: on kitkat maybe <video> ha got proper support, run some tests\n        if (window.device.platform === EC.Const.ANDROID) {\n\n            play_video_btn.off().on('vclick', function () {\n\n                var current_cached_video = $(this).attr('data-video-path');\n\n                //request temporary folder from file system based on platform\n\n                //Android only\n                window.resolveLocalFileSystemURL(cordova.file.externalCacheDirectory, function (the_file_system) {\n\n                    var temp_cache_path = the_file_system.nativeURL;\n                    var video_full_path = temp_cache_path + '/' + current_cached_video;\n\n                    window.plugins.videoPlayer.play(video_full_path);\n\n                }, function (error) {\n                    console.log(JSON.stringify(error));\n                });\n\n            });\n        }\n\n        //open camera app on click\n        video_btn.off().on('vclick', function () {\n\n            //record 1 video at a time\n            var options = {\n                limit: 1\n                //duration: 30//set duration to a maximum of 30 seconds\n            };\n            // start video capture\n            navigator.device.capture.captureVideo(onCaptureVideoSuccess, onCaptureVideoError, options);\n        });\n    };\n\n    return module;\n\n}(EC.InputTypes));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n\n/**\n *\n * @module EC\n * @submodule Inputs\n *\n */\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\"use strict\";\n\n\t\t/*\n\t\t * get cache value from localStorage by the passed position\n\t\t *\n\t\t * @method getCachedInputValue\n\t\t * @param {int} the input position attribute in the form input sequence\n\t\t * @return {Object} {_id: <the input id>, type: <the input type>, value: <the current value cached>, position : <the input position property>}\n\t\t */\n\t\tmodule.getCachedInputValue = function(the_position) {\n\n\t\t\tvar values;\n\t\t\tvar position = parseInt(the_position, 10);\n\t\t\tvar index = position - 1;\n\t\t\tvar i;\n\t\t\tvar iLength;\n\t\t\tvar empty_value = {\n\t\t\t\t_id : \"\",\n\t\t\t\ttype : \"\",\n\t\t\t\tvalue : EC.Const.SKIPPED,\n\t\t\t\tposition : \"\",\n\t\t\t\tis_primary_key : \"\"\n\t\t\t};\n\n\t\t\t//catch Chrome error `Uncaught SyntaxError: Unexpected end of input` when parsing empty content\n\t\t\ttry {\n\t\t\t\tvalues = JSON.parse(window.localStorage.inputs_values);\n\n\t\t\t\t/* if index is out of bounds return false as value cannot be found:\n\t\t\t\t * a case scenario is when the user leaves a form half way through it but he wants to save the progress\n\t\t\t\t * Any value not found will be saved as empty string in the db\n\t\t\t\t */\n\t\t\t\tif (values[index] === undefined) {\n\t\t\t\t\treturn empty_value;\n\t\t\t\t}\n\n\t\t\t\t//search all values where the passed position matches\n\t\t\t\tiLength = values.length;\n\t\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\t\t//if values[i] is null, this input was skipped by a jump so create an empty one\n\t\t\t\t\tif (values[i] === null) {\n\t\t\t\t\t\tvalues[i] = empty_value;\n\t\t\t\t\t}\n\n\t\t\t\t\t//@bug Android 2.3 :/ should be solved parsing values to integer\n\t\t\t\t\tif (parseInt(values[i].position, 10) === position) {\n\n\t\t\t\t\t\tif (window.localStorage.edit_mode) {\n\n\t\t\t\t\t\t\twindow.localStorage.edit_id = values[i]._id;\n\t\t\t\t\t\t\twindow.localStorage.edit_type = values[i].type;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//return the value object found\n\t\t\t\t\t\treturn values[i];\n\n\t\t\t\t\t}\n\n\t\t\t\t}//end for each input values\n\n\t\t\t\t//return an empty value if no position match found, meaning the value was not cache because skipped by a jump\n\t\t\t\treturn empty_value;\n\n\t\t\t} catch(error) {\n\t\t\t\t//Handle errors here\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Inputs));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n\n/**\n *\n * @module EC\n * @submodule Inputs\n *\n */\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\"use strict\";\n\n\t\t//getCurrentValue\n\t\tmodule.getCloneValue = function(the_type) {\n\n\t\t\tvar type = the_type;\n\t\t\tvar test;\n\t\t\tvar value;\n\n\t\t\tswitch(type) {\n\n\t\t\t\tcase EC.Const.TEXT:\n\t\t\t\t\tvalue = $('div.clone input#text-clone').val();\n\t\t\t\t\tbreak;\n\t\t\t\tcase EC.Const.TEXTAREA:\n\t\t\t\t\tvalue = $('div.clone textarea#textarea-clone').val();\n\t\t\t\t\tbreak;\n\t\t\t\tcase EC.Const.INTEGER:\n\t\t\t\t\tvalue = $('div.clone input#integer-clone').val();\n\t\t\t\t\tbreak;\n\t\t\t\tcase EC.Const.DECIMAL:\n\t\t\t\t\tvalue = $('div.clone input#decimal-clone').val();\n\t\t\t\t\tbreak;\n\t\t\t\tcase EC.Const.BARCODE:\n\t\t\t\t\tvalue = $('div.clone input#scan-result-confirm').val();\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn value;\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Inputs));\n","/*global $, jQuery*/\n/**\n *\n * @module EC\n * @submodule Inputs\n *\n */\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = (function (module) {\n    'use strict';\n\n    /* Get the current input value based on the input type\n     *\n     * @return - a single value or an array of values based on the type passed\n     */\n    module.getCurrentValue = function (the_type) {\n\n        var type = the_type;\n        var values = [];\n        var checkboxes_values = [];\n        var branch_form;\n        var branch_entries;\n        var current_value;\n        var got_value;\n        var input_holder;\n\n        switch (type) {\n\n            case EC.Const.TEXT:\n                values.push($('div#input-text input').val());\n                got_value = values[0].trim();\n                break;\n\n            case EC.Const.TEXTAREA:\n                values.push($('div#input-textarea textarea').val());\n                got_value = values[0].trim();\n                break;\n\n            case EC.Const.INTEGER:\n                values.push($('div#input-integer input').val());\n                got_value = values[0].trim();\n                break;\n\n            case EC.Const.DECIMAL:\n                values.push($('div#input-decimal input').val());\n                got_value = values[0].trim();\n                break;\n\n            case EC.Const.DATE:\n                values.push($('div#input-date input').val());\n                got_value = values[0];\n                break;\n\n            case EC.Const.TIME:\n                values.push($('div#input-time input').val());\n                got_value = values[0];\n                break;\n\n            case EC.Const.RADIO:\n\n                input_holder = $('div#input-radio input[type=radio]:checked');\n\n                /* single selection radio: grab both value and 'label':\n                 * value is needed for the jumps/validation and label will be saved and displayed to users\n                 */\n                current_value = {\n                    value: '',\n                    index: ''\n                };\n                current_value.value = input_holder.val();\n                current_value.index = input_holder.attr('data-index');\n\n                //if no value selected among the radio options, create an empty object with NO_OPTION_SELECTED label\n                if (current_value.value === undefined) {\n                    current_value.value = EC.Const.NO_OPTION_SELECTED;\n                    current_value.index = EC.Const.NO_OPTION_SELECTED;\n                } else {\n                    current_value.value.trim();\n                    current_value.index.trim();\n                }\n\n                values.push(current_value);\n\n                got_value = values[0];\n                break;\n\n            //multiple selection checkboxes\n            case EC.Const.CHECKBOX:\n\n                /*\n                 * Get all the selected checkboxes. Checkboxes jumps are mapped against the value, not the index, so use its label\n                 */\n                $('div#input-checkbox input[type=checkbox]:checked').each(function () {\n                    checkboxes_values.push({\n                        value: $(this).val().trim(),\n                        label: $(this).parent().text().trim()\n                    });\n                });\n\n                //cache empty string if no checkboxes are selected\n                values.push((checkboxes_values.length === 0) ? EC.Const.NO_OPTION_SELECTED : checkboxes_values);\n\n                //return array of object (one per each selected checkbox)\n                got_value = values[0];\n                break;\n\n            case EC.Const.DROPDOWN:\n\n                input_holder = $('div#input-dropdown select option:selected');\n\n                /* single selection dropdown' grab both value and index:\n                 * index is needed for the jumps/validation and value will be saved and displayed to users (linked to label)\n                 */\n                current_value = {\n                    value: '',\n                    index: ''\n                };\n\n                current_value.value = input_holder.val();\n                current_value.index = input_holder.attr('data-index');\n\n                //if the value is '0', for consistency set it to a default for unselected option\n                if (current_value.index === '0') {\n                    current_value.index = EC.Const.NO_OPTION_SELECTED;\n                }\n\n                values.push(current_value);\n\n                got_value = values[0];\n                break;\n\n            case EC.Const.BARCODE:\n                current_value = $('div#input-barcode input.scan-result').val();\n                values.push(current_value);\n                //console.log('barcode current value is: ' + current_value);\n                got_value = values[0];\n                break;\n\n            case EC.Const.LOCATION:\n\n                //store location as csv string\n                current_value = EC.DevicePosition.getCoordsFormattedText();\n                values.push(current_value);\n                //console.log('location current value is: ' + current_value);\n                got_value = values[0];\n                break;\n\n            case EC.Const.AUDIO:\n\n                if (EC.Utils.isChrome()) {\n\n                    current_value = {\n                        cached: '...audio cached  uri...',\n                        stored: '...audio stored uri...'\n                    };\n\n                } else {\n\n                    //console.log('getting audio file values');\n\n                    current_value = {\n                        cached: $('div#input-audio input#cached-audio-uri').val(),\n                        stored: $('div#input-audio input#stored-audio-uri').val()\n                    };\n\n                    //console.log('current_value ' + JSON.stringify(current_value));\n\n                }\n\n                values.push(current_value);\n                got_value = values[0];\n                break;\n\n            case EC.Const.VIDEO:\n\n                if (EC.Utils.isChrome()) {\n\n                    current_value = {\n                        cached: '...video cached  uri...',\n                        stored: '...video stored uri...'\n                    };\n\n                } else {\n\n                    console.log('getting video file values');\n\n                    current_value = {\n                        cached: $('div#input-video input#cached-video-uri').val(),\n                        stored: $('div#input-video input#stored-video-uri').val()\n                    };\n\n                    console.log('current_value ' + JSON.stringify(current_value));\n\n                }\n\n                values.push(current_value);\n                got_value = values[0];\n                break;\n\n            case EC.Const.PHOTO:\n\n                //keep track of both cache value(image uri currently on canvas) and store value (image uri on the database)\n                if (EC.Utils.isChrome()) {\n\n                    current_value = {\n                        cached: 'placeholder.jpg',\n                        stored: 'placeholder.jpg'\n                    };\n\n                } else {\n\n                    current_value = {\n                        cached: $('div#input-photo input#cached-image-uri').val(),\n                        stored: $('div#input-photo input#stored-image-uri').val()\n                    };\n\n                    console.log('current_value ' + JSON.stringify(current_value));\n\n                }\n\n                values.push(current_value);\n                got_value = values[0];\n                break;\n\n            case EC.Const.BRANCH:\n\n                //this is a branch form input, so its value is na object with the branch form name and the its total of entries\n                branch_form = JSON.parse(window.localStorage.branch_form);\n\n                //get branch entries for this form from DOM. If branch entries is NaN, it means we have no entries (0)\n                branch_entries = parseInt($('div#input-branch div#list-branch-entries-btn span span.branch-entries-count').text(), 10);\n\n                current_value = {\n                    branch_form_name: branch_form.name,\n                    branch_total_entries: isNaN(branch_entries) ? 0 : branch_entries\n                };\n\n                console.log(branch_entries);\n\n                values.push(current_value);\n                got_value = values[0];\n                break;\n\n        }//switch\n\n        return got_value;\n\n    };\n\n    return module;\n\n}(EC.Inputs));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/**\n *\n * @module EC\n * @submodule Inputs\n *\n */\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\"use strict\";\n\n\t\tmodule.getMainFormCurrentKeyValue = function(the_position) {\n\n\t\t\tvar index = the_position - 1;\n\t\t\tvar values = JSON.parse(window.localStorage.inputs_values);\n\n\t\t\treturn values[index].value;\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Inputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/**\n * @module EC\n * @submodule EC.Inputs\n */\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\"use strict\";\n\n\t\t/**\n\t\t * @method isEmptyPrimaryKey: Check whether a primary key exists in the array of values we are abut to save.\n\t\t */\n\t\tmodule.isEmptyPrimaryKey = function() {\n\n\t\t\tvar is_empty_primary_key = true;\n\t\t\tvar inputs_values;\n\t\t\tvar i;\n\t\t\tvar iLength;\n\n\t\t\t//catch Chrome error `Uncaught SyntaxError: Unexpected end of input` when parsing empty content\n\t\t\ttry {\n\t\t\t\tinputs_values = JSON.parse(window.localStorage.inputs_values);\n\t\t\t} catch(error) {\n\t\t\t\treturn is_empty_primary_key;\n\t\t\t}\n\n\t\t\tiLength = inputs_values.length;\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\t\n\t\t\t\t//if there is an input valus, check if it is a primary key (some values can be null in the case of jumps)\n\t\t\t\tif (inputs_values[i]) {\n\t\t\t\t\tif (parseInt(inputs_values[i].is_primary_key, 10) === 1) {\n\t\t\t\t\t\tis_empty_primary_key = (inputs_values[i].value === \"\") ? true : false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn is_empty_primary_key;\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Inputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n\n/**\n *\n * @module EC\n * @submodule Inputs\n *\n */\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\"use strict\";\n\n\t\tmodule.setCachedInputValue = function(the_value, the_position, the_type, is_primary_key_flag) {\n\t\t\t\n\t\t\tvar wls = window.localStorage;\n\t\t\tvar values;\n\t\t\tvar value = the_value;\n\t\t\tvar checkbox_values = [];\n\t\t\tvar position = parseInt(the_position, 10);\n\t\t\tvar index = position - 1;\n\t\t\tvar type;\n\t\t\tvar _id;\n\t\t\tvar is_primary_key = is_primary_key_flag;\n\t\t\tvar is_genkey_hidden = EC.Utils.isFormGenKeyHidden(window.localStorage.form_id);\n\t\t\tvar i;\n\t\t\tvar iLength;\n\n\t\t\tif (wls.edit_mode) {\n\n\t\t\t\t_id = wls.edit_id;\n\t\t\t\ttype = wls.edit_type;\n\n\t\t\t} else {\n\n\t\t\t\t_id = '';\n\t\t\t\ttype = the_type;\n\n\t\t\t}\n\n\t\t\t//if the value is an object from either dropdown or radio inputs, cache the value only (index is needed only for jumps)\n\t\t\tif (type === EC.Const.DROPDOWN || type === EC.Const.RADIO) {\n\t\t\t\tvalue = value.value;\n\t\t\t}\n\n\t\t\t//if the value is an array from checkboxes, cache an array of the labels\n\t\t\tif (type === EC.Const.CHECKBOX) {\n\n\t\t\t\t//if any checkbox was selected, get it, otherwise do nothing and let the value be EC.Const.NO_OPTION_SELECTED\n\t\t\t\tif (value !== EC.Const.NO_OPTION_SELECTED) {\n\n\t\t\t\t\tiLength = value.length;\n\t\t\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\t\t\tcheckbox_values.push(value[i].value);\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = checkbox_values;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//catch Chrome error `Uncaught SyntaxError: Unexpected end of input` when parsing empty content\n\t\t\ttry {\n\t\t\t\tvalues = JSON.parse(wls.inputs_values);\n\n\t\t\t} catch(error) {\n\t\t\t\t//Handle errors here\n\t\t\t\tvalues = [];\n\t\t\t}\n\t\t\t\n\t\t\t//TODO: check against values length??? try when hidden key is last element of the form\n\t\t\tif (values[index] !== null && index < values.length) {\n\n\t\t\t\t//if the values already is cached in inputs_values AND it is a primary_key AND it is a hidden auto generated key, do not override it but use that same value\n\t\t\t\t//This happens when the user is editing a form with an autogen key hidden, we do no want to override it\n\t\t\t\tif (values[index].is_primary_key === 1 && is_genkey_hidden === 1) {\n\t\t\t\t\tvalue = values[index].value;\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues[index] = {\n\t\t\t\t\t\t_id : _id,\n\t\t\t\t\t\ttype : type,\n\t\t\t\t\t\tvalue : value,\n\t\t\t\t\t\tposition : position,\n\t\t\t\t\t\tis_primary_key : is_primary_key\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvalues[index] = {\n\t\t\t\t\t_id : _id,\n\t\t\t\t\ttype : type,\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tposition : position,\n\t\t\t\t\tis_primary_key : is_primary_key\n\t\t\t\t};\n\t\t\t}\n\n\t\t\twls.inputs_values = JSON.stringify(values);\n\t\t\tconsole.log(\"input_values: \" + wls.inputs_values);\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Inputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\"use strict\";\n\n\t\tvar _isUniqueValue = function(the_value) {\n\n\t\t\tvar primary_keys = [];\n\t\t\tvar value = the_value;\n\t\t\tvar unique = true;\n\n\t\t\t//get Hierarchy (main) primary keys\n\t\t\tprimary_keys = JSON.parse(window.localStorage.primary_keys);\n\n\t\t\t//check if the current value clashes a global primary key\n\t\t\tif (primary_keys.indexOf(value) !== -1) {\n\t\t\t\tunique = false;\n\t\t\t}\n\n\t\t\treturn unique;\n\t\t};\n\n\t\tmodule.validateValue = function(the_input, the_value) {\n\n\t\t\tvar self = this;\n\t\t\tvar input = the_input;\n\t\t\tvar current_value = the_value;\n\t\t\tvar clone_value = \"\";\n\t\t\tvar is_primary_key = $('span.label').attr('data-primary-key');\n\t\t\tvar validation = {};\n\n\t\t\t//get value from object in the case of a dropdown, radio or checkbox\n\t\t\tif (input.type === EC.Const.DROPDOWN || input.type === EC.Const.RADIO || input.type === EC.Const.CHECKBOX) {\n\t\t\t\tcurrent_value = current_value.value;\n\t\t\t}\n\n\t\t\t//if we need to check for a double entry, get clone value\n\t\t\tif (parseInt(input.has_double_check, 10) === 1) {\n\t\t\t\tclone_value = self.getCloneValue(input.type);\n\t\t\t}\n\n\t\t\t//validate input\n\t\t\tvalidation = EC.Utils.isValidValue(input, current_value, clone_value);\n\n\t\t\tif (!validation.is_valid) {\n\t\t\t\t//value not valid, return\n\t\t\t\treturn validation;\n\t\t\t}\n\n\t\t\t//check if this input value is a primary key field: if it is, check uniqueness (skip when we are editing)\n\t\t\tif (is_primary_key === 'true' && !window.localStorage.edit_mode) {\n\n\t\t\t\tif (!_isUniqueValue(current_value)) {\n\n\t\t\t\t\t//primary key value already exist, return\n\t\t\t\t\tvalidation = {\n\t\t\t\t\t\tis_valid : false,\n\t\t\t\t\t\tmessage : EC.Localise.getTranslation(\"value_exist\")\n\t\t\t\t\t};\n\n\t\t\t\t\t//on Chrome native alert is not working: dump to console error message\n\t\t\t\t\tconsole.log(\"Error: value already exists\");\n\n\t\t\t\t\treturn validation;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn validation;\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Inputs));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/**\n * @module EC\n * @submodule EC.Inputs\n */\nvar EC = EC || {};\nEC.Inputs = EC.Inputs || {};\nEC.Inputs = ( function(module) {\"use strict\";\n\n\t\t/**\n\t\t * @method valuesMatch\n\t\t */\n\t\tmodule.valuesMatch = function(the_cached_value, the_current_value, the_input_type) {\n\n\t\t\tvar cached_value = the_cached_value;\n\t\t\tvar current_value = the_current_value;\n\t\t\tvar type = the_input_type;\n\t\t\tvar is_matching = false;\n\t\t\tvar i;\n\t\t\tvar j;\n\t\t\tvar iLength;\n\t\t\tvar jLength;\n\t\t\tvar matches_count = 0;\n\n\t\t\tswitch(type) {\n\n\t\t\t\tcase EC.Const.DROPDOWN:\n\n\t\t\t\t\tif (current_value.label === cached_value.value) {\n\t\t\t\t\t\tis_matching = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase EC.Const.RADIO:\n\n\t\t\t\t\tif (current_value.label === cached_value.value) {\n\t\t\t\t\t\tis_matching = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase EC.Const.CHECKBOX:\n\n\t\t\t\t\t//check if ALL the checkbox values match. A single difference might trigger a different jump\n\t\t\t\t\tiLength = current_value.length;\n\t\t\t\t\tjLength = cached_value.value.length;\n\n\t\t\t\t\tif (iLength === jLength) {\n\n\t\t\t\t\t\tfor ( i = 0; i < iLength; i++) {\n\t\t\t\t\t\t\tfor ( j = 0; j < jLength; j++) {\n\t\t\t\t\t\t\t\tif (current_value[i].label.trim() === cached_value.value[j].trim()) {\n\t\t\t\t\t\t\t\t\tmatches_count++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (matches_count === iLength) {\n\t\t\t\t\t\t\tis_matching = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t// case EC.Const.LOCATION:\n\t\t\t\t// //TODO: handle location\n\t\t\t\t// break;\n\t\t\t\tdefault:\n\t\t\t\t\tif (cached_value === current_value) {\n\t\t\t\t\t\tis_matching = true;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\treturn is_matching;\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Inputs));\n","var EC = EC || {};\nEC.Project = EC.Project || {};\nEC.Project = (function (module) {\n    'use strict';\n\n    function _projectBackupFeedback(is_positive) {\n\n        var restore_from_backup_btn = $('div#forms div#project-options ul li#restore-data-from-backup');\n        var mail_backup_btn = $('div#forms div#project-options ul li#email-backup');\n\n        //close panel\n        $('div#forms div#project-options').panel('close');\n        if (is_positive) {\n            EC.Notification.showAlert(EC.Localise.getTranslation('success'), EC.Localise.getTranslation('project_backup_success'));\n\n            //enable 'restore from backup' button and 'email backup'\n            restore_from_backup_btn.removeClass('ui-disabled');\n            mail_backup_btn.removeClass('ui-disabled');\n        } else {\n            EC.Notification.showAlert(EC.Localise.getTranslation('error'), EC.Localise.getTranslation('generic_error'));\n        }\n    }\n\n    module.backupCurrentProject = function () {\n\n        EC.Notification.showProgressDialog();\n\n        var forms = JSON.parse(window.localStorage.forms);\n        var project_name = window.localStorage.project_name;\n        var project_id = parseInt(window.localStorage.project_id, 10);\n\n        $.when(EC.File.backup(forms, project_name, project_id)).then(function () {\n            EC.Notification.hideProgressDialog();\n            _projectBackupFeedback(true);\n        }, function () {\n            EC.Notification.hideProgressDialog();\n            _projectBackupFeedback(false);\n        });\n    };\n\n    return module;\n\n}(EC.Project));\n","var EC = EC || {};\nEC.Project = EC.Project || {};\nEC.Project = (function (module) {\n    'use strict';\n\n    var project_xml_URL = '';\n    var projects = [];\n\n    var _bindActionBarBtns = function () {\n\n        var nav_drawer_btn = $('div#index div[data-role=\"header\"] div[data-href=\"home-settings\"]');\n        var add_project_btn = $('div#index div[data-role=\"header\"] div.ui-btn-right[data-href=\"add-project\"]');\n        var settings_btn = $('div.home-settings ul li div[data-href=\"settings\"]');\n\n        //bind left sidebar open/close\n        nav_drawer_btn.off().on('vclick', function (e) {\n\n            //we are using a class instead of an id because there is a bug with the panel not working when navigating the app\n            var panel = $('.home-settings');\n\n            panel.panel('open');\n            //bind add project button (action bar)\n            settings_btn.off().one('vclick', function (e) {\n                EC.Routing.changePage(EC.Const.SETTINGS_VIEW);\n            });\n\n            //test closing panel globally: there is bug (panel does not close tapping off the panel) using the built in jqm methods, so this hack is needed\n            //docs: http://demos.jquerymobile.com/1.3.2/widgets/panels/\n            $('.ui-panel-dismiss-open').off().on('vclick', function () {\n                panel.panel('close');\n            });\n        });\n\n        //bind add project button (action bar)\n        add_project_btn.off().one('vclick', function (e) {\n            window.localStorage.back_nav_url = '#refresh';\n            EC.Routing.changePage(EC.Const.ADD_PROJECT_VIEW);\n        });\n\n    };\n\n    function _autoload(the_project_to_autoload) {\n\n        var project_names = JSON.parse(window.localStorage.project_names);\n\n        var project_to_autoload = window.decodeURI(the_project_to_autoload);\n        var project_name;\n        var deferred = new $.Deferred();\n        var project_params = project_to_autoload.split('/');\n\n        //parse project name from full project xml url\n        project_name = project_params[project_params.length - 1];\n        project_name = project_name.split('.');\n        project_name = project_name[0];\n\n        //There is a project to autoload: warn user if the project is already loaded on\n        // the device\n        console.log('Project names **************************************');\n        console.log(JSON.stringify(project_names));\n        if (EC.Utils.inArray(project_names, project_name, false)) {\n            deferred.reject();\n        }\n        else {\n\n            //double check if have an internet connection just in case\n            if (EC.Utils.hasConnection()) {\n\n                //testing on Chrome?\n                if (EC.Utils.isChrome()) {\n                    console.log('Testing on Chrome *****************************');\n                    project_xml_URL = 'xml/' + project_name + '.xml';\n                }\n\n                project_xml_URL = project_to_autoload;\n\n                //all good, load project on device\n                $.when(EC.Project.request(project_xml_URL)).then(function () {\n                    // Commit project to database\n                    $.when(EC.Structure.commitAll()).then(function () {\n                        deferred.resolve();\n\n\n                    });\n                }, function () {\n                    //request failed\n                    deferred.reject();\n                });\n\n            }\n            else {\n                EC.Notification.showAlert(EC.Localise.getTranslation('error'), EC.Localise.getTranslation('connection_lost'));\n                deferred.reject();\n            }\n        }\n\n        return deferred.promise();\n    }\n\n    module.getList = function () {\n\n        //@bug in Chrome where this function is called twice, I have no idea why\n        console.log('EC.Project.getList() called ***********************************');\n\n        var self = this;\n        var project_to_autoload;\n        var project_server_url;\n        var project_xml_URL;\n\n        //remove cached project names\n        // window.localStorage.removeItem('project_names');\n\n        //remove cached current view\n        window.localStorage.removeItem('current_view_url');\n\n        //clear project upload URL\n        window.localStorage.removeItem('upload_URL');\n\n        //load a project from custom URL scheme on device?\n        if (!EC.Utils.isChrome()) {\n            project_to_autoload = window.localStorage.autoload_project_url;\n        }\n        else {\n            //testing on Chrome\n            project_to_autoload = EC.Utils.getParameterByName('project');\n        }\n\n        //select all project on device\n        $.when(EC.Select.getProjects()).then(function (the_projects) {\n\n            //local variable projects?\n            var projects = the_projects;\n            var project_names = [];\n            var i;\n            var iLength;\n\n            //cache projects in localStorage, or empty array if none yet\n            if (projects.length > 0) {\n                iLength = projects.length;\n                for (i = 0; i < iLength; i++) {\n                    project_names.push(projects[i].name);\n                }\n            }\n            window.localStorage.project_names = JSON.stringify(project_names);\n            console.log('Window Project names **************************************');\n            console.log(JSON.stringify(window.localStorage.project_names));\n\n            if (project_to_autoload === '') {\n\n                //no project to autoload? we are done, sho list of projects on the device\n                if (projects.length > 0) {\n                    self.renderList(projects);\n                }\n                else {\n                    self.renderEmptyList();\n                }\n\n            }\n            else {\n\n                //show loader we are requesting a project automatically\n                EC.Notification.showProgressDialog(EC.Localise.getTranslation('wait'), EC.Localise.getTranslation('loading_project') + '/n' + project_to_autoload);\n\n                $.when(_autoload(project_to_autoload)).then(function () {\n\n                    //add latest project to project list\n                    projects.push({\n                        _id: EC.Parse.project.insertId,\n                        name: EC.Parse.project.name,\n                        total_branch_forms: EC.Parse.project.total_branch_forms,\n                        total_hierarchy_forms: EC.Parse.project.total_hierarchy_forms\n                    });\n\n                    //remove project from localStorage (iOS only)\n                    window.localStorage.autoload_project_url = '';\n\n                    EC.Notification.hideProgressDialog();\n                    //add new project to render\n                    self.renderList(projects);\n\n                }, function () {\n                    //we get here when trying to autoload a project already on the device, just\n                    // render stored projects\n                    EC.Notification.showAlert(EC.Localise.getTranslation('error'), EC.Localise.getTranslation('project_already_loaded'));\n                    EC.Notification.hideProgressDialog();\n                    self.renderList(projects);\n\n                    //remove project from localStorage (iOS only)\n                    window.localStorage.ios_project_form_url = '';\n                });\n\n            }\n\n        });\n\n    };\n\n    module.renderList = function (the_projects) {\n\n        var project_names = [];\n        //build HTML\n        var HTML = '';\n        var i;\n        var iLength;\n        var dom_list = $('div#project-list ul');\n        var navbar = $('a.ui-btn-active span.ui-btn-inner');\n\n        projects = the_projects;\n\n        //bind buttons\n        _bindActionBarBtns();\n\n        $('div#empty-list').hide();\n\n        //dom_list.find('li').removeClass('ui-btn-active');\n        dom_list.empty();\n\n        for (i = 0,\n                 iLength = projects.length; i < iLength; i++) {\n\n            HTML += '<li data-icon=\"ep-next-page\" >';\n            HTML += '<a href=\"views/forms.html?project=' + projects[i]._id + '&name=' + projects[i].name + '\">' + projects[i].name;\n            HTML += '<span class=\"ui-li-count\">' + projects[i].total_hierarchy_forms;\n            HTML += '</span>';\n            HTML += '<p>' + projects[i].total_hierarchy_forms + EC.Localise.getTranslation('hierarchy_forms') + ', ' + projects[i].total_branch_forms + EC.Localise.getTranslation('branch_forms') + '</p>';\n            HTML += '</a>';\n            HTML += '</li>';\n\n            //cache the project names (unique)\n            project_names.push(projects[i].name);\n\n        }\n\n        //cache project names in localStorage, to be used when checking for project name\n        // uniqueness\n        window.localStorage.project_names = JSON.stringify(project_names);\n\n        //reset title in navbar\n        navbar.text(EC.Const.PROJECT_LIST);\n\n        dom_list.append(HTML);\n        dom_list.listview('refresh');\n\n        //remove navigation flags\n        window.localStorage.removeItem('current_position');\n        window.localStorage.removeItem('form_id');\n        window.localStorage.removeItem('form_name');\n        window.localStorage.removeItem('project_id');\n        window.localStorage.removeItem('project_name');\n        window.localStorage.removeItem('form_tree');\n\n        //Localise\n        if (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n            EC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n        }\n\n        window.setTimeout(function () {\n            $('body').removeClass('hidden');\n        }, 500);\n\n        console.log('Language set to ' + window.localStorage.DEVICE_LANGUAGE);\n\n    };//renderList\n\n    module.renderEmptyList = function () {\n\n        var dom_list = $('div#project-list ul');\n\n        //Localise\n        if (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n            EC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n        }\n\n        //bind buttons\n        _bindActionBarBtns();\n\n        //empty the list (if anything)\n        dom_list.empty();\n\n        //remove cached projects\n        $('div#index div#empty-list').show();\n\n        window.setTimeout(function () {\n            $('body').removeClass('hidden');\n        }, 500);\n\n        //load a project from custom URL scheme?\n        console.log('project to be loaded = ' + EC.Utils.getParameterByName('project'));\n\n        EC.Notification.hideProgressDialog();\n\n    };\n\n    /**\n     * delete project by project ID and project name\n     */\n    module.deleteProject = function () {\n\n        var project_id = parseInt(window.localStorage.project_id, 10);\n        var project_name = window.localStorage.project_name;\n\n        //@bug: panel closes itself on changePage, .panel('close') will stop the panel\n        // from working\n        $.when(EC.Delete.deleteProject(project_id, project_name)).then(function () {\n\n            EC.Notification.showToast(EC.Localise.getTranslation('project_deleted'), 'short');\n            window.localStorage.is_project_deleted = 1;\n            window.localStorage.back_nav_url = '#refresh';\n            EC.Routing.changePage(EC.Const.INDEX_VIEW);\n\n        }, function () {\n            EC.Notification.showAlert(EC.Localise.getTranslation('error'), EC.Localise.getTranslation('generic_error'));\n        });\n    };\n\n    return module;\n}(EC.Project));\n\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/**\n * @module EC\n * @submodule Project\n */\n\nvar EC = EC || {};\nEC.Project = EC.Project || {};\nEC.Project = ( function (module) {\n    \"use strict\";\n\n    module.loadRemoteXML = function (the_project_name) {\n\n        var cached_project_names;\n        var i;\n        var iLength;\n        var project_name = the_project_name;\n        var project_xml_URL;\n        var epicollect_server_url;\n\n        //if the project is already on the device, warn user and exit\n        try {\n            cached_project_names = JSON.parse(window.localStorage.project_names);\n            iLength = cached_project_names.length;\n            for (i = 0; i < iLength; i++) {\n\n                if (cached_project_names[i] === project_name) {\n                    EC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"project_already_loaded\"));\n                    return;\n                }\n            }\n        } catch (error) {\n            //no project yet\n            console.log(\"no projects on device yet\");\n        }\n\n\n        //if the project name is a full url, use that instead of app settings\n        if (EC.Utils.isURL(project_name)) {\n            project_xml_URL = project_name;\n        } else {\n            //get the project server url (default to http://plus.epicollect.net/)\n            epicollect_server_url = window.localStorage.project_server_url;\n            project_xml_URL = epicollect_server_url + project_name + '.xml';\n        }\n\n        //all good, load project on device\n        EC.Notification.showProgressDialog();\n        $.when(EC.Project.request(project_xml_URL)).then(function () {\n            // Commit project to database\n            $.when(EC.Structure.commitAll()).then(function () {\n                //redirect to project list\n                EC.Routing.changePage(EC.Const.INDEX_VIEW);\n\n            });\n        }, function () {\n            //request failed\n            //TODO\n            console.log(\"request failed\");\n        });\n\n    };\n\n    return module;\n\n}(EC.Project));\n","/*jslint vars: true , nomen: true, devel: true, plusplus:true*/\n/*global $, jQuery*/\n/**\n * @module EC\n * @submodule Project\n */\n\nvar EC = EC || {};\nEC.Project = EC.Project || {};\nEC.Project = ( function(module) {\"use strict\";\n\n\t\tvar load_project_btn;\n\t\tvar back_btn;\n\t\tvar input_value;\n\t\tvar autocomplete_spinning_loader;\n\t\tvar project_url;\n\n\t\tvar _load = function() {\n\n\t\t\tif (EC.Utils.hasConnection()) {\n\t\t\t\t_loadProjectFromXML();\n\t\t\t} else {\n\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"no_internet\"));\n\t\t\t\t//load_project_btn.off().one('vclick', _load);\n\t\t\t}\n\t\t};\n\n\t\t//Load the specified project via Ajax\n\t\tvar _loadProjectFromXML = function() {\n\n\t\t\tvar project_name = input_value.val();\n\n\t\t\t//empty project name\n\t\t\tif (project_name === \"\") {\n\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"project_empty_not_allowed\"));\n\t\t\t\tload_project_btn.off().one('vclick', _load);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// It has any kind of whitespace\n\t\t\tif (/\\s/.test(project_name)) {\n\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"project_no_spaces_allowed\"));\n\t\t\t\tload_project_btn.off().one('vclick', _load);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//load project from remote XML\n\t\t\tEC.Project.loadRemoteXML(project_name);\n\n\t\t};\n\t\t//loadProjectFromXML\n\n\t\tmodule.renderAddProjectView = function() {\n\n\t\t\tvar dom_list = $(\"div#add-project-content ul#projects-autocomplete\");\n\t\t\tvar request_timeout;\n\n\t\t\tload_project_btn = $(\"div#add-project div[data-role='header'] div.ui-btn-right[data-href='load-project-confirm']\");\n\t\t\tback_btn = $(\"div#add-project div[data-role='header'] div[data-href='back-btn']\");\n\t\t\tinput_value = $(\"div#add-project-content form div input[data-type='search']\");\n\t\t\tautocomplete_spinning_loader = $(\".autocomplete-spinner-loader\");\n\t\t\tproject_url = window.localStorage.project_server_url;\n\n\t\t\t//Localise\n\t\t\tif (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n\t\t\t\tEC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n\t\t\t}\n\n\t\t\tinput_value.val(\"\");\n\n            //populate lists with autocomplete suggestions based on project names on the server\n\t\t\tdom_list.on(\"listviewbeforefilter\", function(e, data) {\n\n\t\t\t    console.log(\"typing\");\n\n\t\t\t\tvar $ul = $(this);\n\t\t\t\tvar $input = $(data.input);\n\t\t\t\tvar value = $input.val();\n\t\t\t\tvar html = \"\";\n\n\t\t\t\t//wait a fifth of a second the user stops typing\n\t\t\t\tvar request_delay = 200;\n\n\t\t\t\t$ul.html(\"\");\n\n\t\t\t\t//trigger request with more than 2 chars\n\t\t\t\tif (value && value.length > 2) {\n\n\t\t\t\t    autocomplete_spinning_loader.removeClass(\"hidden\");\n\n\t\t\t\t\t$ul.html('<li class=\"autocomplete-spinner\"><i class=\"fa fa-spinner fa-spin\"></i></li>');\n\t\t\t\t\t$ul.listview(\"refresh\");\n\n\t\t\t\t\t/* Throttle requests as the user is typing on a phone. We want to send as fewer requests as possible:\n\t\t\t\t\t * Typing a new char will stop the previous ajax request, not tapping for a third of a second will let the request go through\n\t\t\t\t\t */\n\t\t\t\t\tclearTimeout(request_timeout);\n\t\t\t\t\trequest_timeout = setTimeout(function() {\n\n\t\t\t\t\t    console.log(\"requesting\");\n\n\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\turl : \"http://plus.epicollect.net/\" + \"projects?q=\" + value + \"&limit=25\",\n\t\t\t\t\t\t\tdataType : \"json\",\n\t\t\t\t\t\t\tcrossDomain : true,\n\t\t\t\t\t\t\tsuccess : function(response) {\n\n\t\t\t\t\t\t\t    autocomplete_spinning_loader.addClass(\"hidden\");\n\n\t\t\t\t\t\t\t\t$.each(response, function(i) {\n\t\t\t\t\t\t\t\t\thtml += \"<li class='h-nav-item'>\" + response[i].name + \"</li>\";\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t$ul.html(html);\n\t\t\t\t\t\t\t\t$ul.listview(\"refresh\");\n\t\t\t\t\t\t\t\t$ul.trigger(\"updatelayout\");\n\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terror : function(request, status, error) {\n\t\t\t\t\t\t\t     autocomplete_spinning_loader.addClass(\"hidden\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}, request_delay);\n\t\t\t\t}//if\n\t\t\t});\n\n\t\t\tdom_list.on('vclick', function(e) {\n\n\t\t\t\tif (e.target.tagName.toLowerCase() === \"li\") {\n\n\t\t\t\t\tinput_value.val(e.target.innerText);\n\t\t\t\t\tinput_value.attr(\"value\", e.target.innerText);\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t//Load project confirm button handler\n\t\t\tload_project_btn.off().on('vclick', _load);\n\n\t\t\tback_btn.off().one('vclick', function(e) {\n\n\t\t\t\twindow.localStorage.back_nav_url = \"#refresh\";\n\t\t\t\tEC.Routing.changePage(EC.Const.INDEX_VIEW, \"../\");\n\t\t\t});\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Project));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/*\n *\n *\n */\nvar EC = EC || {};\nEC.Project = EC.Project || {};\nEC.Project = (function (module) {\n    'use strict';\n\n    var project_xml_URL;\n    var deferred;\n\n    module.request = function (the_project_xml_url) {\n\n        project_xml_URL = the_project_xml_url;\n        console.log('doing request: ' + project_xml_URL);\n\n        deferred = new $.Deferred();\n\n        $.ajax({\n            url: project_xml_URL, //url\n            type: 'get', //method type post or get\n            crossDomain: true,\n            dataType: 'xml', //return data type\n            timeout: 30000, // stop after 30 seconds\n            success: function (data) {\n\n                var is_project_xml_valid = true;\n                var branch_forms = [];\n\n                //parse the xml\n                is_project_xml_valid = EC.Parse.parseXML(data);\n\n                //parse error? Alert user\n                if (is_project_xml_valid === false) {\n                    EC.Notification.hideProgressDialog();\n                    EC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"invalid_xml\"));\n                    deferred.reject();\n                    return;\n                }\n\n\n                deferred.resolve();\n\n            },\n            error: function (request, status, error) {\n\n                EC.Utils.sleep(1000);\n\n                EC.Notification.hideProgressDialog();\n\n                //show request error\n                console.log(status + \", \" + error);\n\n                switch (status) {\n\n                    case \"parsererror\":\n                        EC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"invalid_xml\"));\n                        break;\n                    case \"timeout\":\n                        EC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"connection_timeout\"));\n                        break;\n                    default:\n\n                        if (error === \"Page not found\") {\n                            EC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"project_not_found_on_server\") + window.localStorage.project_server_url);\n                            return;\n                        }\n\n                        if (error === \"Not Found\") {\n                            EC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"project_not_found\"));\n                            return;\n                        }\n\n                        //show unknow error if nothing match\n                        EC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"unknow_error\"));\n                }\n\n                deferred.reject();\n\n            }\n        });\n\n        return deferred.promise();\n\n    };\n\n    return module;\n\n}(EC.Project));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/**\n * @module EC\n * @submodule Project\n */\n\nvar EC = EC || {};\nEC.Project = EC.Project || {};\nEC.Project = ( function(module) {\"use strict\";\n\n\t\tmodule.restoreFromBackup = function() {\n\n\t\t\tvar project_name = window.localStorage.project_name;\n\t\t\tvar project_id = window.localStorage.project_id;\n\n\t\t\t//TODO: check if there is a backup\n\n\t\t\tvar _restoreFeedback = function(is_positive) {\n\n\t\t\t\tvar forms_list_items = $('div#forms-list ul li');\n\t\t\t\tvar project_id;\n\t\t\t\tvar HTML;\n\t\t\t\tvar forms;\n\t\t\t\tvar dom_list = $('div#forms-list ul');\n\n\t\t\t\t//get updated forms\n\t\t\t\tforms = JSON.parse(window.localStorage.forms);\n\t\t\t\tproject_id = parseInt(window.localStorage.project_id, 10);\n\n\t\t\t\tif (is_positive) {\n\t\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"success\"), EC.Localise.getTranslation(\"project_restored\"));\n\n\t\t\t\t\t//show forms list\n\t\t\t\t\t$.when(EC.Select.getForms(project_id)).then(function(the_forms, the_btn_states) {\n\t\t\t\t\t\tEC.Forms.renderList(the_forms, the_btn_states);\n\t\t\t\t\t\t$('div#forms div#project-options').panel(\"close\");\n\t\t\t\t\t});\n\n\t\t\t\t} else {\n\t\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"generic_error\"));\n\t\t\t\t}\n\n\t\t\t};\n\t\t\t\n\t\t\t//Show spinning loader\n\t\t\tEC.Notification.showProgressDialog();\n\n\t\t\t//delete existing data first\n\t\t\t$.when(EC.Delete.deleteAllEntries(EC.Const.RESTORE, project_name, project_id)).then(function(the_forms) {\n\n\t\t\t\t//Map local input ids against ref and cache them before restoring from backup\n\t\t\t\t$.when(EC.Select.getLocalInputIDs(the_forms)).then(function(the_input_ids) {\n\n\t\t\t\t\twindow.localStorage.local_input_ids = JSON.stringify(the_input_ids);\n\t\t\t\t\t\n\t\t\t\t\t//restore from backup file success\n\t\t\t\t\t$.when(EC.File.restoreFromBackup(project_name, project_id)).then(function() {\n\t\t\t\t\t\tEC.Notification.hideProgressDialog();\n\t\t\t\t\t\t_restoreFeedback(true);\n\t\t\t\t\t});\n\n\t\t\t\t});\n\t\t\t});\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Project));\n","/*global $, jQuery*/\n/**\n *\n *\n */\nvar EC = EC || {};\nEC.Settings = EC.Settings || {};\nEC.Settings = (function () {\n    'use strict';\n\n    var project_server_url;\n    var project_server_url_holder;\n    var pagination_radio_btns;\n    var selected_radio_value;\n    var save_btn;\n    var back_btn;\n    var version_name;\n    var version_name_label;\n    var project_name;\n    var header;\n    var enhance_map_checkbox;\n\n    var renderView = function () {\n\n        //set project server url\n        project_server_url = window.localStorage.project_server_url;\n        project_server_url_holder = $('div#settings').find('div#settings-values').find('input#project-server-url');\n        save_btn = $('div#settings div[data-role=\"header\"] div.ui-btn-right[data-href=\"save-settings\"]');\n        back_btn = $('div#settings div[data-role=\"header\"] div[data-href=\"back-btn\"]');\n        version_name_label = $('div#settings div#settings-values p#version-name span.version');\n        pagination_radio_btns = $('form#pagination-options input[type=\"radio\"]');\n        enhance_map_checkbox = $('div#settings div#settings-values input#enhanced-location-google-maps');\n        project_name = window.localStorage.project_name;\n        header = $('div#settings div[data-role=\"header\"] div[data-href=\"back-btn\"] span.project-name');\n\n        //show app version (we use a deferred object as on iOS the version plugins returns a value too late)\n        $.when(EC.Utils.getVersionName()).then(function (the_version_name) {\n            version_name_label.text(the_version_name);\n        });\n\n        project_server_url_holder.val(project_server_url);\n\n        //add project name to header (if a project is actually selected)\n        //if we go directly to the settings page without selecting a project first, project name would be undefined\n        if (project_name) {\n            header.text(project_name.trunc(EC.Const.PROJECT_NAME_MAX_LENGTH));\n        } else {\n            header.text(EC.Const.PROJECT_LIST);\n        }\n\n        //bind save button\n        save_btn.off().one('vclick', function (e) {\n\n            //cache user preferences todo better user a native storage for this a slocalStorage is not 100% reliable\n            window.localStorage.project_server_url = project_server_url_holder.val();\n            window.localStorage.is_enhanced_map_on = (enhance_map_checkbox.is(':checked')) ? 1 : 0;\n\n            //get the checked pagination radio\n            pagination_radio_btns.each(function (index) {\n\n                var checked = $(this).is(':checked');\n\n                if (checked) {\n                    console.log($(this).val());\n                    window.localStorage.QUERY_LIMIT = $(this).val();\n                }\n\n            });\n\n            //show toast on device\n            if (!EC.Utils.isChrome()) {\n                EC.Notification.showToast(EC.Localise.getTranslation('settings_saved_success'), 'short');\n            }\n\n            //go back to previuos page in history\n            if (window.localStorage.current_view_url) {\n                EC.Routing.changePage(window.localStorage.current_view_url);\n            } else {\n\n                //TODO: test this\n                //EC.Routing.changePage(EC.Const.INDEX_VIEW);\n                window.history.back(-1);\n            }\n\n        });\n\n        //bind back button\n        back_btn.off().one('vclick', function (e) {\n\n            if (window.localStorage.current_view_url) {\n                EC.Routing.changePage(window.localStorage.current_view_url);\n            } else {\n\n                //TODO: test this\n                //EC.Routing.changePage(EC.Const.INDEX_VIEW, '../');\n                window.history.back(-1);\n            }\n\n        });\n\n        //check (highlight) the radio button based on user preferences\n        pagination_radio_btns.each(function (index) {\n\n            if ($(this).val() === window.localStorage.QUERY_LIMIT) {\n                $(this).prop('checked', true).checkboxradio('refresh');\n            }\n        });\n\n        //Localise\n        if (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n            EC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n        }\n\n    };\n\n    return {\n        renderView: renderView\n    };\n\n}());\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device*/\n/*\n *\n * Comments here TODO\n *\n */\nvar EC = EC || {};\nEC.Upload = EC.Upload || {};\nEC.Upload = ( function(module) {\n\t\t\"use strict\";\n\n\t\tmodule.bindUploadButtons = function(the_has_hard_reload_flag) {\n\n\t\t\tvar self = this;\n\t\t\tvar back_button_label = $(\"div#upload div[data-role='header'] div[data-href='back-btn'] span\");\n\t\t\tvar hash;\n\t\t\tvar has_hard_reload = the_has_hard_reload_flag;\n\t\t\tvar media_dir;\n\t\t\tvar project_name = window.localStorage.project_name;\n\t\t\tvar project_id = parseInt(window.localStorage.project_id, 10);\n\n\t\t\tself.upload_data_btn = $('div#upload div#upload-options div#upload-data-btn');\n\t\t\tself.upload_images_btn = $('div#upload div#upload-options div#upload-images-btn');\n\t\t\tself.upload_audios_btn = $('div#upload div#upload-options div#upload-audios-btn');\n\t\t\tself.upload_videos_btn = $('div#upload div#upload-options div#upload-videos-btn');\n\t\t\tself.back_btn = $(\"div#upload div[data-role='header'] div[data-href='back-btn']\");\n\t\t\tself.all_synced_message = $('div#upload div#upload-options .all-synced-message');\n\n\t\t\thash = \"forms.html?project=\" + project_id + \"&name=\" + project_name;\n\t\t\tif (has_hard_reload) {\n\t\t\t\tback_button_label.text(\"Forms\");\n\t\t\t}\n\n\t\t\tif (window.localStorage.back_nav_url && window.localStorage.back_nav_url !== \"#refresh\") {\n\t\t\t\tback_button_label.text(\"Entries\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tback_button_label.text(\"Forms\");\n\t\t\t}\n\n\t\t\t//bind back button for navigating back from upload page\n\t\t\tself.back_btn.off().one('vclick', function(e) {\n\n\t\t\t\t//TODO: we have to decide what is better...go back to save feedback page or\n\t\t\t\t// entries list??\n\t\t\t\t//if (window.localStorage.back_nav_url && window.localStorage.back_nav_url !==\n\t\t\t\t// \"#refresh\") {\n\t\t\t\t//go back to entries list; back_nav_url is an url when user goes to upload page\n\t\t\t\t// after adding/editing an entry\n\t\t\t\t//EC.Routing.changePage(window.localStorage.back_nav_url);\n\t\t\t\t//} else {\n\t\t\t\t//go back to form list\n\t\t\t\twindow.history.back(-1);\n\t\t\t\t//}\n\n\t\t\t});\n\n\t\t\t//bind vclicks data upload\n\t\t\tself.upload_data_btn.off().on('vclick', function(e) {\n\n\t\t\t\t// if no internet connection, show warning and exit\n\t\t\t\tif (!EC.Utils.hasConnection()) {\n\t\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"no_internet\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t//reset rows count\n\t\t\t\tself.hierarchy_rows_to_sync=[];\n\t\t\t\tself.branch_rows_to_sync= [];\n\n\t\t\t\tEC.Notification.showProgressDialog(EC.Localise.getTranslation(\"uploaded\"), EC.Localise.getTranslation(\"wait\"));\n\n\t\t\t\tif (self.is_branch_entry) {\n\n\t\t\t\t\t//prepare branch entry\n\t\t\t\t\tself.prepareOneBranchEntry(self.current_branch_form.name, self.current_branch_entry);\n\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\t//prepare hierarchy entry\n\t\t\t\t\tself.prepareOneHierarchyEntry(self.current_form.name, self.current_entry);\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t//bind vclicks image upload\n\t\t\tself.upload_images_btn.off().on('vclick', function(e) {\n\n\t\t\t\t// if no internet connection, show warning and exit\n\t\t\t\tif (!EC.Utils.hasConnection()) {\n\n\t\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"no_internet\"));\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tEC.Notification.showProgressDialog(EC.Localise.getTranslation(\"uploaded\"), EC.Localise.getTranslation(\"wait\"));\n\n\t\t\t\t//post one image directly as it is already loaded in memory when requesting the\n\t\t\t\t// upload page\n\t\t\t\tmedia_dir = EC.Const.PHOTO_DIR;\n\t\t\t\tEC.File.uploadFile(self.current_image_file, media_dir);\n\n\t\t\t});\n\n\t\t\t//bind vclicks audio upload\n\t\t\tself.upload_audios_btn.off().on('vclick', function(e) {\n\n\t\t\t\t// if no internet connection, show warning and exit\n\t\t\t\tif (!EC.Utils.hasConnection()) {\n\t\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"no_internet\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tEC.Notification.showProgressDialog(EC.Localise.getTranslation(\"uploaded\"), EC.Localise.getTranslation(\"wait\"));\n\n\t\t\t\tmedia_dir = EC.Const.AUDIO_DIR;\n\t\t\t\tEC.File.uploadFile(self.current_audio_file, media_dir);\n\n\t\t\t});\n\n\t\t\t//bind vclicks video upload\n\t\t\tself.upload_videos_btn.off().on('vclick', function(e) {\n\n\t\t\t\t// if no internet connection, show warning and exit\n\t\t\t\tif (!EC.Utils.hasConnection()) {\n\t\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"no_internet\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tEC.Notification.showProgressDialog(EC.Localise.getTranslation(\"uploaded\"), EC.Localise.getTranslation(\"wait\"));\n\n\t\t\t\tmedia_dir = EC.Const.VIDEO_DIR;\n\t\t\t\tEC.File.uploadFile(self.current_video_file, media_dir);\n\n\t\t\t});\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Upload));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/*\n *\n * Comments here - todo\n *\n */\nvar EC = EC || {};\nEC.Upload = EC.Upload || {};\nEC.Upload = ( function(module) {\n\t\t\"use strict\";\n\n\t\tmodule.handleMedia = function() {\n\t\t\t\n\t\t\tvar self = this;\n\n\t\t\tself.audio_synced = true;\n\t\t\tself.photo_synced = true;\n\t\t\tself.video_synced = true;\n\n\t\t\tvar _audioCheck = function(the_audio) {\n\n\t\t\t\tvar deferred = new $.Deferred();\n\t\t\t\tself.current_audio_file = the_audio;\n\n\t\t\t\tif (!self.current_audio_file) {\n\n\t\t\t\t\tif (self.has_branches) {\n\t\t\t\t\t\t$.when(EC.Select.getOneBranchAudioFile(self.project_id, EC.Const.AUDIO)).then(function(the_audio) {\n\n\t\t\t\t\t\t\tself.current_audio_file = the_audio;\n\t\t\t\t\t\t\tself.is_branch_audio = true;\n\n\t\t\t\t\t\t\t//enable upload audio button\n\t\t\t\t\t\t\tself.upload_audios_btn.removeClass(\"ui-disabled\");\n\t\t\t\t\t\t\tself.audio_synced = false;\n\n\t\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t\t}, function() {\n\t\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\tself.is_branch_audio = false;\n\t\t\t\t\t//enable upload audio button\n\t\t\t\t\tself.upload_audios_btn.removeClass(\"ui-disabled\");\n\t\t\t\t\tself.audio_synced = false;\n\t\t\t\t\tdeferred.resolve();\n\t\t\t\t}\n\t\t\t\treturn deferred.promise();\n\t\t\t};\n\n\t\t\tvar _photoCheck = function(the_image) {\n\n\t\t\t\tvar deferred = new $.Deferred();\n\t\t\t\tself.current_image_file = the_image;\n\n\t\t\t\tif (!self.current_image_file) {\n\t\t\t\t\tif (self.has_branches) {\n\t\t\t\t\t\t$.when(EC.Select.getOneBranchPhotoFile(self.project_id, EC.Const.PHOTO)).then(function(the_image) {\n\n\t\t\t\t\t\t\tself.current_image_file = the_image;\n\t\t\t\t\t\t\tself.is_branch_image = true;\n\n\t\t\t\t\t\t\t//enable upload image button\n\t\t\t\t\t\t\tself.upload_images_btn.removeClass(\"ui-disabled\");\n\t\t\t\t\t\t\tself.photo_synced = false;\n\t\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t\t}, function() {\n\t\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\tself.is_branch_image = false;\n\t\t\t\t\t//enable upload image button\n\t\t\t\t\tself.upload_images_btn.removeClass(\"ui-disabled\");\n\t\t\t\t\tself.photo_synced = false;\n\t\t\t\t\tdeferred.resolve();\n\t\t\t\t}\n\t\t\t\treturn deferred.promise();\n\t\t\t};\n\n\t\t\tvar _videoCheck = function(the_video) {\n\n\t\t\t\tvar deferred = new $.Deferred();\n\t\t\t\tself.current_video_file = the_video;\n\n\t\t\t\tif (!self.current_video_file) {\n\n\t\t\t\t\tif (self.has_branches) {\n\t\t\t\t\t\t$.when(EC.Select.getOneBranchVideoFile(self.project_id, EC.Const.VIDEO)).then(function(the_video) {\n\n\t\t\t\t\t\t\tself.current_video_file = the_video;\n\t\t\t\t\t\t\tself.video_synced = false;\n\t\t\t\t\t\t\tself.is_branch_video = true;\n\n\t\t\t\t\t\t\t//enable upload audio button\n\t\t\t\t\t\t\tself.upload_videos_btn.removeClass(\"ui-disabled\");\n\n\t\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t\t}, function() {\n\t\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\tself.video_synced = false;\n\t\t\t\t\tEC.Upload.is_branch_video = false;\n\t\t\t\t\t//enable upload video button\n\t\t\t\t\tself.upload_videos_btn.removeClass(\"ui-disabled\");\n\t\t\t\t\tdeferred.resolve();\n\t\t\t\t}\n\t\t\t\treturn deferred.promise();\n\t\t\t};\n\n\t\t\t/*We are using a super safe approach to just fetch 1 single row (file) per media\n\t\t\t * type, and then fetch the next one recursively (like we did for data)\n\t\t\t *It is a bit slower but I will have only 1 element at a time in memory and it is\n\t\t\t * easier to recover from a failure (dropped connections, server down, phone\n\t\t\t * kills the app, etc)\n\t\t\t */\n\n\t\t\t$.when(EC.Select.getOneHierarchyMediaPerType(self.project_id)).then(function(the_image, the_audio, the_video) {\n\n\t\t\t\t//got media, enable buttons with media and look for branch file if no hierarchy\n\t\t\t\t// media found\n\t\t\t\tself.current_image_file = the_image;\n\t\t\t\tself.current_audio_file = the_audio;\n\t\t\t\tself.current_video_file = the_video;\n\n\t\t\t\t//if all media are synced, show all synced message\n\t\t\t\t$.when(_photoCheck(self.current_image_file), _audioCheck(self.current_audio_file), _videoCheck(self.current_video_file)).then(function() {\n\t\t\t\t\tif (!(self.audio_synced && self.photo_synced && self.video_synced)) {\n\t\t\t\t\t\tself.all_synced_message.addClass('hidden');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tself.all_synced_message.removeClass('hidden');\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}, function() {\n\n\t\t\t\t//TODO: no media found (image, audio, video are ALL empty)\n\t\t\t\t//do nothing yet\n\t\t\t\tself.all_synced_message.removeClass('hidden');\n\t\t\t});\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Upload));\n","var EC = EC || {};\nEC.Upload = (function (module) {\n    'use strict';\n\n    module.project_id = '';\n    module.project_name = '';\n    module.hierarchy_rows_to_sync = [];\n    module.branch_rows_to_sync = [];\n    module.main_rows_to_post = [];\n    module.main_entries = [];\n    module.hierarchy_forms = [];\n    module.action = EC.Const.START_HIERARCHY_UPLOAD;\n    module.current_entry = {};\n    module.current_branch_entry = {};\n    module.current_form = {};\n    module.current_branch_form = {};\n    module.has_branches = false;\n    module.audio_synced = '';\n    module.photo_synced = '';\n    module.video_synced = '';\n    module.current_image_file = '';\n    module.current_audio_file = '';\n    module.current_video_file = '';\n    module.upload_data_btn = '';\n    module.upload_images_btn = '';\n    module.upload_audios_btn = '';\n    module.upload_videos_btn = '';\n    module.upload_data_feedback = '';\n    module.back_btn = '';\n    module.all_synced_message = '';\n\n    //cache upload url for the current project in localStorage\n    module.setUploadURL = function (the_url) {\n        window.localStorage.upload_URL = the_url;\n    };\n\n    //get upload URL, when testing on Chrome returns 'test.php'\n    module.getUploadURL = function () {\n        return (!EC.Utils.isChrome()) ? window.localStorage.upload_URL : 'test.php';\n    };\n    return module;\n}(EC.Upload));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/*\n *\n * Comments here - todo\n *\n */\nvar EC = EC || {};\nEC.Upload = EC.Upload || {};\nEC.Upload = ( function(module) {\"use strict\";\n\n\t\tvar branch_form_name;\n\t\tvar project_id;\n\t\tvar hierarchy_entry_key_value;\n\t\t\n\t\tmodule.branch_rows_to_sync = [];\n\n\t\tmodule.postBranchEntries = function(the_hierarchy_entry_key_value) {\n\t\t\t\n\t\t\tvar self = this;\n\t\t\tbranch_form_name = self.branch_form_name;\n\t\t\tproject_id = parseInt(window.localStorage.project_id, 10);\n\t\t\thierarchy_entry_key_value = the_hierarchy_entry_key_value;\n\n\t\t\tEC.Select.getOneBranchEntry(branch_form_name, project_id, hierarchy_entry_key_value);\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Upload));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/*\n *\n * Comments here - todo\n *\n */\nvar EC = EC || {};\nEC.Upload = EC.Upload || {};\nEC.Upload = ( function(module) {\"use strict\";\n\n\t\tmodule.postOneBranchEntry = function() {\n\n\t\t\tvar self = this;\n\t\t\tvar upload_URL;\n\t\t\tvar project_id = parseInt(window.localStorage.project_id,10);\n\t\t\tconsole.log(self.branch_entry_post_obj);\n\n\t\t\tupload_URL = self.getUploadURL();\n\n\t\t\t//set upload URL for this project if not in localStorage yet\n\t\t\tif (!EC.Utils.isChrome() && !upload_URL) {\n\t\t\t\t$.when(EC.Select.getUploadURL(project_id)).then(function(the_project_url) {\n\t\t\t\t\t//enable upload data button\n\t\t\t\t\tconsole.log(\"Project URL is: \" + the_project_url);\n\t\t\t\t\tupload_URL = the_project_url;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//branch object ready to be posted\n\t\t\t$.ajax({\n\t\t\t\ttype : \"POST\",\n\t\t\t\turl : upload_URL,\n\t\t\t\tcrossDomain : true,\n\t\t\t\ttimeout : 20000, //timeout after 20 secs\n\t\t\t\tdata : $.param(self.branch_entry_post_obj), //use $.param() to convert the object to a query string (?key=value&key2=value2...)\n\t\t\t\tsuccess : function(response) {\n\n\t\t\t\t\t//server response is 1 when successful\n\t\t\t\t\tif (response === '1') {\n\n\t\t\t\t\t\t//clear post object\n\t\t\t\t\t\tself.branch_entry_post_obj = {};\n\n\t\t\t\t\t\t// //halt execution and flag the branch rows just uploaded as synced\n\t\t\t\t\t\tEC.Update.setBranchEntryAsSynced(self.branch_rows_to_sync).then(function() {\n\n\t\t\t\t\t\t\t//entry rows synced, upload next entry (if any)\n\t\t\t\t\t\t\tself.action = EC.Const.BRANCH_RECURSION;\n\t\t\t\t\t\t\tEC.Select.getOneBranchEntry(project_id, self.current_branch_form.name, false);\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t//a problem occured while uploading/saving data on the server side\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Recover an entry to be uploaded (it will be the last one the user tried to upload but the upload failed)\n\t\t\t\t\t\t */\n\n\t\t\t\t\t\t$.when(EC.Select.getOneBranchEntry(self.current_branch_form).then(function(branch_entry) {\n\n\t\t\t\t\t\t\t//Entry found, prepare entry for upload\n\t\t\t\t\t\t\tEC.Upload.current_entry = branch_entry;\n\n\t\t\t\t\t\t\tEC.Notification.hideProgressDialog();\n\t\t\t\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"upload_error\"));\n\n\t\t\t\t\t\t\tself.branch_rows_to_sync.length = 0;\n\n\t\t\t\t\t\t}));\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\terror : function(request, status, error) {\n\n\t\t\t\t\t//show request error\n\t\t\t\t\tconsole.log(status + \", \" + error);\n\t\t\t\t\tconsole.log('request: ' + JSON.stringify(request));\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Recover an entry to be uploaded (it will be the last one the user tried to upload but the upload failed)\n\t\t\t\t\t */\n\n\t\t\t\t\t$.when(EC.Select.getOneBranchEntry(self.current_branch_form).then(function(entry) {\n\n\t\t\t\t\t\t//Entry found, prepare entry for upload\n\t\t\t\t\t\tEC.Upload.current_entry = entry;\n\t\t\t\t\t\tself.branch_rows_to_sync.length = 0;\n\t\t\t\t\t\tEC.Notification.hideProgressDialog();\n\n\t\t\t\t\t\t//connection lost BEFORE tryng the ajax request\n\t\t\t\t\t\tif (status === \"error\" && error === \"\") {\n\n\t\t\t\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"connection_lost\"));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//server timeout\n\t\t\t\t\t\t//connection lost BEFORE tryng the ajax request\n\t\t\t\t\t\tif (status === \"timeout\" && error === \"timeout\") {\n\n\t\t\t\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"connection_timeout\"));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t});\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Upload));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/*\n *\n * Comments here - todo\n *\n */\nvar EC = EC || {};\nEC.Upload = EC.Upload || {};\nEC.Upload = ( function(module) {\"use strict\";\n\n\t\tmodule.postOneHierarchyEntry = function() {\n\n\t\t\tvar self = this;\n\t\t\tvar upload_URL;\n\t\t\tvar project_id = parseInt(window.localStorage.project_id, 10);\n\n\t\t\tfunction _sendRequest() {\n\n\t\t\t\t$.ajax({\n\t\t\t\t\ttype : \"POST\",\n\t\t\t\t\turl : upload_URL,\n\t\t\t\t\tcrossDomain : true,\n\t\t\t\t\ttimeout : 20000, //timeout after 20 secs\n\t\t\t\t\tdata : $.param(self.hierarchy_entry_post_obj), //use $.param() to convert the object to a query string (?key=value&key2=value2...)\n\t\t\t\t\tsuccess : function(response) {\n\n\t\t\t\t\t\t//server response is 1 when successful: need to create a better object on the server side\n\t\t\t\t\t\tif (response === '1') {\n\n\t\t\t\t\t\t\t//clear post object\n\t\t\t\t\t\t\tself.hierarchy_entry_post_obj = {};\n\n\t\t\t\t\t\t\t// //halt execution and flag the hierarchy rows just uploaded as synced\n\t\t\t\t\t\t\tEC.Update.setHierarchyEntryAsSynced(self.hierarchy_rows_to_sync).then(function() {\n\n\t\t\t\t\t\t\t\t//entry rows synced, upload next entry (if any)\n\t\t\t\t\t\t\t\tself.action = EC.Const.HIERARCHY_RECURSION;\n\t\t\t\t\t\t\t\tEC.Select.getOneHierarchyEntry(self.current_form, false);\n\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t//a problem occured while uploading/saving data on the server side\n\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Recover an entry to be uploaded (it will be the last one the user tried to upload but the upload failed)\n\t\t\t\t\t\t\t */\n\n\t\t\t\t\t\t\t$.when(EC.Select.getOneHierarchyEntry(self.current_form).then(function(entry) {\n\n\t\t\t\t\t\t\t\t//Entry found, prepare entry for upload\n\t\t\t\t\t\t\t\tEC.Upload.current_entry = entry;\n\n\t\t\t\t\t\t\t\tEC.Notification.hideProgressDialog();\n\t\t\t\t\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"upload_error\"));\n\n\t\t\t\t\t\t\t\tself.hierarchy_rows_to_sync.length = 0;\n\n\t\t\t\t\t\t\t}));\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t},\n\t\t\t\t\terror : function(request, status, error) {\n\n\t\t\t\t\t\tEC.Notification.hideProgressDialog();\n\n\t\t\t\t\t\t//show request error\n\t\t\t\t\t\tconsole.log(status + \", \" + error);\n\t\t\t\t\t\tconsole.log('request: ' + JSON.stringify(request));\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Recover an entry to be uploaded (it will be the last one the user tried to upload but the upload failed)\n\t\t\t\t\t\t */\n\n\t\t\t\t\t\t$.when(EC.Select.getOneHierarchyEntry(self.current_form, true).then(function(entry) {\n\n\t\t\t\t\t\t\t//Entry found, prepare entry for upload\n\t\t\t\t\t\t\tEC.Upload.current_entry = entry;\n\t\t\t\t\t\t\tself.hierarchy_rows_to_sync.length = 0;\n\t\t\t\t\t\t\tEC.Notification.hideProgressDialog();\n\n\t\t\t\t\t\t\t//connection lost BEFORE tryng the ajax request\n\t\t\t\t\t\t\tif (status === \"error\" && error === \"\") {\n\n\t\t\t\t\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"connection_lost\"));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//server timeout\n\t\t\t\t\t\t\t//connection lost BEFORE tryng the ajax request\n\t\t\t\t\t\t\tif (status === \"timeout\" && error === \"timeout\") {\n\n\t\t\t\t\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), EC.Localise.getTranslation(\"connection_timeout\"));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//TODO: SQL issues\n\t\t\t\t\t\t\tif (request.status === 405) {\n\t\t\t\t\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), request.responseText);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//TODO / network issues\n\t\t\t\t\t\t\tif (request.status === 403) {\n\t\t\t\t\t\t\t\tEC.Notification.showAlert(EC.Localise.getTranslation(\"error\"), error + EC.Localise.getTranslation(\"check_your_internet\"));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}));\n\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\n\t\t\tconsole.log(self.hierarchy_entry_post_obj);\n\n\t\t\tupload_URL = self.getUploadURL();\n\n\t\t\t//set upload URL for this project if not in localStorage yet\n\t\t\tif (!EC.Utils.isChrome() && !upload_URL) {\n\t\t\t\t$.when(EC.Select.getUploadURL(project_id)).then(function(the_project_url) {\n\t\t\t\t\t//enable upload data button\n\t\t\t\t\tconsole.log(\"Project URL is: \" + the_project_url);\n\t\t\t\t\tupload_URL = the_project_url;\n\t\t\t\t\t_sendRequest();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t_sendRequest();\n\t\t\t}\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Upload));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/*\n *\n * Comments here - todo\n *\n */\nvar EC = EC || {};\nEC.Upload = EC.Upload || {};\nEC.Upload = ( function(module) {\"use strict\";\n\n\t\tvar branch_entry;\n\t\tvar self;\n\n\t\tmodule.branch_entry_post_obj = {};\n\n\t\tmodule.prepareOneBranchEntry = function(the_table, the_entry) {\n\n\t\t\tvar current_ref;\n\t\t\tvar current_value;\n\t\t\tvar parent_ref;\n\t\t\tvar parent_value;\n\t\t\tvar branch_entry = the_entry;\n\n\t\t\tself = this;\n\t\t\tself.values = branch_entry.values;\n\t\t\tself.branch_entry_key = branch_entry.entry_key;\n\t\t\tself.branch_rows_to_sync = [];\n\n\t\t\t//table name\n\t\t\tself.branch_entry_post_obj.table = the_table;\n\n\t\t\t//hierarchy entry owning thi branch\n\t\t\tself.branch_entry_post_obj[branch_entry.hierarchy_entry_key_ref] = branch_entry.hierarchy_entry_key_value;\n\n\t\t\t//timestamp when entry is first created\n\t\t\tself.branch_entry_post_obj.ecTimeCreated = branch_entry.created_on;\n\n\t\t\t//phone uuid\n\t\t\tself.branch_entry_post_obj.ecPhoneID = EC.Utils.getPhoneUUID();\n\n\t\t\t//append entry values to main entry object to be posted\n\t\t\tself.appendBranchEntryValue(self.values.shift(), self.branch_entry_key);\n\n\t\t};\n\n\t\tmodule.appendBranchEntryValue = function(the_entry_value) {\n\n\t\t\tvar self = this;\n\t\t\tvar current_value;\n\t\t\tvar current_ref;\n\t\t\tvar branch_form;\n\n\t\t\tcurrent_value = the_entry_value.value;\n\t\t\tcurrent_ref = the_entry_value.ref;\n\n\t\t\t/*Keep track of row _id (if _id is empty, it is because the location value was split into 4 parts but just one row is saved in the database)\n\t\t\t *rows _ids are needed later to sync the branch entry after a successful upload\n\t\t\t */\n\n\t\t\tif (the_entry_value._id !== \"\") {\n\t\t\t\tself.branch_rows_to_sync.push({\n\t\t\t\t\t_id : the_entry_value._id\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//common value, add it to main entry object\n\t\t\tself.branch_entry_post_obj[current_ref] = current_value;\n\n\t\t\t//append next value(if any)\n\t\t\tif (self.values.length > 0) {\n\n\t\t\t\tself.appendBranchEntryValue(self.values.shift(), self.branch_entry_key);\n\n\t\t\t} else {\n\n\t\t\t\t//no more values to append to the object to be posted for this branch entry, so post 1 single branch entry\n\t\t\t\tself.postOneBranchEntry();\n\t\t\t}\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Upload));\n","var EC = EC || {};\nEC.Upload = EC.Upload || {};\nEC.Upload = (function (module) {\n    'use strict';\n\n    //property to hold arrays of values across module\n    module.values = [];\n    //property to hold main entry key value across module\n    module.main_entry_key = [];\n    //branch_form name across modules\n    module.branch_form_name = '';\n    module.hierarchy_entry_post_obj = {};\n\n    /**\n     * Post a single row (server side) which consists of all the input values for a form entry\n     */\n    module.prepareOneHierarchyEntry = function (the_table, the_entry) {\n\n        var self = this;\n        var parent_ref;\n        var parent_value;\n        var entry = the_entry;\n\n        self.values = entry.values;\n        self.hierarchy_rows_to_sync = [];\n\n        //table name\n        self.hierarchy_entry_post_obj.table = the_table;\n\n        //timestamp when entry is first created\n        self.hierarchy_entry_post_obj.ecTimeCreated = entry.created_on;\n\n        //phone uuid\n        self.hierarchy_entry_post_obj.ecPhoneID = EC.Utils.getPhoneUUID();\n\n        //add parent ref and parent value for a child form (if defined)\n        if (entry.parent_ref !== undefined) {\n\n            parent_ref = entry.parent_ref;\n            parent_value = entry.parent_key_value;\n            self.hierarchy_entry_post_obj[parent_ref] = parent_value;\n        }\n        //append entry values to main entry object to be posted\n        self.appendEntryValue(self.values.shift());\n    };\n\n    module.appendEntryValue = function (the_entry_value) {\n\n        var self = this;\n        var current_value;\n        var current_ref;\n\n        current_value = the_entry_value.value;\n        current_ref = the_entry_value.ref;\n\n        //keep track of row _id (if _id is empty, it is because the location value was split into 4 parts but just one row is saved in the database)\n        if (the_entry_value._id !== '') {\n            self.hierarchy_rows_to_sync.push({\n                _id: the_entry_value._id,\n                type: the_entry_value.type\n            });\n        }\n\n        /*if the current value is a branch skip it, we do not need it as part of the hierarchy post\n         * Branches need to be uploaded separately, AFTER all hierarchy entries have been uploaded\n         */\n        if (the_entry_value.type !== EC.Const.BRANCH) {\n            //common value, add it to main entry object\n            self.hierarchy_entry_post_obj[current_ref] = current_value;\n        }\n\n        //append next value(if any)\n        if (self.values.length > 0) {\n\n            self.appendEntryValue(self.values.shift());\n\n        } else {\n\n            //TODO: no more values to append to the object to be posted for this main entry, so post 1 single main entry\n            console.log(self.hierarchy_entry_post_obj);\n            //no more values to append, post main entry now as all the branch entries have been uploaded\n            self.postOneHierarchyEntry();\n        }\n\n    };\n\n    return module;\n\n}(EC.Upload));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device*/\n/*\n *\n * Comments here TODO\n *\n */\nvar EC = EC || {};\nEC.Upload = EC.Upload || {};\nEC.Upload = ( function(module) {\n\t\t\"use strict\";\n\n\t\tmodule.renderUploadView = function(the_has_hard_reload_flag) {\n\n\t\t\tvar self = this;\n\t\t\tvar has_hard_reload = the_has_hard_reload_flag;\n\n\t\t\tself.project_name = window.localStorage.project_name;\n\t\t\tself.project_id = parseInt(window.localStorage.project_id, 10);\n\t\t\tself.has_branches = EC.Utils.projectHasBranches();\n\t\t\tself.hierarchy_forms = JSON.parse(window.localStorage.forms);\n\t\t\tself.current_form = self.hierarchy_forms.shift();\n\t\t\tself.current_entry = {};\n\t\t\tself.action = EC.Const.START_HIERARCHY_UPLOAD;\n\n\t\t\t//set label (page title)\n\t\t\tconsole.log(self.project_name.trunc(EC.Const.PROJECT_NAME_MAX_LENGTH));\n\t\t\t$(\"div#upload div[data-role='navbar'] ul li.title-tab span#upload-label span.project-name\").text(self.project_name.trunc(EC.Const.PROJECT_NAME_MAX_LENGTH));\n\n\t\t\t//bind view buttons\n\t\t\tself.bindUploadButtons(has_hard_reload, self);\n\n\t\t\t//Localise\n\t\t\tif (window.localStorage.DEVICE_LANGUAGE !== EC.Const.ENGLISH) {\n\t\t\t\tEC.Localise.applyToHTML(window.localStorage.DEVICE_LANGUAGE);\n\t\t\t}\n\n\t\t\t//callback when a single un-synced hierarchy entry is found\n\t\t\tfunction _onOneHierarchyEntryFound(the_entry) {\n\n\t\t\t\t//Entry found, prepare entry for upload\n\t\t\t\tself.current_entry = the_entry;\n\n\t\t\t\t//keep track this is a hierarchy entry\n\t\t\t\tself.is_branch_entry = false;\n\n\t\t\t\t//enable upload data button\n\t\t\t\tself.upload_data_btn.removeClass(\"ui-disabled\");\n\n\t\t\t\t//hide all synced message\n\t\t\t\tself.all_synced_message.addClass('hidden');\n\t\t\t}\n\n\t\t\t//callback when no hierarchy un-synced entries are found upon first page load\n\t\t\tfunction _onOneHierarchyEntryNotFound() {\n\n\t\t\t\tconsole.log(\"No unsynced hierarchy data entry found\");\n\n\t\t\t\t//reset branch forms array to get rid of old cahced forms\n\t\t\t\tself.branch_forms = [];\n\n\t\t\t\t//no hierarchy entry found, if the project has branches check for any un-synced\n\t\t\t\t// branch entries\n\t\t\t\tif (self.has_branches) {\n\n\t\t\t\t\tvar _onOneBranchEntryFound = function(the_branch_entry) {\n\n\t\t\t\t\t\t//Entry found, prepare entry for upload\n\t\t\t\t\t\tself.current_branch_entry = the_branch_entry;\n\n\t\t\t\t\t\t//keep track this is a branch entry\n\t\t\t\t\t\tself.is_branch_entry = true;\n\n\t\t\t\t\t\t//enable upload data button\n\t\t\t\t\t\tself.upload_data_btn.removeClass(\"ui-disabled\");\n\t\t\t\t\t\tself.all_synced_message.addClass('hidden');\n\t\t\t\t\t};\n\n\t\t\t\t\tvar _onOneBranchEntryNotFound = function() {\n\n\t\t\t\t\t\t//no branch entries found, handle media\n\t\t\t\t\t\tself.handleMedia();\n\n\t\t\t\t\t};\n\n\t\t\t\t\t//start brach upload\n\t\t\t\t\tself.action = EC.Const.START_BRANCH_UPLOAD;\n\n\t\t\t\t\t//get branch forms for this project BEFORE tryng to look for a branch entry\n\t\t\t\t\t$.when(EC.Select.getBranchForms(self.project_id)).then(function(the_branch_forms) {\n\n\t\t\t\t\t\tself.branch_forms = the_branch_forms;\n\t\t\t\t\t\tself.current_branch_form = self.branch_forms.shift();\n\n\t\t\t\t\t\t//look for a branch entry for the first form\n\t\t\t\t\t\t$.when(EC.Select.getOneBranchEntry(self.project_id, self.current_branch_form.name, true).then(_onOneBranchEntryFound, _onOneBranchEntryNotFound));\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\t/* This project does not have branches: since no hierarchy entries were found,\n\t\t\t\t\t * check if we have any media ready to upload (is_data_synced = 1 AND\n\t\t\t\t\t * is_media_synced = 0)\n\t\t\t\t\t */\n\t\t\t\t\tself.handleMedia();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//let's start looking at hierarchy branches first, then branches\n\t\t\tself.is_branch_image = false;\n\t\t\tself.is_branch_audio = false;\n\t\t\tself.is_branch_video = false;\n\n\t\t\t//get first hierarchy entry not yet synced. The approach is to upload and sync a\n\t\t\t// single entry (cluster of rows) at a time\n\t\t\t$.when(EC.Select.getOneHierarchyEntry(self.current_form, true).then(_onOneHierarchyEntryFound, _onOneHierarchyEntryNotFound));\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Upload));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery, cordova, device*/\n/*\n *\n * Comments here TODO\n *\n */\nvar EC = EC || {};\nEC.Upload = EC.Upload || {};\nEC.Upload = ( function(module) {\n\t\t\"use strict\";\n\n\t\tmodule.renderUploadViewFeedback = function(is_successful) {\n\n\t\t\tvar self = this;\n\n\t\t\t//notify user all data were uploaded successfully\n\t\t\tEC.Notification.hideProgressDialog();\n\n\t\t\t//show upload success notification only after an upload. When the user first\n\t\t\t// request the uplad view, that will not be shown\n\t\t\tif (self.action === EC.Const.STOP_HIERARCHY_UPLOAD || self.action === EC.Const.STOP_BRANCH_UPLOAD) {\n\t\t\t\tif (is_successful) {\n\n\t\t\t\t\t//disable data upload button as no data to upload any more\n\t\t\t\t\tself.upload_data_btn.addClass('ui-disabled');\n\t\t\t\t\tself.all_synced_message.removeClass('hidden');\n\n\t\t\t\t\tEC.Notification.showToast(EC.Localise.getTranslation(\"data_upload_success\"), \"short\");\n\n\t\t\t\t\t//look for media to upload (if any)\n\t\t\t\t\tself.handleMedia();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\treturn module;\n\n\t}(EC.Upload));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n/*\n *\n * Comments here - todo\n *\n */\nvar EC = EC || {};\nEC.Upload = EC.Upload || {};\nEC.Upload = ( function(module) {\n\t\t\"use strict\";\n\n\t\tvar upload_images_btn;\n\t\tvar upload_audios_btn;\n\t\tvar upload_videos_btn;\n\n\t\tmodule.uploadNextFile = function(the_media_type) {\n\n\t\t\tvar self = this;\n\t\t\tvar media_dir;\n\t\t\tvar project_id = parseInt(window.localStorage.project_id, 10);\n\t\t\tvar all_synced_message = $('div#upload div#upload-options .all-synced-message');\n\n\t\t\t//upload another file of same type (if any)\n\t\t\tswitch(the_media_type) {\n\n\t\t\t\tcase EC.Const.PHOTO:\n\n\t\t\t\t\t//get next image (if any)\n\t\t\t\t\t$.when(EC.Select.getOneHierarchyMediaFile(project_id, EC.Const.PHOTO).then(function(the_image) {\n\n\t\t\t\t\t\t//post image\n\t\t\t\t\t\tmedia_dir = EC.Const.PHOTO_DIR;\n\t\t\t\t\t\tEC.Upload.is_branch_image = false;\n\t\t\t\t\t\tEC.File.uploadFile(the_image, media_dir);\n\n\t\t\t\t\t}, function() {\n\n\t\t\t\t\t\t/* no more hierarchy images to post\n\t\t\t\t\t\t * check branches for images\n\t\t\t\t\t\t */\n\t\t\t\t\t\t$.when(EC.Select.getOneBranchPhotoFile(project_id)).then(function(the_branch_image) {\n\n\t\t\t\t\t\t\t//post image\n\t\t\t\t\t\t\tmedia_dir = EC.Const.PHOTO_DIR;\n\t\t\t\t\t\t\tEC.Upload.is_branch_image = true;\n\t\t\t\t\t\t\tEC.File.uploadFile(the_branch_image, media_dir);\n\n\t\t\t\t\t\t}, function() {\n\n\t\t\t\t\t\t\t//disable upload images button, as no more images to upload\n\t\t\t\t\t\t\tupload_images_btn = $('div#upload div#upload-options div#upload-images-btn');\n\t\t\t\t\t\t\tupload_images_btn.addClass(\"ui-disabled\");\n\t\t\t\t\t\t\tself.photo_synced = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//if all sync show message\n\t\t\t\t\t\t\tif (!(self.audio_synced && self.photo_synced && self.video_synced)) {\n\t\t\t\t\t\t\t\tall_synced_message.addClass('hidden');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tall_synced_message.removeClass('hidden');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//notify user all data were uploaded successfully\n\t\t\t\t\t\t\tEC.Notification.hideProgressDialog();\n\n\t\t\t\t\t\t\t//show feedback message to user\n\t\t\t\t\t\t\tEC.Notification.showToast(EC.Localise.getTranslation(\"all_images_uploaded\"), \"short\");\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}));\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.AUDIO:\n\n\t\t\t\t\t//get next audio file (if any)\n\t\t\t\t\t$.when(EC.Select.getOneHierarchyMediaFile(project_id, EC.Const.AUDIO).then(function(the_audio) {\n\n\t\t\t\t\t\t//post audio file\n\t\t\t\t\t\tmedia_dir = EC.Const.AUDIO_DIR;\n\t\t\t\t\t\tEC.Upload.is_branch_audio = false;\n\t\t\t\t\t\tEC.File.uploadFile(the_audio, media_dir);\n\n\t\t\t\t\t}, function() {\n\n\t\t\t\t\t\t/* No more audio files to post\n\t\t\t\t\t\t * check branches for audios\n\t\t\t\t\t\t */\n\t\t\t\t\t\t$.when(EC.Select.getOneBranchAudioFile(project_id)).then(function(the_branch_audio) {\n\n\t\t\t\t\t\t\t//post image\n\t\t\t\t\t\t\tmedia_dir = EC.Const.AUDIO_DIR;\n\t\t\t\t\t\t\tEC.Upload.is_branch_audio = true;\n\t\t\t\t\t\t\tEC.File.uploadFile(the_branch_audio, media_dir);\n\n\t\t\t\t\t\t}, function() {\n\n\t\t\t\t\t\t\t//disable upload audios button, as no more audio files to upload\n\t\t\t\t\t\t\tupload_audios_btn = $('div#upload div#upload-options div#upload-audios-btn');\n\t\t\t\t\t\t\tupload_audios_btn.addClass(\"ui-disabled\");\n\t\t\t\t\t\t\tself.audio_synced = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//if all sync show message\n\t\t\t\t\t\t\tif (!(self.audio_synced && self.photo_synced && self.video_synced)) {\n\t\t\t\t\t\t\t\tall_synced_message.addClass('hidden');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tall_synced_message.removeClass('hidden');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//notify user all data were uploaded successfully\n\t\t\t\t\t\t\tEC.Notification.hideProgressDialog();\n\n\t\t\t\t\t\t\t//show feedback message to user\n\t\t\t\t\t\t\tEC.Notification.showToast(EC.Localise.getTranslation(\"all_audios_uploaded\"), \"short\");\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EC.Const.VIDEO:\n\n\t\t\t\t\t//get next image (if any)\n\t\t\t\t\t$.when(EC.Select.getOneHierarchyMediaFile(project_id, EC.Const.VIDEO).then(function(the_video) {\n\n\t\t\t\t\t\t//post video\n\t\t\t\t\t\tmedia_dir = EC.Const.VIDEO_DIR;\n\t\t\t\t\t\tEC.File.uploadFile(the_video, media_dir);\n\n\t\t\t\t\t}, function() {\n\n\t\t\t\t\t\t/* No more video files to post\n\t\t\t\t\t\t * check branches for video files\n\t\t\t\t\t\t */\n\t\t\t\t\t\t$.when(EC.Select.getOneBranchVideoFile(project_id)).then(function(the_branch_video) {\n\n\t\t\t\t\t\t\t//post image\n\t\t\t\t\t\t\tmedia_dir = EC.Const.VIDEO_DIR;\n\t\t\t\t\t\t\tEC.Upload.is_branch_video = true;\n\t\t\t\t\t\t\tEC.File.uploadFile(the_branch_video, media_dir);\n\n\t\t\t\t\t\t}, function() {\n\n\t\t\t\t\t\t\t//disable upload audios button, as no more audio files to upload\n\t\t\t\t\t\t\tupload_videos_btn = $('div#upload div#upload-options div#upload-videos-btn');\n\t\t\t\t\t\t\tupload_videos_btn.addClass(\"ui-disabled\");\n\t\t\t\t\t\t\tself.video_synced = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//if all sync show message\n\t\t\t\t\t\t\tif (!(self.audio_synced && self.photo_synced && self.video_synced)) {\n\t\t\t\t\t\t\t\tall_synced_message.addClass('hidden');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tall_synced_message.removeClass('hidden');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//notify user all data were uploaded successfully\n\t\t\t\t\t\t\tEC.Notification.hideProgressDialog();\n\n\t\t\t\t\t\t\t//show feedback message to user\n\t\t\t\t\t\t\tEC.Notification.showToast(EC.Localise.getTranslation(\"all_videos_uploaded\"), \"short\");\n\t\t\t\t\t\t});\n\t\t\t\t\t}));\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Upload));\n","/*jslint vars: true , nomen: true devel: true, plusplus: true*/\n/*global $, jQuery*/\n\n/**\n * @module EC\n * @submodule Test\n *\n */\n\nvar EC = EC || {};\nEC.Test = EC.Test || {};\nEC.Test = ( function(module) {\"use strict\";\n\n\t\tvar total;\n\t\tvar deferred;\n\n\t\tfunction _makeString(how_long) {\n\n\t\t\tvar text = \"\";\n\t\t\tvar possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\t\t\tvar i;\n\n\t\t\tfor ( i = 0; i < how_long; i++) {\n\t\t\t\ttext += possible.charAt(Math.floor(Math.random() * possible.length));\n\t\t\t}\n\t\t\treturn text;\n\t\t}\n\n\t\tvar _insertFormValuesTX = function(tx) {\n\n\t\t\tvar i;\n\t\t\tvar iLength = total;\n\t\t\tvar query;\n\t\t\tvar obj;\n\t\t\tvar remote_flag = 0;\n\n\t\t\tfor ( i = 0; i < iLength; i++) {\n\n\t\t\t\tquery = \"\";\n\t\t\t\tobj = {};\n\t\t\t\tobj.parent = \"\";\n\t\t\t\tobj.is_data_synced = 0;\n\t\t\t\tobj.is_media_synced = 0;\n\t\t\t\tobj.created_on = EC.Utils.getTimestamp();\n\n\t\t\t\tif (i % 2 === 0) {\n\n\t\t\t\t\t//this is the ID input\n\t\t\t\t\tobj.label = \"ID\";\n\t\t\t\t\tobj.ref = \"id\";\n\n\t\t\t\t\tquery += 'INSERT INTO ec_data (';\n\t\t\t\t\tquery += 'input_id, ';\n\t\t\t\t\tquery += 'form_id, ';\n\t\t\t\t\tquery += 'position, ';\n\t\t\t\t\tquery += 'parent, ';\n\t\t\t\t\tquery += 'label, ';\n\t\t\t\t\tquery += 'ref, ';\n\t\t\t\t\tquery += 'value, ';\n\t\t\t\t\tquery += 'is_title, ';\n\t\t\t\t\tquery += 'entry_key, ';\n\t\t\t\t\tquery += 'type, ';\n\t\t\t\t\tquery += 'created_on, ';\n\t\t\t\t\tquery += 'is_data_synced, ';\n\t\t\t\t\tquery += 'is_remote, ';\n\t\t\t\t\tquery += 'is_media_synced) ';\n\t\t\t\t\tquery += 'VALUES (\"';\n\t\t\t\t\tquery += 1 + '\", \"';\n\t\t\t\t\tquery += 1 + '\", \"';\n\t\t\t\t\tquery += 1 + '\", \"';\n\t\t\t\t\tquery += obj.parent + '\", \"';\n\t\t\t\t\tquery += obj.label + '\", \"';\n\t\t\t\t\tquery += obj.ref + '\", \"';\n\t\t\t\t\tquery += i+10000 + '\", \"';\n\t\t\t\t\tquery += 1 + '\", \"';\n\t\t\t\t\tquery += i+10000 + '\", \"';\n\t\t\t\t\tquery += EC.Const.INTEGER + '\", \"';\n\t\t\t\t\tquery += obj.created_on + '\", \"';\n\t\t\t\t\tquery += obj.is_data_synced + '\", \"';\n\t\t\t\t\tquery += remote_flag + '\", \"';\n\t\t\t\t\tquery += obj.is_media_synced + '\");';\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//this is the name input\n\t\t\t\t\tobj.label = \"Name\";\n\t\t\t\t\tobj.ref = \"ecplus_form_ctrl2\";\n\n\t\t\t\t\tquery += 'INSERT INTO ec_data (';\n\t\t\t\t\tquery += 'input_id, ';\n\t\t\t\t\tquery += 'form_id, ';\n\t\t\t\t\tquery += 'position, ';\n\t\t\t\t\tquery += 'parent, ';\n\t\t\t\t\tquery += 'label, ';\n\t\t\t\t\tquery += 'ref, ';\n\t\t\t\t\tquery += 'value, ';\n\t\t\t\t\tquery += 'is_title, ';\n\t\t\t\t\tquery += 'entry_key, ';\n\t\t\t\t\tquery += 'type, ';\n\t\t\t\t\tquery += 'created_on, ';\n\t\t\t\t\tquery += 'is_data_synced, ';\n\t\t\t\t\tquery += 'is_remote, ';\n\t\t\t\t\tquery += 'is_media_synced) ';\n\t\t\t\t\tquery += 'VALUES (\"';\n\t\t\t\t\tquery += 2 + '\", \"';\n\t\t\t\t\tquery += 1 + '\", \"';\n\t\t\t\t\tquery += 2 + '\", \"';\n\t\t\t\t\tquery += obj.parent + '\", \"';\n\t\t\t\t\tquery += obj.label + '\", \"';\n\t\t\t\t\tquery += obj.ref + '\", \"';\n\t\t\t\t\tquery += _makeString(25) + '\", \"';\n\t\t\t\t\tquery += 1 + '\", \"';\n\t\t\t\t\tquery += i-1 + 10000+ '\", \"';\n\t\t\t\t\tquery += EC.Const.TEXT + '\", \"';\n\t\t\t\t\tquery += obj.created_on + '\", \"';\n\t\t\t\t\tquery += obj.is_data_synced + '\", \"';\n\t\t\t\t\tquery += remote_flag + '\", \"';\n\t\t\t\t\tquery += obj.is_media_synced + '\");';\n\n\t\t\t\t}\n\n\t\t\t\ttx.executeSql(query, [], _insertFormValuesSQLSuccessCB, _errorCB);\n\n\t\t\t}//for\n\n\t\t};\n\n\t\tvar _onupdateHierarchyEntriesCounterSQLCB = function() {\n\t\t};\n\n\t\tvar _updateHierarchyEntriesCounterTX = function(tx) {\n\n\t\t\tvar query = 'UPDATE ec_forms SET entries = entries + ' + total/2 + ' WHERE _id=?';\n\n\t\t\ttx.executeSql(query, [1], _onupdateHierarchyEntriesCounterSQLCB, _errorCB);\n\t\t};\n\n\t\tvar _onCounterUpdateSuccessCB = function() {\n\n\t\t\tdeferred.resolve();\n\t\t};\n\n\t\tvar _insertFormValuesSQLSuccessCB = function() {\n\t\t\tconsole.log(\"FORM VALUE SQL QUERY SUCCESS\");\n\t\t};\n\n\t\tvar _errorCB = function(the_tx, the_result) {\n\t\t\tconsole.log(the_result);\n\t\t\tdeferred.reject();\n\t\t};\n\n\t\tvar _insertFormValuesSuccessCB = function() {\n\n\t\t\tEC.db.transaction(_updateHierarchyEntriesCounterTX, _errorCB, _onCounterUpdateSuccessCB);\n\n\t\t};\n\n\t\t/*\n\t\t * Commit a form to database; each value is a row in the table ec_data\n\t\t * a single entry get multiple rows\n\t\t */\n\t\tmodule.insertEntries = function(the_total) {\n\n\t\t\ttotal = the_total;\n\t\t\tdeferred = new $.Deferred();\n\n\t\t\tEC.db.transaction(_insertFormValuesTX, _errorCB, _insertFormValuesSuccessCB);\n\n\t\t\treturn deferred.promise();\n\n\t\t};\n\n\t\treturn module;\n\n\t}(EC.Test));\n"],"sourceRoot":"/source/"}